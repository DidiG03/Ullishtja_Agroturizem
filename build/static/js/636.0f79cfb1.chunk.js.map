{"version":3,"file":"static/js/636.0f79cfb1.chunk.js","mappings":"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","sources":["components/GoogleReviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport googleReviewsService from '../services/googleReviews';\nimport './GoogleReviews.css';\n\nconst GoogleReviews = ({ currentLanguage, translations }) => {\n  const [reviewsData, setReviewsData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [displayCount, setDisplayCount] = useState(3);\n  const [expandedReviews, setExpandedReviews] = useState(new Set());\n  const [allHighRatingReviews, setAllHighRatingReviews] = useState([]);\n\n  useEffect(() => {\n    const loadReviews = async () => {\n      try {\n        const data = await googleReviewsService.fetchGoogleReviews();\n        // Use new daily shuffle method instead of getHighRatingReviews\n        const dailyShuffledReviews = googleReviewsService.getDailyShuffledReviews(data, 3);\n        setReviewsData(dailyShuffledReviews);\n        setAllHighRatingReviews(dailyShuffledReviews.allHighRatingReviews || dailyShuffledReviews.reviews);\n      } catch (error) {\n        console.error('Error loading reviews:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadReviews();\n  }, []);\n\n  const handleShowMore = () => {\n    setDisplayCount(prev => {\n      const newCount = Math.min(prev + 3, allHighRatingReviews.length);\n      return newCount;\n    });\n  };\n\n  const handleShowLess = () => {\n    setDisplayCount(3);\n  };\n\n  // Update displayed reviews when count changes\n  useEffect(() => {\n    if (allHighRatingReviews.length > 0) {\n      const currentReviews = allHighRatingReviews.slice(0, displayCount);\n      setReviewsData(prev => ({\n        ...prev,\n        reviews: currentReviews\n      }));\n    }\n  }, [displayCount, allHighRatingReviews]);\n\n  const toggleReviewExpansion = (reviewId) => {\n    setExpandedReviews(prev => {\n      const newExpanded = new Set(prev);\n      if (newExpanded.has(reviewId)) {\n        newExpanded.delete(reviewId);\n      } else {\n        newExpanded.add(reviewId);\n      }\n      return newExpanded;\n    });\n  };\n\n  const isReviewExpanded = (reviewId) => {\n    return expandedReviews.has(reviewId);\n  };\n\n  const shouldShowExpandButton = (text) => {\n    return text.length > 150; // Show expand button if text is longer than 150 characters\n  };\n\n  const getTruncatedText = (text) => {\n    if (text.length <= 150) return text;\n    return text.substring(0, 150) + '...';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"reviews-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>{translations.googleReviews.loadingReviews}</p>\n      </div>\n    );\n  }\n\n  if (!reviewsData || reviewsData.reviews.length === 0) {\n    return (\n      <div className=\"reviews-error\">\n        <p>{translations.googleReviews.unableToLoad}</p>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"google-reviews-section\">\n      <div className=\"container\">\n        <div className=\"reviews-header\">\n          <h2>{translations.googleReviews.title}</h2>\n          <div className=\"overall-rating\">\n            <div className=\"rating-display\">\n              <div className=\"rating-stars\">\n                {googleReviewsService.generateStarDisplay(reviewsData.averageRating)}\n              </div>\n              <div className=\"rating-info\">\n                <span className=\"rating-number\">\n                  {googleReviewsService.formatRating(reviewsData.averageRating)}\n                </span>\n                <span className=\"rating-based-on\">\n                  {translations.googleReviews.basedOn} {reviewsData.totalReviews} {translations.googleReviews.googleReviews}\n                </span>\n              </div>\n            </div>\n            <a \n              href={googleReviewsService.getReviewsUrl()} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"google-link\"\n            >\n              <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google\" />\n              {translations.googleReviews.viewOnGoogle}\n            </a>\n          </div>\n        </div>\n\n        <div className=\"reviews-grid\">\n          {reviewsData.reviews.map((review) => (\n            <div key={review.id} className=\"review-card\">\n              <div className=\"review-header\">\n                <div className=\"reviewer-info\">\n                  {review.authorPhotoUrl ? (\n                    <img \n                      src={review.authorPhotoUrl} \n                      alt={review.authorName} \n                      className=\"reviewer-photo\"\n                      onError={(e) => {\n                        e.target.style.display = 'none';\n                        e.target.nextSibling.style.display = 'flex';\n                      }}\n                    />\n                  ) : null}\n                  <div \n                    className=\"reviewer-photo-placeholder\"\n                    style={{ display: review.authorPhotoUrl ? 'none' : 'flex' }}\n                  >\n                    {review.authorName.charAt(0).toUpperCase()}\n                  </div>\n                  <div className=\"reviewer-details\">\n                    <h4 className=\"reviewer-name\">{review.authorName}</h4>\n                    <span className=\"review-time\">{review.relativeTimeDescription}</span>\n                  </div>\n                </div>\n                <div className=\"review-rating\">\n                  {[...Array(5)].map((_, index) => (\n                    <span \n                      key={index} \n                      className={`star ${index < review.rating ? 'filled' : 'empty'}`}\n                    >\n                      â˜…\n                    </span>\n                  ))}\n                </div>\n              </div>\n              <div className=\"review-text-container\">\n                <p className=\"review-text\">\n                  {isReviewExpanded(review.id) ? review.text : getTruncatedText(review.text)}\n                </p>\n                {shouldShowExpandButton(review.text) && (\n                  <button \n                    className=\"expand-review-btn\"\n                    onClick={() => toggleReviewExpansion(review.id)}\n                  >\n                    {isReviewExpanded(review.id) ? \n                      (translations.googleReviews.showLess || 'Show Less') : \n                      (translations.googleReviews.seeMore || 'See More')\n                    }\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {allHighRatingReviews.length > 3 && (\n          <div className=\"reviews-actions\">\n            {displayCount < allHighRatingReviews.length ? (\n              <button className=\"show-more-btn\" onClick={handleShowMore}>\n                {translations.googleReviews.showMoreReviews} ({allHighRatingReviews.length - displayCount} {translations.googleReviews.remaining})\n              </button>\n            ) : (\n              <button className=\"show-less-btn\" onClick={handleShowLess}>\n                {translations.googleReviews.showLessReviews}\n              </button>\n            )}\n          </div>\n        )}\n\n        <div className=\"reviews-footer\">\n          <a \n            href={googleReviewsService.getWriteReviewUrl()} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"write-review-btn\"\n          >\n            {translations.googleReviews.writeReview}\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default GoogleReviews; "],"names":["_ref","currentLanguage","translations","reviewsData","setReviewsData","useState","loading","setLoading","displayCount","setDisplayCount","expandedReviews","setExpandedReviews","Set","allHighRatingReviews","setAllHighRatingReviews","useEffect","async","data","googleReviewsService","fetchGoogleReviews","dailyShuffledReviews","getDailyShuffledReviews","reviews","error","console","loadReviews","length","currentReviews","slice","prev","_objectSpread","isReviewExpanded","reviewId","has","shouldShowExpandButton","text","_jsxs","className","children","_jsx","googleReviews","loadingReviews","title","generateStarDisplay","averageRating","formatRating","basedOn","totalReviews","href","getReviewsUrl","target","rel","src","alt","viewOnGoogle","map","review","authorPhotoUrl","authorName","onError","e","style","display","nextSibling","charAt","toUpperCase","relativeTimeDescription","Array","_","index","concat","rating","id","substring","onClick","toggleReviewExpansion","newExpanded","delete","add","showLess","seeMore","handleShowMore","Math","min","showMoreReviews","remaining","handleShowLess","showLessReviews","getWriteReviewUrl","writeReview","unableToLoad"],"sourceRoot":""}