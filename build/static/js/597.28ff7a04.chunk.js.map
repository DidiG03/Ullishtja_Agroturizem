{"version":3,"file":"static/js/597.28ff7a04.chunk.js","mappings":"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","sources":["services/restaurantSettingsService.js","components/MenuManagement.js","components/RestaurantLayout.js","components/TimeSlotManagement.js","components/Dashboard.js"],"sourcesContent":["class RestaurantSettingsService {\n  constructor() {\n    // Use relative paths in production (Vercel functions)\n    const API_BASE_URL = process.env.NODE_ENV === 'production'\n      ? ''\n      : process.env.REACT_APP_API_URL || 'http://localhost:3001';\n    this.baseUrl = `${API_BASE_URL}/api/restaurant-settings`;\n  }\n\n  async getSettings() {\n    try {\n      const response = await fetch(this.baseUrl);\n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch settings');\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error fetching restaurant settings:', error);\n      throw error;\n    }\n  }\n\n  async updateSettings(settingsData) {\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(settingsData),\n      });\n      \n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update settings');\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error updating restaurant settings:', error);\n      throw error;\n    }\n  }\n\n  // Helper method to validate settings data\n  validateSettings(settings) {\n    const errors = [];\n    \n    if (!settings.restaurantName) {\n      errors.push('Restaurant name is required');\n    }\n    \n    if (!settings.email) {\n      errors.push('Email is required');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(settings.email)) {\n      errors.push('Please enter a valid email address');\n    }\n    \n    if (!settings.phone) {\n      errors.push('Phone number is required');\n    }\n    \n    // Validate operating hours\n    if (settings.operatingHours) {\n      const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n      days.forEach(day => {\n        const dayHours = settings.operatingHours[day];\n        if (dayHours && !dayHours.closed) {\n          if (!dayHours.open || !dayHours.close) {\n            errors.push(`${day.charAt(0).toUpperCase() + day.slice(1)} hours are incomplete`);\n          }\n          if (dayHours.open >= dayHours.close) {\n            errors.push(`${day.charAt(0).toUpperCase() + day.slice(1)} opening time must be before closing time`);\n          }\n        }\n      });\n    }\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n}\n\nconst restaurantSettingsService = new RestaurantSettingsService();\nexport default restaurantSettingsService; ","import React, { useState, useEffect, useCallback } from 'react';\nimport MenuService from '../services/menuService';\nimport './MenuManagement.css';\n\nfunction MenuManagement() {\n  const [categories, setCategories] = useState([]);\n  const [menuItems, setMenuItems] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryForm, setShowCategoryForm] = useState(false);\n  const [showItemForm, setShowItemForm] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingItem, setEditingItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Form states\n  const [categoryForm, setCategoryForm] = useState({\n    nameAL: '',\n    nameEN: '',\n    nameIT: '',\n    slug: '',\n    displayOrder: 0\n  });\n\n  const [itemForm, setItemForm] = useState({\n    categoryId: '',\n    nameAL: '',\n    nameEN: '',\n    nameIT: '',\n    descriptionAL: '',\n    descriptionEN: '',\n    descriptionIT: '',\n    ingredientsAL: '',\n    ingredientsEN: '',\n    ingredientsIT: '',\n    price: '',\n    isVegetarian: false,\n    isSpicy: false,\n    isRecommended: false,\n    isNew: false,\n    imageUrl: '',\n    displayOrder: 0\n  });\n\n  const loadMenuItems = useCallback(async (categoryId = selectedCategory) => {\n    try {\n      const result = await MenuService.getMenuItems(categoryId);\n      if (result.success) {\n        setMenuItems(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load menu items');\n      }\n    } catch (error) {\n      setError('Failed to load menu items');\n      console.error(error);\n    }\n  }, [selectedCategory]);\n\n  const loadCategories = useCallback(async () => {\n    try {\n      setLoading(true);\n      const result = await MenuService.getCategories();\n      if (result.success) {\n        const categoriesData = result.data || [];\n        setCategories(categoriesData);\n        if (categoriesData.length > 0 && !selectedCategory) {\n          setSelectedCategory(categoriesData[0].id);\n          loadMenuItems(categoriesData[0].id);\n        }\n      } else {\n        setError(result.error || 'Failed to load categories');\n      }\n    } catch (error) {\n      setError('Failed to load categories');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedCategory, loadMenuItems]);\n\n  // Load data\n  useEffect(() => {\n    loadCategories();\n  }, [loadCategories]);\n\n  // Category handlers\n  const handleCategorySubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingCategory) {\n        await MenuService.updateCategory(editingCategory.id, categoryForm);\n      } else {\n        await MenuService.createCategory(categoryForm);\n      }\n      await loadCategories();\n      resetCategoryForm();\n    } catch (error) {\n      setError(`Failed to ${editingCategory ? 'update' : 'create'} category`);\n    }\n  };\n\n  const handleCategoryEdit = (category) => {\n    setEditingCategory(category);\n    setCategoryForm({\n      nameAL: category.nameAL,\n      nameEN: category.nameEN,\n      nameIT: category.nameIT,\n      slug: category.slug,\n      displayOrder: category.displayOrder\n    });\n    setShowCategoryForm(true);\n  };\n\n  const handleCategoryDelete = async (categoryId) => {\n    if (window.confirm('Are you sure? This will delete all items in this category.')) {\n      try {\n        await MenuService.deleteCategory(categoryId);\n        await loadCategories();\n      } catch (error) {\n        setError('Failed to delete category');\n      }\n    }\n  };\n\n  const resetCategoryForm = () => {\n    setCategoryForm({\n      nameAL: '',\n      nameEN: '',\n      nameIT: '',\n      slug: '',\n      displayOrder: 0\n    });\n    setEditingCategory(null);\n    setShowCategoryForm(false);\n  };\n\n  // Menu item handlers\n  const handleItemSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const itemData = {\n        ...itemForm,\n        price: parseFloat(itemForm.price),\n        categoryId: selectedCategory\n      };\n      \n      if (editingItem) {\n        await MenuService.updateMenuItem(editingItem.id, itemData);\n      } else {\n        await MenuService.createMenuItem(itemData);\n      }\n      await loadMenuItems();\n      resetItemForm();\n    } catch (error) {\n      setError(`Failed to ${editingItem ? 'update' : 'create'} menu item`);\n    }\n  };\n\n  const handleItemEdit = (item) => {\n    setEditingItem(item);\n    setItemForm({\n      categoryId: item.categoryId,\n      nameAL: item.nameAL,\n      nameEN: item.nameEN,\n      nameIT: item.nameIT,\n      descriptionAL: item.descriptionAL || '',\n      descriptionEN: item.descriptionEN || '',\n      descriptionIT: item.descriptionIT || '',\n      ingredientsAL: item.ingredientsAL || '',\n      ingredientsEN: item.ingredientsEN || '',\n      ingredientsIT: item.ingredientsIT || '',\n      price: item.price.toString(),\n      isVegetarian: item.isVegetarian,\n      isSpicy: item.isSpicy,\n      isRecommended: item.isRecommended,\n      isNew: item.isNew,\n      imageUrl: item.imageUrl || '',\n      displayOrder: item.displayOrder\n    });\n    setShowItemForm(true);\n  };\n\n  const handleItemDelete = async (itemId) => {\n    if (window.confirm('Are you sure you want to delete this menu item?')) {\n      try {\n        await MenuService.deleteMenuItem(itemId);\n        await loadMenuItems();\n      } catch (error) {\n        setError('Failed to delete menu item');\n      }\n    }\n  };\n\n  const resetItemForm = () => {\n    setItemForm({\n      categoryId: '',\n      nameAL: '',\n      nameEN: '',\n      nameIT: '',\n      descriptionAL: '',\n      descriptionEN: '',\n      descriptionIT: '',\n      ingredientsAL: '',\n      ingredientsEN: '',\n      ingredientsIT: '',\n      price: '',\n      isVegetarian: false,\n      isSpicy: false,\n      isRecommended: false,\n      isNew: false,\n      imageUrl: '',\n      displayOrder: 0\n    });\n    setEditingItem(null);\n    setShowItemForm(false);\n  };\n\n  // Generate slug from Albanian name\n  const generateSlug = (name) => {\n    return name\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  };\n\n  if (loading) return <div className=\"loading\">Loading menu management...</div>;\n\n  return (\n    <div className=\"menu-management\">\n      <div className=\"menu-management-header\">\n        <h2>Menu Management</h2>\n        <div className=\"header-actions\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => setShowCategoryForm(true)}\n          >\n            + Add Category\n          </button>\n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => setShowItemForm(true)}\n            disabled={!selectedCategory}\n          >\n            + Add Menu Item\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"menu-content\">\n        {/* Categories Sidebar */}\n        <div className=\"categories-sidebar\">\n          <h3>Categories</h3>\n          <div className=\"category-list\">\n            {categories.map(category => (\n              <div \n                key={category.id}\n                className={`category-item ${selectedCategory === category.id ? 'active' : ''}`}\n                onClick={() => {\n                  setSelectedCategory(category.id);\n                  loadMenuItems(category.id);\n                }}\n              >\n                <div className=\"category-info\">\n                  <h4>{category.nameAL}</h4>\n                  <small>{category.nameEN}</small>\n                </div>\n                <div className=\"category-actions\">\n                  <button \n                    className=\"btn-icon\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleCategoryEdit(category);\n                    }}\n                  >\n                    ✏️\n                  </button>\n                  <button \n                    className=\"btn-icon\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleCategoryDelete(category.id);\n                    }}\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Menu Items */}\n        <div className=\"menu-items-section\">\n          {selectedCategory && (\n            <>\n              <h3>\n                Menu Items - {categories.find(c => c.id === selectedCategory)?.nameAL}\n              </h3>\n              <div className=\"menu-items-grid\">\n                {menuItems.map(item => (\n                  <div key={item.id} className=\"menu-item-card\">\n                    <div className=\"item-header\">\n                      <h4>{item.nameAL}</h4>\n                      <span className=\"price\">{item.price} {item.currency}</span>\n                    </div>\n                    <p className=\"description\">{item.descriptionAL}</p>\n                    <div className=\"item-badges\">\n                      {item.isVegetarian && <span className=\"badge vegetarian\">🌱</span>}\n                      {item.isSpicy && <span className=\"badge spicy\">🌶️</span>}\n                      {item.isRecommended && <span className=\"badge recommended\">⭐</span>}\n                      {item.isNew && <span className=\"badge new\">NEW</span>}\n                    </div>\n                    <div className=\"item-actions\">\n                      <button \n                        className=\"btn btn-small\"\n                        onClick={() => handleItemEdit(item)}\n                      >\n                        Edit\n                      </button>\n                      <button \n                        className=\"btn btn-small btn-danger\"\n                        onClick={() => handleItemDelete(item.id)}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Category Form Modal */}\n      {showCategoryForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>{editingCategory ? 'Edit Category' : 'Add New Category'}</h3>\n              <button \n                className=\"close-btn\"\n                onClick={resetCategoryForm}\n              >\n                ×\n              </button>\n            </div>\n            <form onSubmit={handleCategorySubmit}>\n              <div className=\"form-group\">\n                <label>Albanian Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameAL}\n                  onChange={(e) => {\n                    setCategoryForm({\n                      ...categoryForm,\n                      nameAL: e.target.value,\n                      slug: generateSlug(e.target.value)\n                    });\n                  }}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>English Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameEN}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameEN: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Italian Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameIT}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameIT: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>URL Slug</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.slug}\n                  onChange={(e) => setCategoryForm({...categoryForm, slug: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Display Order</label>\n                <input\n                  type=\"number\"\n                  value={categoryForm.displayOrder}\n                  onChange={(e) => setCategoryForm({...categoryForm, displayOrder: parseInt(e.target.value)})}\n                />\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={resetCategoryForm}>Cancel</button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  {editingCategory ? 'Update' : 'Create'} Category\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Menu Item Form Modal */}\n      {showItemForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal large\">\n            <div className=\"modal-header\">\n              <h3>{editingItem ? 'Edit Menu Item' : 'Add New Menu Item'}</h3>\n              <button \n                className=\"close-btn\"\n                onClick={resetItemForm}\n              >\n                ×\n              </button>\n            </div>\n            <form onSubmit={handleItemSubmit}>\n              <div className=\"form-grid\">\n                {/* Names */}\n                <div className=\"form-group\">\n                  <label>Albanian Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameAL}\n                    onChange={(e) => setItemForm({...itemForm, nameAL: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>English Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameEN}\n                    onChange={(e) => setItemForm({...itemForm, nameEN: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Italian Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameIT}\n                    onChange={(e) => setItemForm({...itemForm, nameIT: e.target.value})}\n                    required\n                  />\n                </div>\n\n                {/* Descriptions */}\n                <div className=\"form-group full-width\">\n                  <label>Albanian Description</label>\n                  <textarea\n                    value={itemForm.descriptionAL}\n                    onChange={(e) => setItemForm({...itemForm, descriptionAL: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>English Description</label>\n                  <textarea\n                    value={itemForm.descriptionEN}\n                    onChange={(e) => setItemForm({...itemForm, descriptionEN: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>Italian Description</label>\n                  <textarea\n                    value={itemForm.descriptionIT}\n                    onChange={(e) => setItemForm({...itemForm, descriptionIT: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n\n                {/* Ingredients */}\n                <div className=\"form-group\">\n                  <label>Albanian Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsAL}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsAL: e.target.value})}\n                    placeholder=\"Spinaq, djathë, vezë...\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>English Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsEN}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsEN: e.target.value})}\n                    placeholder=\"Spinach, cheese, eggs...\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Italian Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsIT}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsIT: e.target.value})}\n                    placeholder=\"Spinaci, formaggio, uova...\"\n                  />\n                </div>\n\n                {/* Price and Properties */}\n                <div className=\"form-group\">\n                  <label>Price (ALL)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={itemForm.price}\n                    onChange={(e) => setItemForm({...itemForm, price: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Display Order</label>\n                  <input\n                    type=\"number\"\n                    value={itemForm.displayOrder}\n                    onChange={(e) => setItemForm({...itemForm, displayOrder: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>Image URL (optional)</label>\n                  <input\n                    type=\"url\"\n                    value={itemForm.imageUrl}\n                    onChange={(e) => setItemForm({...itemForm, imageUrl: e.target.value})}\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n\n                {/* Checkboxes */}\n                <div className=\"form-group checkbox-group\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isVegetarian}\n                      onChange={(e) => setItemForm({...itemForm, isVegetarian: e.target.checked})}\n                    />\n                    Vegetarian 🌱\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isSpicy}\n                      onChange={(e) => setItemForm({...itemForm, isSpicy: e.target.checked})}\n                    />\n                    Spicy 🌶️\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isRecommended}\n                      onChange={(e) => setItemForm({...itemForm, isRecommended: e.target.checked})}\n                    />\n                    Recommended ⭐\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isNew}\n                      onChange={(e) => setItemForm({...itemForm, isNew: e.target.checked})}\n                    />\n                    New Item 🆕\n                  </label>\n                </div>\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={resetItemForm}>Cancel</button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  {editingItem ? 'Update' : 'Create'} Menu Item\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MenuManagement; ","import React, { useState } from 'react';\nimport './RestaurantLayout.css';\n\nconst RestaurantLayout = () => {\n  // Enhanced table data with uniform size and proper container padding\n  const [tables, setTables] = useState([\n    // Terrace - Left side with proper padding\n    { id: 1, type: 'square', x: 80, y: 100, size: 60, seats: 4, status: 'available', name: 'T1' },\n    { id: 2, type: 'square', x: 200, y: 100, size: 60, seats: 6, status: 'occupied', name: 'T2' },\n    { id: 3, type: 'square', x: 80, y: 200, size: 60, seats: 4, status: 'available', name: 'T3' },\n    { id: 4, type: 'square', x: 200, y: 200, size: 60, seats: 4, status: 'reserved', name: 'T4' },\n    { id: 5, type: 'square', x: 80, y: 300, size: 60, seats: 4, status: 'available', name: 'T5' },\n    { id: 6, type: 'square', x: 200, y: 300, size: 60, seats: 4, status: 'cleaning', name: 'T6' },\n    \n    // Terrace Garden - Bottom left with proper padding\n    { id: 15, type: 'square', x: 80, y: 440, size: 60, seats: 4, status: 'available', name: 'TG1' },\n    { id: 16, type: 'square', x: 200, y: 440, size: 60, seats: 4, status: 'available', name: 'TG2' },\n    { id: 17, type: 'square', x: 80, y: 520, size: 60, seats: 6, status: 'occupied', name: 'TG3' },\n    { id: 18, type: 'square', x: 200, y: 520, size: 60, seats: 4, status: 'reserved', name: 'TG4' },\n    \n    // Prive - Bottom right with proper padding\n    { id: 19, type: 'square', x: 390, y: 440, size: 60, seats: 4, status: 'available', name: 'P1' },\n    { id: 20, type: 'square', x: 510, y: 440, size: 60, seats: 4, status: 'reserved', name: 'P2' },\n    { id: 21, type: 'square', x: 390, y: 520, size: 60, seats: 6, status: 'available', name: 'P3' },\n    { id: 22, type: 'square', x: 510, y: 520, size: 60, seats: 4, status: 'occupied', name: 'P4' },\n    \n    // Main Dining Area - Top right with proper padding\n    { id: 7, type: 'square', x: 390, y: 100, size: 60, seats: 4, status: 'available', name: 'M1' },\n    { id: 8, type: 'square', x: 510, y: 100, size: 60, seats: 4, status: 'occupied', name: 'M2' },\n    { id: 9, type: 'square', x: 570, y: 100, size: 60, seats: 6, status: 'reserved', name: 'M3' },\n    { id: 10, type: 'square', x: 390, y: 200, size: 60, seats: 4, status: 'cleaning', name: 'M4' },\n    { id: 11, type: 'square', x: 510, y: 200, size: 60, seats: 4, status: 'available', name: 'M5' },\n    { id: 12, type: 'square', x: 570, y: 200, size: 60, seats: 6, status: 'occupied', name: 'M6' },\n    { id: 13, type: 'square', x: 390, y: 300, size: 60, seats: 4, status: 'available', name: 'M7' },\n    { id: 14, type: 'square', x: 510, y: 300, size: 60, seats: 4, status: 'reserved', name: 'M8' },\n  ]);\n\n  const [selectedTable, setSelectedTable] = useState(null);\n\n  // Handle table click\n  const handleTableClick = (table) => {\n    setSelectedTable(table);\n  };\n\n  // Update table status\n  const updateTableStatus = (tableId, newStatus) => {\n    setTables(prev => prev.map(table => \n      table.id === tableId ? { ...table, status: newStatus } : table\n    ));\n    setSelectedTable(null);\n  };\n\n  // Enhanced color scheme\n  const getTableColor = (status) => {\n    switch (status) {\n      case 'available': return '#10B981'; // Emerald\n      case 'occupied': return '#EF4444'; // Red\n      case 'reserved': return '#F59E0B'; // Amber\n      case 'cleaning': return '#6B7280'; // Gray\n      default: return '#3B82F6'; // Blue\n    }\n  };\n\n  // Enhanced table rendering - square tables with uniform size\n  const renderTable = (table) => {\n    const commonProps = {\n      key: table.id,\n      onClick: () => handleTableClick(table),\n      style: {\n        cursor: 'pointer',\n        fill: getTableColor(table.status),\n        stroke: selectedTable?.id === table.id ? '#1F2937' : '#374151',\n        strokeWidth: selectedTable?.id === table.id ? 3 : 2,\n        filter: selectedTable?.id === table.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.3))' : 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\n        transition: 'all 0.3s ease',\n      }\n    };\n\n    return (\n      <rect\n        {...commonProps}\n        x={table.x}\n        y={table.y}\n        width={table.size}\n        height={table.size}\n        rx=\"8\"\n      />\n    );\n  };\n\n  // Enhanced table labels - showing seat count only\n  const renderTableLabel = (table) => {\n    const x = table.x + table.size/2;\n    const y = table.y + table.size/2;\n\n    return (\n      <text\n        key={`label-${table.id}`}\n        x={x}\n        y={y}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        style={{\n          fontSize: '18px',\n          fontWeight: 'bold',\n          fill: '#FFFFFF',\n          pointerEvents: 'none',\n          textShadow: '0 1px 2px rgba(0,0,0,0.5)',\n        }}\n      >\n        {table.seats}\n      </text>\n    );\n  };\n\n\n\n  return (\n    <div className=\"restaurant-layout\">\n      <div className=\"layout-header\">\n        <div className=\"header-content\">\n          <h2>🏛️ Restaurant Floor Plan</h2>\n          <p>Ullishtja Agroturizem - Table Management System</p>\n        </div>\n        <div className=\"layout-controls\">\n          <div className=\"status-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-color available\"></div>\n              <span>Available</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color occupied\"></div>\n              <span>Occupied</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color reserved\"></div>\n              <span>Reserved</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color cleaning\"></div>\n              <span>Cleaning</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"layout-container\">\n        <div className=\"layout-canvas\">\n          <svg width=\"700\" height=\"650\" viewBox=\"0 0 700 650\" className=\"restaurant-floor\">\n            {/* Restaurant Walls and Structure */}\n            <defs>\n              <pattern id=\"woodPattern\" patternUnits=\"userSpaceOnUse\" width=\"20\" height=\"20\">\n                <rect width=\"20\" height=\"20\" fill=\"#8B4513\"/>\n                <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" fill=\"#A0522D\"/>\n              </pattern>\n              <pattern id=\"tilePattern\" patternUnits=\"userSpaceOnUse\" width=\"15\" height=\"15\">\n                <rect width=\"15\" height=\"15\" fill=\"#F5F5F5\"/>\n                <rect x=\"1\" y=\"1\" width=\"13\" height=\"13\" fill=\"#FFFFFF\"/>\n              </pattern>\n              <pattern id=\"gardenPattern\" patternUnits=\"userSpaceOnUse\" width=\"25\" height=\"25\">\n                <rect width=\"25\" height=\"25\" fill=\"#D4F4DD\"/>\n                <circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"#10B981\"/>\n                <circle cx=\"5\" cy=\"20\" r=\"2\" fill=\"#059669\"/>\n                <circle cx=\"20\" cy=\"8\" r=\"2\" fill=\"#047857\"/>\n              </pattern>\n              <pattern id=\"privePattern\" patternUnits=\"userSpaceOnUse\" width=\"20\" height=\"20\">\n                <rect width=\"20\" height=\"20\" fill=\"#FEF3C7\"/>\n                <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" fill=\"#FDE68A\"/>\n                <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" fill=\"#FCD34D\"/>\n              </pattern>\n            </defs>\n            \n            {/* Main Building Structure - Extended */}\n            <rect x=\"30\" y=\"30\" width=\"640\" height=\"590\" fill=\"#F8F9FA\" stroke=\"#E5E7EB\" strokeWidth=\"4\" rx=\"15\" />\n            \n            {/* Terrace - Now on Left Side (renamed from Garden Terrace) */}\n            <rect x=\"50\" y=\"60\" width=\"290\" height=\"320\" fill=\"#F0FDF4\" stroke=\"#10B981\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"45\" y=\"55\" width=\"300\" height=\"330\" fill=\"none\" stroke=\"#059669\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Terrace Garden - New section below Terrace */}\n            <rect x=\"50\" y=\"410\" width=\"290\" height=\"190\" fill=\"url(#gardenPattern)\" stroke=\"#059669\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"45\" y=\"405\" width=\"300\" height=\"200\" fill=\"none\" stroke=\"#047857\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Main Dining Area - Top right (matching left side spacing) */}\n            <rect x=\"360\" y=\"60\" width=\"290\" height=\"320\" fill=\"url(#tilePattern)\" stroke=\"#D1D5DB\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"355\" y=\"55\" width=\"300\" height=\"330\" fill=\"none\" stroke=\"#6B7280\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Prive - Bottom right (matching Terrace Garden spacing) */}\n            <rect x=\"360\" y=\"410\" width=\"290\" height=\"190\" fill=\"url(#privePattern)\" stroke=\"#D97706\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"355\" y=\"405\" width=\"300\" height=\"200\" fill=\"none\" stroke=\"#B45309\" strokeWidth=\"2\" rx=\"15\" />\n\n            {/* Kitchen Area - Now in Right Side (Main Dining) */}\n            <rect x=\"570\" y=\"60\" width=\"70\" height=\"80\" fill=\"#FEE2E2\" stroke=\"#EF4444\" strokeWidth=\"2\" rx=\"8\" />\n            <rect x=\"575\" y=\"65\" width=\"60\" height=\"15\" fill=\"#DC2626\" rx=\"4\" />\n            <text x=\"605\" y=\"75\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              KITCHEN\n            </text>\n            \n            {/* Equipment in Kitchen */}\n            <circle cx=\"585\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <circle cx=\"600\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <circle cx=\"615\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <rect x=\"580\" y=\"110\" width=\"25\" height=\"12\" fill=\"#6B7280\" rx=\"2\" />\n            <rect x=\"610\" y=\"110\" width=\"20\" height=\"12\" fill=\"#6B7280\" rx=\"2\" />\n\n            {/* Bar Area - Next to Kitchen */}\n            <rect x=\"570\" y=\"150\" width=\"70\" height=\"80\" fill=\"#FEF3C7\" stroke=\"#D97706\" strokeWidth=\"2\" rx=\"8\" />\n            <rect x=\"575\" y=\"155\" width=\"60\" height=\"15\" fill=\"#B45309\" rx=\"4\" />\n            <text x=\"605\" y=\"165\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              BAR\n            </text>\n            \n            {/* Bar Equipment */}\n            <circle cx=\"585\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <circle cx=\"600\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <circle cx=\"615\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <rect x=\"580\" y=\"200\" width=\"25\" height=\"12\" fill=\"#A0522D\" rx=\"2\" />\n            <rect x=\"610\" y=\"200\" width=\"20\" height=\"12\" fill=\"#A0522D\" rx=\"2\" />\n\n            {/* Entrance - Centered between blocks */}\n            <rect x=\"310\" y=\"385\" width=\"80\" height=\"20\" fill=\"#3B82F6\" stroke=\"#1D4ED8\" strokeWidth=\"2\" rx=\"8\" />\n            <text x=\"350\" y=\"398\" textAnchor=\"middle\" style={{ fontSize: '12px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              ENTRANCE\n            </text>\n            \n            {/* Windows - Left Wall */}\n            <rect x=\"50\" y=\"75\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"130\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"185\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"470\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"530\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            \n            {/* Windows - Right Wall */}\n            <rect x=\"642\" y=\"75\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"130\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"185\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"240\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"295\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            \n            {/* Garden Elements - Now on Left Side (Terrace) */}\n            <circle cx=\"70\" cy=\"80\" r=\"8\" fill=\"#22C55E\" />\n            <circle cx=\"85\" cy=\"85\" r=\"6\" fill=\"#16A34A\" />\n            <circle cx=\"75\" cy=\"95\" r=\"5\" fill=\"#15803D\" />\n            <circle cx=\"310\" cy=\"80\" r=\"8\" fill=\"#22C55E\" />\n            <circle cx=\"300\" cy=\"90\" r=\"10\" fill=\"#16A34A\" />\n            <circle cx=\"320\" cy=\"95\" r=\"6\" fill=\"#15803D\" />\n            <circle cx=\"70\" cy=\"350\" r=\"10\" fill=\"#22C55E\" />\n            <circle cx=\"310\" cy=\"360\" r=\"8\" fill=\"#16A34A\" />\n            \n            {/* Enhanced Garden Elements in Terrace Garden */}\n            <circle cx=\"70\" cy=\"450\" r=\"10\" fill=\"#059669\" />\n            <circle cx=\"85\" cy=\"465\" r=\"8\" fill=\"#047857\" />\n            <circle cx=\"75\" cy=\"480\" r=\"6\" fill=\"#065F46\" />\n            <circle cx=\"310\" cy=\"460\" r=\"12\" fill=\"#059669\" />\n            <circle cx=\"300\" cy=\"480\" r=\"8\" fill=\"#047857\" />\n            <circle cx=\"320\" cy=\"495\" r=\"6\" fill=\"#065F46\" />\n            <circle cx=\"70\" cy=\"550\" r=\"9\" fill=\"#059669\" />\n            <circle cx=\"310\" cy=\"570\" r=\"10\" fill=\"#047857\" />\n            <circle cx=\"120\" cy=\"440\" r=\"5\" fill=\"#22C55E\" />\n            <circle cx=\"250\" cy=\"440\" r=\"7\" fill=\"#16A34A\" />\n            <circle cx=\"120\" cy=\"580\" r=\"6\" fill=\"#22C55E\" />\n            <circle cx=\"250\" cy=\"580\" r=\"8\" fill=\"#16A34A\" />\n\n            {/* Prive Section Decorative Elements */}\n            <circle cx=\"380\" cy=\"430\" r=\"8\" fill=\"#D97706\" />\n            <circle cx=\"520\" cy=\"440\" r=\"6\" fill=\"#B45309\" />\n            <circle cx=\"620\" cy=\"450\" r=\"7\" fill=\"#92400E\" />\n            <circle cx=\"380\" cy=\"570\" r=\"9\" fill=\"#D97706\" />\n            <circle cx=\"520\" cy=\"560\" r=\"8\" fill=\"#B45309\" />\n            <circle cx=\"620\" cy=\"570\" r=\"6\" fill=\"#92400E\" />\n            \n            {/* Prive Section Curtains/Partitions */}\n            <rect x=\"352\" y=\"410\" width=\"4\" height=\"190\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"658\" y=\"410\" width=\"4\" height=\"190\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"370\" y=\"402\" width=\"270\" height=\"4\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"370\" y=\"608\" width=\"270\" height=\"4\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n\n            {/* Restrooms - Now in Right Side (Main Dining) */}\n            <rect x=\"570\" y=\"520\" width=\"60\" height=\"60\" fill=\"#F3F4F6\" stroke=\"#6B7280\" strokeWidth=\"2\" rx=\"6\" />\n            <text x=\"600\" y=\"540\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#6B7280' }}>\n              WC\n            </text>\n            <circle cx=\"585\" cy=\"560\" r=\"8\" fill=\"#E5E7EB\" stroke=\"#9CA3AF\" strokeWidth=\"1\" />\n            <circle cx=\"615\" cy=\"560\" r=\"8\" fill=\"#E5E7EB\" stroke=\"#9CA3AF\" strokeWidth=\"1\" />\n\n            {/* Area Labels with Enhanced Styling */}\n            <g>\n              <rect x=\"150\" y=\"25\" width=\"80\" height=\"25\" fill=\"rgba(240,253,244,0.9)\" stroke=\"#10B981\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"190\" y=\"40\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#047857' }}>\n                Terrace\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"120\" y=\"385\" width=\"120\" height=\"25\" fill=\"rgba(212,244,221,0.9)\" stroke=\"#059669\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"180\" y=\"400\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#047857' }}>\n                Terrace Garden\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"450\" y=\"385\" width=\"80\" height=\"25\" fill=\"rgba(248,246,240,0.9)\" stroke=\"#D97706\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"490\" y=\"400\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#B45309' }}>\n                Prive\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"450\" y=\"25\" width=\"120\" height=\"25\" fill=\"rgba(255,255,255,0.9)\" stroke=\"#E5E7EB\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"510\" y=\"40\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#1F2937' }}>\n                Main Dining Area\n              </text>\n            </g>\n\n\n\n            {/* Render all tables */}\n            {tables.map(table => renderTable(table))}\n            {tables.map(table => renderTableLabel(table))}\n          </svg>\n        </div>\n\n        {/* Enhanced Table Details Panel */}\n        {selectedTable && (\n          <div className=\"table-details\">\n            <div className=\"table-details-header\">\n              <h3>Table {selectedTable.name}</h3>\n              <div className={`status-badge ${selectedTable.status}`}>\n                {selectedTable.status}\n              </div>\n            </div>\n            \n            <div className=\"table-info\">\n              <div className=\"info-row\">\n                <span className=\"info-label\">Type:</span>\n                <span className=\"info-value\">{selectedTable.type}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"info-label\">Capacity:</span>\n                <span className=\"info-value\">{selectedTable.seats} guests</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"info-label\">Location:</span>\n                <span className=\"info-value\">\n                  {selectedTable.x < 350 ? \n                    (selectedTable.y < 390 ? 'Terrace' : 'Terrace Garden') : \n                    (selectedTable.y < 390 ? 'Main Dining' : 'Prive')\n                  }\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"table-actions\">\n              <button \n                className=\"status-btn available\"\n                onClick={() => updateTableStatus(selectedTable.id, 'available')}\n              >\n                ✅ Set Available\n              </button>\n              <button \n                className=\"status-btn occupied\"\n                onClick={() => updateTableStatus(selectedTable.id, 'occupied')}\n              >\n                🔴 Set Occupied\n              </button>\n              <button \n                className=\"status-btn reserved\"\n                onClick={() => updateTableStatus(selectedTable.id, 'reserved')}\n              >\n                🟡 Set Reserved\n              </button>\n              <button \n                className=\"status-btn cleaning\"\n                onClick={() => updateTableStatus(selectedTable.id, 'cleaning')}\n              >\n                🧹 Set Cleaning\n              </button>\n            </div>\n            \n            <button className=\"close-details\" onClick={() => setSelectedTable(null)}>\n              ✕ Close Details\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Enhanced Statistics */}\n      <div className=\"layout-stats\">\n        <div className=\"stat-card available\">\n          <div className=\"stat-icon\">✅</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'available').length}</span>\n            <span className=\"stat-label\">Available Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card occupied\">\n          <div className=\"stat-icon\">🔴</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'occupied').length}</span>\n            <span className=\"stat-label\">Occupied Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card reserved\">\n          <div className=\"stat-icon\">🟡</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'reserved').length}</span>\n            <span className=\"stat-label\">Reserved Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card total\">\n          <div className=\"stat-icon\">👥</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.reduce((sum, t) => sum + t.seats, 0)}</span>\n            <span className=\"stat-label\">Total Capacity</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantLayout; ","import React, { useState, useEffect } from 'react';\nimport './TimeSlotManagement.css';\n\nconst TimeSlotManagement = () => {\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSlot, setEditingSlot] = useState(null);\n  const [showCapacityModal, setShowCapacityModal] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n\n  // Days of the week mapping\n  const daysOfWeek = [\n    { id: 0, name: 'Sunday', short: 'Sun' },\n    { id: 1, name: 'Monday', short: 'Mon' },\n    { id: 2, name: 'Tuesday', short: 'Tue' },\n    { id: 3, name: 'Wednesday', short: 'Wed' },\n    { id: 4, name: 'Thursday', short: 'Thu' },\n    { id: 5, name: 'Friday', short: 'Fri' },\n    { id: 6, name: 'Saturday', short: 'Sat' },\n  ];\n\n  // Fetch time slots on component mount\n  useEffect(() => {\n    fetchTimeSlots();\n  }, []);\n\n  const fetchTimeSlots = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/timeslots');\n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(result.data);\n      } else {\n        console.error('Failed to fetch time slots:', result.error);\n      }\n    } catch (error) {\n      console.error('Error fetching time slots:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSeedSlots = async () => {\n    try {\n      const response = await fetch('/api/timeslots?action=seed');\n      const result = await response.json();\n      \n      if (result.success) {\n        alert('Default time slots created successfully!');\n        fetchTimeSlots();\n      } else {\n        alert('Failed to create default time slots: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error seeding time slots:', error);\n      alert('Error creating default time slots');\n    }\n  };\n\n  const handleCreateSlot = async (slotData) => {\n    try {\n      const response = await fetch('/api/timeslots', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(slotData),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots([...timeSlots, result.data]);\n        setShowAddModal(false);\n        alert('Time slot created successfully!');\n      } else {\n        alert('Failed to create time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error creating time slot:', error);\n      alert('Error creating time slot');\n    }\n  };\n\n  const handleUpdateSlot = async (id, slotData) => {\n    try {\n      const response = await fetch('/api/timeslots', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, ...slotData }),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(timeSlots.map(slot => \n          slot.id === id ? result.data : slot\n        ));\n        setEditingSlot(null);\n        alert('Time slot updated successfully!');\n      } else {\n        alert('Failed to update time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error updating time slot:', error);\n      alert('Error updating time slot');\n    }\n  };\n\n  const handleDeleteSlot = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this time slot?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/timeslots', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id }),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(timeSlots.filter(slot => slot.id !== id));\n        alert('Time slot deleted successfully!');\n      } else {\n        alert('Failed to delete time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error deleting time slot:', error);\n      alert('Error deleting time slot');\n    }\n  };\n\n  const formatTime = (timeString) => {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  const getCapacityForDay = (slot, dayOfWeek) => {\n    const override = slot.capacityOverrides?.find(\n      override => override.dayOfWeek === dayOfWeek && override.isActive\n    );\n    return override ? override.maxCapacity : slot.maxCapacity;\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading time slots...</div>;\n  }\n\n  return (\n    <div className=\"timeslot-management\">\n      <div className=\"timeslot-header\">\n        <h2>Time Slot Management</h2>\n        <div className=\"header-buttons\">\n          <button \n            className=\"seed-button\" \n            onClick={handleSeedSlots}\n            disabled={timeSlots.length > 0}\n          >\n            {timeSlots.length > 0 ? 'Default slots created' : 'Create Default Slots'}\n          </button>\n          <button \n            className=\"add-button\" \n            onClick={() => setShowAddModal(true)}\n          >\n            Add Time Slot\n          </button>\n        </div>\n      </div>\n\n      <div className=\"timeslot-grid\">\n        {timeSlots.map(slot => (\n          <div key={slot.id} className=\"timeslot-card\">\n            <div className=\"timeslot-header\">\n              <h3>{formatTime(slot.time)}</h3>\n              <span className={`status ${slot.isActive ? 'active' : 'inactive'}`}>\n                {slot.isActive ? 'Active' : 'Inactive'}\n              </span>\n            </div>\n            \n            <div className=\"timeslot-info\">\n              <div className=\"info-row\">\n                <span>Default Capacity:</span>\n                <span>{slot.maxCapacity} guests</span>\n              </div>\n              <div className=\"info-row\">\n                <span>Duration:</span>\n                <span>{slot.duration} minutes</span>\n              </div>\n              <div className=\"info-row\">\n                <span>Order:</span>\n                <span>{slot.displayOrder}</span>\n              </div>\n            </div>\n\n            <div className=\"capacity-overrides\">\n              <h4>Day-specific Capacity:</h4>\n              <div className=\"days-grid\">\n                {daysOfWeek.map(day => (\n                  <div key={day.id} className=\"day-capacity\">\n                    <span className=\"day-name\">{day.short}</span>\n                    <span className=\"capacity-value\">\n                      {getCapacityForDay(slot, day.id)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"timeslot-actions\">\n              <button \n                className=\"edit-button\"\n                onClick={() => setEditingSlot(slot)}\n              >\n                Edit\n              </button>\n              <button \n                className=\"capacity-button\"\n                onClick={() => {\n                  setSelectedSlot(slot);\n                  setShowCapacityModal(true);\n                }}\n              >\n                Capacity\n              </button>\n              <button \n                className=\"delete-button\"\n                onClick={() => handleDeleteSlot(slot.id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Add Time Slot Modal */}\n      {showAddModal && (\n        <TimeSlotModal\n          onClose={() => setShowAddModal(false)}\n          onSave={handleCreateSlot}\n          title=\"Add New Time Slot\"\n        />\n      )}\n\n      {/* Edit Time Slot Modal */}\n      {editingSlot && (\n        <TimeSlotModal\n          slot={editingSlot}\n          onClose={() => setEditingSlot(null)}\n          onSave={(data) => handleUpdateSlot(editingSlot.id, data)}\n          title=\"Edit Time Slot\"\n        />\n      )}\n\n      {/* Capacity Management Modal */}\n      {showCapacityModal && selectedSlot && (\n        <CapacityModal\n          slot={selectedSlot}\n          onClose={() => {\n            setShowCapacityModal(false);\n            setSelectedSlot(null);\n          }}\n          onUpdate={() => {\n            fetchTimeSlots();\n            setShowCapacityModal(false);\n            setSelectedSlot(null);\n          }}\n          daysOfWeek={daysOfWeek}\n        />\n      )}\n    </div>\n  );\n};\n\n// Time Slot Modal Component\nconst TimeSlotModal = ({ slot, onClose, onSave, title }) => {\n  const [formData, setFormData] = useState({\n    time: slot?.time || '',\n    maxCapacity: slot?.maxCapacity || 20,\n    duration: slot?.duration || 120,\n    displayOrder: slot?.displayOrder || 0,\n    isActive: slot?.isActive ?? true,\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>{title}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Time</label>\n            <input\n              type=\"time\"\n              name=\"time\"\n              value={formData.time}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Maximum Capacity</label>\n            <input\n              type=\"number\"\n              name=\"maxCapacity\"\n              value={formData.maxCapacity}\n              onChange={handleChange}\n              min=\"1\"\n              max=\"100\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Duration (minutes)</label>\n            <input\n              type=\"number\"\n              name=\"duration\"\n              value={formData.duration}\n              onChange={handleChange}\n              min=\"30\"\n              max=\"300\"\n              step=\"30\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Display Order</label>\n            <input\n              type=\"number\"\n              name=\"displayOrder\"\n              value={formData.displayOrder}\n              onChange={handleChange}\n              min=\"0\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"isActive\"\n                checked={formData.isActive}\n                onChange={handleChange}\n              />\n              Active\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose}>Cancel</button>\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Capacity Management Modal Component\nconst CapacityModal = ({ slot, onClose, onUpdate, daysOfWeek }) => {\n  const [capacities, setCapacities] = useState({});\n\n  useEffect(() => {\n    // Initialize capacities from slot data\n    const initialCapacities = {};\n    daysOfWeek.forEach(day => {\n      const override = slot.capacityOverrides?.find(\n        override => override.dayOfWeek === day.id && override.isActive\n      );\n      initialCapacities[day.id] = override ? override.maxCapacity : slot.maxCapacity;\n    });\n    setCapacities(initialCapacities);\n  }, [slot, daysOfWeek]);\n\n  const handleCapacityChange = (dayId, value) => {\n    setCapacities(prev => ({\n      ...prev,\n      [dayId]: parseInt(value)\n    }));\n  };\n\n  const handleSave = async () => {\n    try {\n      // Save capacity overrides for each day\n      for (const dayId in capacities) {\n        const capacity = capacities[dayId];\n        \n        // Only create override if different from default\n        if (capacity !== slot.maxCapacity) {\n          await fetch('/api/timeslots/capacity', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              timeSlotId: slot.id,\n              dayOfWeek: parseInt(dayId),\n              maxCapacity: capacity\n            })\n          });\n        }\n      }\n      \n      alert('Capacity settings saved successfully!');\n      onUpdate();\n    } catch (error) {\n      console.error('Error saving capacity settings:', error);\n      alert('Error saving capacity settings');\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content capacity-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Capacity Settings - {slot.time}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"capacity-form\">\n          <p>Default capacity: {slot.maxCapacity} guests</p>\n          \n          <div className=\"capacity-grid\">\n            {daysOfWeek.map(day => (\n              <div key={day.id} className=\"capacity-row\">\n                <label>{day.name}</label>\n                <input\n                  type=\"number\"\n                  value={capacities[day.id] || slot.maxCapacity}\n                  onChange={(e) => handleCapacityChange(day.id, e.target.value)}\n                  min=\"1\"\n                  max=\"100\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"modal-actions\">\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n          <button type=\"button\" onClick={handleSave}>Save</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeSlotManagement; ","import React, { useState, useEffect } from 'react';\nimport { useUser, UserButton } from '@clerk/clerk-react';\nimport { Navigate } from 'react-router-dom';\nimport { reservationService } from '../reservationService.js';\nimport restaurantSettingsService from '../services/restaurantSettingsService.js';\nimport MenuManagement from './MenuManagement';\nimport RestaurantLayout from './RestaurantLayout';\nimport TimeSlotManagement from './TimeSlotManagement';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const { isSignedIn, user } = useUser();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [reservations, setReservations] = useState([]);\n  const [stats, setStats] = useState({\n    totalReservations: 0,\n    pendingReservations: 0,\n    activeBookings: 0,\n    completedReservations: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showViewModal, setShowViewModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [addingReservation, setAddingReservation] = useState(false);\n  const [updatingReservation, setUpdatingReservation] = useState(false);\n  \n  // Restaurant settings state\n  const [restaurantSettings, setRestaurantSettings] = useState({\n    restaurantName: '',\n    email: '',\n    phone: '',\n    address: '',\n    operatingHours: {\n      monday: { open: '12:00', close: '22:00', closed: false },\n      tuesday: { open: '12:00', close: '22:00', closed: false },\n      wednesday: { open: '12:00', close: '22:00', closed: false },\n      thursday: { open: '12:00', close: '22:00', closed: false },\n      friday: { open: '12:00', close: '22:00', closed: false },\n      saturday: { open: '12:00', close: '22:00', closed: false },\n      sunday: { open: '12:00', close: '22:00', closed: false }\n    },\n    maxCapacity: 50,\n    websiteUrl: '',\n    facebookUrl: '',\n    instagramUrl: '',\n    emailNotifications: true,\n    smsNotifications: false\n  });\n  const [loadingSettings, setLoadingSettings] = useState(false);\n  const [savingSettings, setSavingSettings] = useState(false);\n  \n  // Date filtering state\n  const [dateFilter, setDateFilter] = useState('');\n  const [filteredReservations, setFilteredReservations] = useState([]);\n  const [dateFilterActive, setDateFilterActive] = useState(false);\n\n  // Fetch reservations and stats\n  const fetchData = async (filterDate = null) => {\n    try {\n      setLoading(true);\n      \n      // Prepare API options\n      const options = {};\n      if (filterDate) {\n        options.date = filterDate;\n      }\n      \n      const reservationsResult = await reservationService.getAll(options);\n      \n      if (reservationsResult.success) {\n        const data = reservationsResult.data;\n        \n        if (filterDate) {\n          setFilteredReservations(data);\n          setDateFilterActive(true);\n        } else {\n          setReservations(data);\n          setFilteredReservations([]);\n          setDateFilterActive(false);\n        }\n        \n        // Calculate stats based on current data\n        const total = data.length;\n        const pending = data.filter(r => r.status === 'PENDING').length;\n        const confirmed = data.filter(r => r.status === 'CONFIRMED').length;\n        const completed = data.filter(r => r.status === 'COMPLETED').length;\n        \n        setStats({\n          totalReservations: total,\n          pendingReservations: pending,\n          activeBookings: confirmed,\n          completedReservations: completed\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isSignedIn) {\n      fetchData();\n      loadRestaurantSettings();\n    }\n  }, [isSignedIn]);\n\n  // Check if user is signed in and is an admin\n  if (!isSignedIn) {\n    return <Navigate to=\"/admin-login\" replace />;\n  }\n\n  // Check if user is an admin\n  const adminUserIds = process.env.REACT_APP_ADMIN_USER_IDS?.split(',') || [];\n  if (isSignedIn && user && !adminUserIds.includes(user.id)) {\n    return (\n      <div className=\"unauthorized-container\">\n        <div className=\"unauthorized-content\">\n          <h1>Access Denied</h1>\n          <p>You don't have permission to access this area.</p>\n          <button onClick={() => window.location.href = '/'} className=\"home-button\">\n            Go to Homepage\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Handler functions\n  const handleViewReservation = (reservation) => {\n    setSelectedReservation(reservation);\n    setShowViewModal(true);\n  };\n\n  const handleUpdateReservation = (reservation) => {\n    setSelectedReservation(reservation);\n    setShowUpdateModal(true);\n  };\n\n  const handleUpdateStatus = async (reservationId, newStatus) => {\n    setUpdatingReservation(true);\n    try {\n      const result = await reservationService.updateStatus(reservationId, newStatus);\n      if (result.success) {\n        // Refresh the data\n        const reservationsResult = await reservationService.getAll();\n        if (reservationsResult.success) {\n          setReservations(reservationsResult.data);\n          \n          // Recalculate stats\n          const total = reservationsResult.data.length;\n          const pending = reservationsResult.data.filter(r => r.status === 'PENDING').length;\n          const confirmed = reservationsResult.data.filter(r => r.status === 'CONFIRMED').length;\n          const completed = reservationsResult.data.filter(r => r.status === 'COMPLETED').length;\n          \n          setStats({\n            totalReservations: total,\n            pendingReservations: pending,\n            activeBookings: confirmed,\n            completedReservations: completed\n          });\n        }\n        setShowUpdateModal(false);\n        setSelectedReservation(null);\n      } else {\n        alert('Failed to update status: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error updating status: ' + error.message);\n    } finally {\n      setUpdatingReservation(false);\n    }\n  };\n\n  const handleAddReservation = async (reservationData) => {\n    setAddingReservation(true);\n    try {\n      const result = await reservationService.create(reservationData);\n      if (result.success) {\n        alert('Reservation added successfully!');\n        setShowAddModal(false);\n        // Refresh the data\n        window.location.reload();\n      } else {\n        alert('Failed to add reservation: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error adding reservation: ' + error.message);\n    } finally {\n      setAddingReservation(false);\n    }\n  };\n\n  const refreshData = async () => {\n    const currentFilter = dateFilterActive ? dateFilter : null;\n    await fetchData(currentFilter);\n  };\n\n  // Date filtering helper functions\n  const handleDateFilterChange = (e) => {\n    const selectedDate = e.target.value;\n    setDateFilter(selectedDate);\n    \n    if (selectedDate) {\n      fetchData(selectedDate);\n    } else {\n      fetchData();\n    }\n  };\n\n  const handleTodayFilter = () => {\n    const today = new Date().toISOString().split('T')[0];\n    setDateFilter(today);\n    fetchData(today);\n  };\n\n  const clearDateFilter = () => {\n    setDateFilter('');\n    fetchData();\n  };\n\n  // Get current reservations display (filtered or all)\n  const getCurrentReservations = () => {\n    return dateFilterActive ? filteredReservations : reservations;\n  };\n\n  // Restaurant settings functions\n  const loadRestaurantSettings = async () => {\n    try {\n      setLoadingSettings(true);\n      const result = await restaurantSettingsService.getSettings();\n      \n      if (result.success) {\n        setRestaurantSettings(result.data);\n      } else {\n        console.error('Failed to load restaurant settings:', result.error);\n      }\n    } catch (error) {\n      console.error('Error loading restaurant settings:', error);\n    } finally {\n      setLoadingSettings(false);\n    }\n  };\n\n  const saveRestaurantSettings = async (settingsData) => {\n    try {\n      setSavingSettings(true);\n      \n      // Validate settings data\n      const validation = restaurantSettingsService.validateSettings(settingsData);\n      \n      if (!validation.isValid) {\n        alert('Please fix the following errors:\\n' + validation.errors.join('\\n'));\n        return;\n      }\n      \n      const result = await restaurantSettingsService.updateSettings(settingsData);\n      \n      if (result.success) {\n        setRestaurantSettings(result.data);\n        alert('Settings saved successfully!');\n      } else {\n        alert('Failed to save settings: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error saving restaurant settings:', error);\n      alert('Error saving settings: ' + error.message);\n    } finally {\n      setSavingSettings(false);\n    }\n  };\n\n  const handleRestaurantInfoSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedSettings = {\n      ...restaurantSettings,\n      restaurantName: formData.get('restaurantName'),\n      phone: formData.get('phone'),\n      email: formData.get('email'),\n      address: formData.get('address'),\n      websiteUrl: formData.get('websiteUrl'),\n      facebookUrl: formData.get('facebookUrl'),\n      instagramUrl: formData.get('instagramUrl'),\n      emailNotifications: formData.get('emailNotifications') === 'on',\n      smsNotifications: formData.get('smsNotifications') === 'on',\n    };\n    saveRestaurantSettings(updatedSettings);\n  };\n\n  const handleOperatingHoursSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedOperatingHours = { ...restaurantSettings.operatingHours };\n    \n    ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].forEach(day => {\n      updatedOperatingHours[day] = {\n        open: formData.get(`${day}_open`),\n        close: formData.get(`${day}_close`),\n        closed: formData.get(`${day}_closed`) === 'on'\n      };\n    });\n    \n    const updatedSettings = {\n      ...restaurantSettings,\n      operatingHours: updatedOperatingHours\n    };\n    \n    saveRestaurantSettings(updatedSettings);\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return (\n          <div className=\"tab-content\">\n            <h2>Dashboard Overview</h2>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stat-card\">\n                <h3>Total Reservations</h3>\n                <div className=\"stat-number\">{stats.totalReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? `For ${new Date(dateFilter).toLocaleDateString()}`\n                    : 'All time reservations'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Pending</h3>\n                <div className=\"stat-number\">{stats.pendingReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Awaiting confirmation'\n                    : 'Awaiting confirmation'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Active Bookings</h3>\n                <div className=\"stat-number\">{stats.activeBookings}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Confirmed reservations'\n                    : 'Confirmed reservations'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Completed</h3>\n                <div className=\"stat-number\">{stats.completedReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Successfully served'\n                    : 'Successfully served'\n                  }\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"reservations-section\">\n              <div className=\"table-header\">\n                <h3>\n                  {dateFilterActive \n                    ? `Reservations for ${new Date(dateFilter).toLocaleDateString()}`\n                    : 'Recent Reservations'\n                  }\n                </h3>\n                <div className=\"table-actions\">\n                  <div className=\"date-filter-controls\">\n                    <input\n                      type=\"date\"\n                      value={dateFilter}\n                      onChange={handleDateFilterChange}\n                      className=\"date-filter-input\"\n                    />\n                    <button onClick={handleTodayFilter} className=\"today-btn\">\n                      Today\n                    </button>\n                    {dateFilterActive && (\n                      <button onClick={clearDateFilter} className=\"clear-filter-btn\">\n                        Show All\n                      </button>\n                    )}\n                  </div>\n                  <div className=\"reservation-count\">\n                    <p>Total Reservations: {getCurrentReservations().length}</p>\n                    <button onClick={refreshData} className=\"refresh-btn\" disabled={loading}>\n                      {loading ? 'Refreshing...' : 'Refresh'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"reservations-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Phone</th>\n                      <th>Guests</th>\n                      <th>Time</th>\n                      <th>Status</th>\n                      <th>Special Requests</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {getCurrentReservations().length === 0 ? (\n                      <tr>\n                        <td colSpan=\"9\" className=\"no-data\">\n                          {loading ? 'Loading reservations...' : 'No reservations found'}\n                        </td>\n                      </tr>\n                    ) : (\n                      getCurrentReservations().map((reservation) => (\n                        <tr key={reservation.id}>\n                          <td>{new Date(reservation.date).toLocaleDateString()}</td>\n                          <td>{reservation.name}</td>\n                          <td>{reservation.email}</td>\n                          <td>{reservation.phone}</td>\n                          <td>{reservation.guests}</td>\n                          <td>{reservation.time}</td>\n                          <td>\n                            <span className={`status ${reservation.status.toLowerCase()}`}>\n                              {reservation.status}\n                            </span>\n                          </td>\n                          <td>{reservation.specialRequests || 'None'}</td>\n                          <td>\n                            <button \n                              onClick={() => handleViewReservation(reservation)}\n                              className=\"action-btn view\"\n                            >\n                              View\n                            </button>\n                            <button \n                              onClick={() => handleUpdateReservation(reservation)}\n                              className=\"action-btn edit\"\n                            >\n                              Update\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'menu':\n        return <MenuManagement />;\n        \n      case 'timeslots':\n        return <TimeSlotManagement />;\n        \n      case 'layout':\n        return <RestaurantLayout />;\n        \n      case 'settings':\n        return (\n          <div className=\"tab-content\">\n            <h2>Settings</h2>\n            {loadingSettings ? (\n              <div className=\"loading\">Loading settings...</div>\n            ) : (\n              <div className=\"settings-sections\">\n                <div className=\"settings-section\">\n                  <h3>Restaurant Information</h3>\n                  <form onSubmit={handleRestaurantInfoSubmit}>\n                    <div className=\"form-group\">\n                      <label>Restaurant Name</label>\n                      <input \n                        type=\"text\" \n                        name=\"restaurantName\"\n                        value={restaurantSettings.restaurantName}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, restaurantName: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Phone Number</label>\n                      <input \n                        type=\"tel\" \n                        name=\"phone\"\n                        value={restaurantSettings.phone}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, phone: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Email</label>\n                      <input \n                        type=\"email\" \n                        name=\"email\"\n                        value={restaurantSettings.email}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, email: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Address</label>\n                      <input \n                        type=\"text\" \n                        name=\"address\"\n                        value={restaurantSettings.address}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, address: e.target.value})}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Website URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"websiteUrl\"\n                        value={restaurantSettings.websiteUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, websiteUrl: e.target.value})}\n                        placeholder=\"https://example.com\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Facebook URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"facebookUrl\"\n                        value={restaurantSettings.facebookUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, facebookUrl: e.target.value})}\n                        placeholder=\"https://facebook.com/yourpage\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Instagram URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"instagramUrl\"\n                        value={restaurantSettings.instagramUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, instagramUrl: e.target.value})}\n                        placeholder=\"https://instagram.com/yourpage\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <input \n                          type=\"checkbox\" \n                          name=\"emailNotifications\"\n                          checked={restaurantSettings.emailNotifications}\n                          onChange={(e) => setRestaurantSettings({...restaurantSettings, emailNotifications: e.target.checked})}\n                        />\n                        Email Notifications\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <input \n                          type=\"checkbox\" \n                          name=\"smsNotifications\"\n                          checked={restaurantSettings.smsNotifications}\n                          onChange={(e) => setRestaurantSettings({...restaurantSettings, smsNotifications: e.target.checked})}\n                        />\n                        SMS Notifications\n                      </label>\n                    </div>\n                    <button type=\"submit\" className=\"save-btn\" disabled={savingSettings}>\n                      {savingSettings ? 'Saving...' : 'Save Changes'}\n                    </button>\n                  </form>\n                </div>\n                \n                <div className=\"settings-section\">\n                  <h3>Operating Hours</h3>\n                  <form onSubmit={handleOperatingHoursSubmit}>\n                    <div className=\"hours-grid\">\n                      {['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].map(day => (\n                        <div key={day} className=\"day-hours\">\n                          <span>{day.charAt(0).toUpperCase() + day.slice(1)}</span>\n                          <input \n                            type=\"time\" \n                            name={`${day}_open`}\n                            value={restaurantSettings.operatingHours[day]?.open || '12:00'}\n                            onChange={(e) => setRestaurantSettings({\n                              ...restaurantSettings,\n                              operatingHours: {\n                                ...restaurantSettings.operatingHours,\n                                [day]: {\n                                  ...restaurantSettings.operatingHours[day],\n                                  open: e.target.value\n                                }\n                              }\n                            })}\n                            disabled={restaurantSettings.operatingHours[day]?.closed}\n                          />\n                          <span>to</span>\n                          <input \n                            type=\"time\" \n                            name={`${day}_close`}\n                            value={restaurantSettings.operatingHours[day]?.close || '22:00'}\n                            onChange={(e) => setRestaurantSettings({\n                              ...restaurantSettings,\n                              operatingHours: {\n                                ...restaurantSettings.operatingHours,\n                                [day]: {\n                                  ...restaurantSettings.operatingHours[day],\n                                  close: e.target.value\n                                }\n                              }\n                            })}\n                            disabled={restaurantSettings.operatingHours[day]?.closed}\n                          />\n                          <label>\n                            <input \n                              type=\"checkbox\" \n                              name={`${day}_closed`}\n                              checked={restaurantSettings.operatingHours[day]?.closed || false}\n                              onChange={(e) => setRestaurantSettings({\n                                ...restaurantSettings,\n                                operatingHours: {\n                                  ...restaurantSettings.operatingHours,\n                                  [day]: {\n                                    ...restaurantSettings.operatingHours[day],\n                                    closed: e.target.checked\n                                  }\n                                }\n                              })}\n                            />\n                            Closed\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                    <button type=\"submit\" className=\"save-btn\" disabled={savingSettings}>\n                      {savingSettings ? 'Saving...' : 'Save Hours'}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n        \n      default:\n        return <div>Tab content not found</div>;\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <div className=\"header-left\">\n          <img \n            src=\"https://ucarecdn.com/f2ebac4d-52d3-45f7-997d-3e2dea09557b/ullishtja_logo.jpeg\" \n            alt=\"Ullishtja Logo\" \n            className=\"dashboard-logo\"\n          />\n          <div className=\"header-text\">\n            <h1>Admin Dashboard</h1>\n            <p>Welcome back, {user?.firstName || 'Admin'}!</p>\n          </div>\n        </div>\n        <div className=\"header-right\">\n          <UserButton />\n        </div>\n      </div>\n      \n      <div className=\"dashboard-content\">\n        <nav className=\"dashboard-nav\">\n          <button \n            className={`nav-tab ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            📊 Overview\n          </button>\n          <button \n            className={`nav-tab ${activeTab === 'menu' ? 'active' : ''}`}\n            onClick={() => setActiveTab('menu')}\n          >\n            📋 Menu\n          </button>\n          <button \n            className={`nav-tab ${activeTab === 'timeslots' ? 'active' : ''}`}\n            onClick={() => setActiveTab('timeslots')}\n          >\n            🕒 Time Slots\n          </button>\n          <button \n            className={`nav-tab ${activeTab === 'layout' ? 'active' : ''}`}\n            onClick={() => setActiveTab('layout')}\n          >\n            📐 Layout\n          </button>\n          <button \n            className={`nav-tab ${activeTab === 'settings' ? 'active' : ''}`}\n            onClick={() => setActiveTab('settings')}\n          >\n            ⚙️ Settings\n          </button>\n        </nav>\n        \n        <main className=\"dashboard-main\">\n          {renderTabContent()}\n        </main>\n      </div>\n      \n      {/* Add Manual Reservation FAB */}\n      <button \n        className=\"fab-button\" \n        onClick={() => setShowAddModal(true)}\n        title=\"Add Manual Reservation\"\n      >\n        +\n      </button>\n      \n      {/* Modals */}\n      {showAddModal && (\n        <AddReservationModal \n          onClose={() => setShowAddModal(false)}\n          onSubmit={handleAddReservation}\n          isLoading={addingReservation}\n        />\n      )}\n      \n      {showViewModal && selectedReservation && (\n        <ViewReservationModal \n          reservation={selectedReservation}\n          onClose={() => {\n            setShowViewModal(false);\n            setSelectedReservation(null);\n          }}\n        />\n      )}\n      \n      {showUpdateModal && selectedReservation && (\n        <UpdateReservationModal \n          reservation={selectedReservation}\n          onClose={() => {\n            setShowUpdateModal(false);\n            setSelectedReservation(null);\n          }}\n          onUpdate={handleUpdateStatus}\n          isLoading={updatingReservation}\n        />\n      )}\n    </div>\n  );\n};\n\n// View Reservation Modal Component\nconst ViewReservationModal = ({ reservation, onClose }) => {\n  const getStatusColor = (status) => {\n    switch (status.toLowerCase()) {\n      case 'pending': return '#f56565';\n      case 'confirmed': return '#48bb78';\n      case 'completed': return '#4299e1';\n      case 'cancelled': return '#ed8936';\n      case 'no_show': return '#9f7aea';\n      default: return '#718096';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (timeString) => {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content view-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <div className=\"modal-title\">\n            <h2>📋 Reservation Details</h2>\n            <span className=\"reservation-id\">#{reservation.id?.slice(-8) || 'N/A'}</span>\n          </div>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"reservation-details\">\n          {/* Customer Information */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">👤 Customer Information</h3>\n            <div className=\"detail-grid\">\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📝</span>\n                  Full Name\n                </div>\n                <div className=\"detail-value\">{reservation.name}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📧</span>\n                  Email Address\n                </div>\n                <div className=\"detail-value\">{reservation.email}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📞</span>\n                  Phone Number\n                </div>\n                <div className=\"detail-value\">{reservation.phone}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">👥</span>\n                  Party Size\n                </div>\n                <div className=\"detail-value\">\n                  {reservation.guests} {reservation.guests === 1 ? 'guest' : 'guests'}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Reservation Information */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">🗓️ Reservation Information</h3>\n            <div className=\"detail-grid\">\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📅</span>\n                  Date\n                </div>\n                <div className=\"detail-value\">{formatDate(reservation.date)}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">🕒</span>\n                  Time\n                </div>\n                <div className=\"detail-value\">{formatTime(reservation.time)}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📊</span>\n                  Status\n                </div>\n                <div className=\"detail-value\">\n                  <span \n                    className=\"status-badge\" \n                    style={{ \n                      backgroundColor: getStatusColor(reservation.status),\n                      color: 'white',\n                      padding: '6px 12px',\n                      borderRadius: '20px',\n                      fontSize: '12px',\n                      fontWeight: '600',\n                      textTransform: 'uppercase'\n                    }}\n                  >\n                    {reservation.status}\n                  </span>\n                </div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">⏰</span>\n                  Created\n                </div>\n                <div className=\"detail-value\">\n                  {new Date(reservation.createdAt).toLocaleString('en-US', {\n                    month: 'short',\n                    day: 'numeric',\n                    year: 'numeric',\n                    hour: 'numeric',\n                    minute: '2-digit',\n                    hour12: true\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Special Requests */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">💬 Special Requests</h3>\n            <div className=\"special-requests\">\n              {reservation.specialRequests ? (\n                <div className=\"request-content\">\n                  <span className=\"detail-icon\">📝</span>\n                  <p>{reservation.specialRequests}</p>\n                </div>\n              ) : (\n                <div className=\"no-requests\">\n                  <span className=\"detail-icon\">✅</span>\n                  <p>No special requests</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"modal-actions\">\n          <button onClick={onClose} className=\"primary-btn\">\n            <span>✓</span> Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Update Reservation Modal Component\nconst UpdateReservationModal = ({ reservation, onClose, onUpdate, isLoading }) => {\n  const [selectedStatus, setSelectedStatus] = useState(reservation.status);\n  \n  const statusOptions = [\n    { value: 'PENDING', label: 'Pending', color: '#f56565' },\n    { value: 'CONFIRMED', label: 'Confirmed', color: '#48bb78' },\n    { value: 'COMPLETED', label: 'Completed', color: '#4299e1' },\n    { value: 'CANCELLED', label: 'Cancelled', color: '#ed8936' },\n    { value: 'NO_SHOW', label: 'No Show', color: '#9f7aea' }\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdate(reservation.id, selectedStatus);\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Update Reservation Status</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"reservation-summary\">\n          <p><strong>Customer:</strong> {reservation.name}</p>\n          <p><strong>Date:</strong> {new Date(reservation.date).toLocaleDateString()}</p>\n          <p><strong>Time:</strong> {reservation.time}</p>\n          <p><strong>Guests:</strong> {reservation.guests}</p>\n          <p><strong>Current Status:</strong> \n            <span className={`status ${reservation.status.toLowerCase()}`}>\n              {reservation.status}\n            </span>\n          </p>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"update-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"status\">New Status:</label>\n            <select\n              id=\"status\"\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              required\n            >\n              {statusOptions.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-btn\">\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              disabled={isLoading || selectedStatus === reservation.status} \n              className=\"submit-btn\"\n            >\n              {isLoading ? 'Updating...' : 'Update Status'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Add Reservation Modal Component\nconst AddReservationModal = ({ onClose, onSubmit, isLoading }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    date: '',\n    time: '',\n    guests: 2,\n    specialRequests: ''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.name || !formData.email || !formData.phone || !formData.date || !formData.time) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n\n    // Date validation (not in the past)\n    const selectedDate = new Date(formData.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    if (selectedDate < today) {\n      alert('Please select a date that is today or in the future.');\n      return;\n    }\n\n    onSubmit(formData);\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Add Manual Reservation</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"reservation-form\">\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Full Name *</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter customer name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email *</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                placeholder=\"customer@email.com\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone Number *</label>\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                name=\"phone\"\n                value={formData.phone}\n                onChange={handleInputChange}\n                required\n                placeholder=\"+355 XX XXX XXX\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"guests\">Number of Guests *</label>\n              <select\n                id=\"guests\"\n                name=\"guests\"\n                value={formData.guests}\n                onChange={handleInputChange}\n                required\n              >\n                {[1,2,3,4,5,6,7,8,9,10,11,12].map(num => (\n                  <option key={num} value={num}>{num} {num === 1 ? 'guest' : 'guests'}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"date\">Reservation Date *</label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                value={formData.date}\n                onChange={handleInputChange}\n                required\n                min={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"time\">Reservation Time *</label>\n              <select\n                id=\"time\"\n                name=\"time\"\n                value={formData.time}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"\">Select time</option>\n                <option value=\"12:00\">12:00 PM</option>\n                <option value=\"12:30\">12:30 PM</option>\n                <option value=\"13:00\">1:00 PM</option>\n                <option value=\"13:30\">1:30 PM</option>\n                <option value=\"14:00\">2:00 PM</option>\n                <option value=\"14:30\">2:30 PM</option>\n                <option value=\"15:00\">3:00 PM</option>\n                <option value=\"18:00\">6:00 PM</option>\n                <option value=\"18:30\">6:30 PM</option>\n                <option value=\"19:00\">7:00 PM</option>\n                <option value=\"19:30\">7:30 PM</option>\n                <option value=\"20:00\">8:00 PM</option>\n                <option value=\"20:30\">8:30 PM</option>\n                <option value=\"21:00\">9:00 PM</option>\n                <option value=\"21:30\">9:30 PM</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"specialRequests\">Special Requests</label>\n            <textarea\n              id=\"specialRequests\"\n              name=\"specialRequests\"\n              value={formData.specialRequests}\n              onChange={handleInputChange}\n              placeholder=\"Any dietary restrictions, special occasions, or other requests...\"\n              rows=\"3\"\n            />\n          </div>\n\n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-btn\">\n              Cancel\n            </button>\n            <button type=\"submit\" disabled={isLoading} className=\"submit-btn\">\n              {isLoading ? 'Adding...' : 'Add Reservation'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"names":["constructor","this","baseUrl","concat","getSettings","response","fetch","result","json","ok","Error","error","console","updateSettings","settingsData","method","headers","body","JSON","stringify","validateSettings","settings","errors","restaurantName","push","email","test","phone","operatingHours","forEach","day","dayHours","closed","open","close","charAt","toUpperCase","slice","isValid","length","_categories$find","categories","setCategories","useState","menuItems","setMenuItems","selectedCategory","setSelectedCategory","showCategoryForm","setShowCategoryForm","showItemForm","setShowItemForm","editingCategory","setEditingCategory","editingItem","setEditingItem","loading","setLoading","setError","categoryForm","setCategoryForm","nameAL","nameEN","nameIT","slug","displayOrder","itemForm","setItemForm","categoryId","descriptionAL","descriptionEN","descriptionIT","ingredientsAL","ingredientsEN","ingredientsIT","price","isVegetarian","isSpicy","isRecommended","isNew","imageUrl","loadMenuItems","useCallback","async","arguments","undefined","MenuService","getMenuItems","success","data","loadCategories","getCategories","categoriesData","id","useEffect","resetCategoryForm","resetItemForm","_jsx","className","children","_jsxs","onClick","disabled","map","category","e","stopPropagation","handleCategoryEdit","window","confirm","deleteCategory","handleCategoryDelete","_Fragment","find","c","item","currency","toString","handleItemEdit","deleteMenuItem","itemId","handleItemDelete","onSubmit","preventDefault","updateCategory","createCategory","type","value","onChange","name","_objectSpread","target","toLowerCase","replace","required","parseInt","itemData","parseFloat","updateMenuItem","createMenuItem","rows","placeholder","step","checked","RestaurantLayout","tables","setTables","x","y","size","seats","status","selectedTable","setSelectedTable","updateTableStatus","tableId","newStatus","prev","table","getTableColor","renderTable","commonProps","key","handleTableClick","style","cursor","fill","stroke","strokeWidth","filter","transition","width","height","rx","viewBox","patternUnits","cx","cy","r","textAnchor","fontSize","fontWeight","dominantBaseline","pointerEvents","textShadow","renderTableLabel","t","reduce","sum","TimeSlotModal","_ref","_slot$isActive","slot","onClose","onSave","title","formData","setFormData","time","maxCapacity","duration","isActive","handleChange","min","max","CapacityModal","_ref2","onUpdate","daysOfWeek","capacities","setCapacities","initialCapacities","_slot$capacityOverrid2","override","capacityOverrides","dayOfWeek","handleCapacityChange","dayId","capacity","timeSlotId","alert","TimeSlotManagement","timeSlots","setTimeSlots","showAddModal","setShowAddModal","editingSlot","setEditingSlot","showCapacityModal","setShowCapacityModal","selectedSlot","setSelectedSlot","short","fetchTimeSlots","formatTime","timeString","hours","minutes","split","hour","ampm","getCapacityForDay","_slot$capacityOverrid","handleDeleteSlot","slotData","handleUpdateSlot","ViewReservationModal","_reservation$id","reservation","guests","dateString","date","Date","toLocaleDateString","weekday","year","month","backgroundColor","getStatusColor","color","padding","borderRadius","textTransform","createdAt","toLocaleString","minute","hour12","specialRequests","UpdateReservationModal","isLoading","selectedStatus","setSelectedStatus","htmlFor","label","option","AddReservationModal","_ref3","handleInputChange","selectedDate","today","setHours","num","toISOString","Dashboard","_process$env$REACT_AP","isSignedIn","user","useUser","activeTab","setActiveTab","reservations","setReservations","stats","setStats","totalReservations","pendingReservations","activeBookings","completedReservations","showViewModal","setShowViewModal","showUpdateModal","setShowUpdateModal","selectedReservation","setSelectedReservation","addingReservation","setAddingReservation","updatingReservation","setUpdatingReservation","restaurantSettings","setRestaurantSettings","address","monday","tuesday","wednesday","thursday","friday","saturday","sunday","websiteUrl","facebookUrl","instagramUrl","emailNotifications","smsNotifications","loadingSettings","setLoadingSettings","savingSettings","setSavingSettings","dateFilter","setDateFilter","filteredReservations","setFilteredReservations","dateFilterActive","setDateFilterActive","fetchData","filterDate","options","reservationsResult","reservationService","getAll","total","pending","confirmed","completed","loadRestaurantSettings","Navigate","to","adminUserIds","process","includes","location","href","refreshData","currentFilter","handleDateFilterChange","handleTodayFilter","clearDateFilter","getCurrentReservations","restaurantSettingsService","saveRestaurantSettings","validation","join","message","handleRestaurantInfoSubmit","FormData","updatedSettings","get","handleOperatingHoursSubmit","updatedOperatingHours","src","alt","firstName","UserButton","renderTabContent","colSpan","handleViewReservation","handleUpdateReservation","MenuManagement","_restaurantSettings$o","_restaurantSettings$o2","_restaurantSettings$o3","_restaurantSettings$o4","_restaurantSettings$o5","create","reservationData","reload","reservationId","updateStatus"],"sourceRoot":""}