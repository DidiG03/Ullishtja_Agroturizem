{"version":3,"file":"static/js/28.d0f2e906.chunk.js","mappings":"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","sources":["services/restaurantSettingsService.js","components/MenuManagement.js","components/RestaurantLayout.js","components/TimeSlotManagement.js","components/BlogManagement.js","components/Dashboard.js","services/blogService.js"],"sourcesContent":["class RestaurantSettingsService {\n  constructor() {\n    // Use relative paths in production (Vercel functions)\n    const API_BASE_URL = process.env.NODE_ENV === 'production'\n      ? ''\n      : process.env.REACT_APP_API_URL || 'http://localhost:3001';\n    this.baseUrl = `${API_BASE_URL}/api/restaurant-settings`;\n  }\n\n  async getSettings() {\n    try {\n      const response = await fetch(this.baseUrl);\n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch settings');\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error fetching restaurant settings:', error);\n      throw error;\n    }\n  }\n\n  async updateSettings(settingsData) {\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(settingsData),\n      });\n      \n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update settings');\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error updating restaurant settings:', error);\n      throw error;\n    }\n  }\n\n  // Helper method to validate settings data\n  validateSettings(settings) {\n    const errors = [];\n    \n    if (!settings.restaurantName) {\n      errors.push('Restaurant name is required');\n    }\n    \n    if (!settings.email) {\n      errors.push('Email is required');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(settings.email)) {\n      errors.push('Please enter a valid email address');\n    }\n    \n    if (!settings.phone) {\n      errors.push('Phone number is required');\n    }\n    \n    // Validate operating hours\n    if (settings.operatingHours) {\n      const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n      days.forEach(day => {\n        const dayHours = settings.operatingHours[day];\n        if (dayHours && !dayHours.closed) {\n          if (!dayHours.open || !dayHours.close) {\n            errors.push(`${day.charAt(0).toUpperCase() + day.slice(1)} hours are incomplete`);\n          }\n          if (dayHours.open >= dayHours.close) {\n            errors.push(`${day.charAt(0).toUpperCase() + day.slice(1)} opening time must be before closing time`);\n          }\n        }\n      });\n    }\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n}\n\nconst restaurantSettingsService = new RestaurantSettingsService();\nexport default restaurantSettingsService; ","import React, { useState, useEffect, useCallback } from 'react';\nimport MenuService from '../services/menuService';\nimport './MenuManagement.css';\n\nfunction MenuManagement() {\n  const [categories, setCategories] = useState([]);\n  const [menuItems, setMenuItems] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryForm, setShowCategoryForm] = useState(false);\n  const [showItemForm, setShowItemForm] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editingItem, setEditingItem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [draggedCategory, setDraggedCategory] = useState(null);\n  const [dragOverIndex, setDragOverIndex] = useState(null);\n\n  // Form states\n  const [categoryForm, setCategoryForm] = useState({\n    nameAL: '',\n    nameEN: '',\n    nameIT: '',\n    slug: '',\n    displayOrder: 0\n  });\n\n  const [itemForm, setItemForm] = useState({\n    categoryId: '',\n    nameAL: '',\n    nameEN: '',\n    nameIT: '',\n    descriptionAL: '',\n    descriptionEN: '',\n    descriptionIT: '',\n    ingredientsAL: '',\n    ingredientsEN: '',\n    ingredientsIT: '',\n    price: '',\n    isVegetarian: false,\n    isSpicy: false,\n    isRecommended: false,\n    isNew: false,\n    imageUrl: '',\n    displayOrder: 0\n  });\n\n  const loadMenuItems = useCallback(async (categoryId = selectedCategory) => {\n    try {\n      const result = await MenuService.getMenuItems(categoryId);\n      if (result.success) {\n        setMenuItems(result.data || []);\n      } else {\n        setError(result.error || 'Failed to load menu items');\n      }\n    } catch (error) {\n      setError('Failed to load menu items');\n      console.error(error);\n    }\n  }, [selectedCategory]);\n\n  const loadCategories = useCallback(async () => {\n    try {\n      setLoading(true);\n      const result = await MenuService.getCategories();\n      if (result.success) {\n        const categoriesData = result.data || [];\n        setCategories(categoriesData);\n        if (categoriesData.length > 0 && !selectedCategory) {\n          setSelectedCategory(categoriesData[0].id);\n          loadMenuItems(categoriesData[0].id);\n        }\n      } else {\n        setError(result.error || 'Failed to load categories');\n      }\n    } catch (error) {\n      setError('Failed to load categories');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedCategory, loadMenuItems]);\n\n  // Load data\n  useEffect(() => {\n    loadCategories();\n  }, [loadCategories]);\n\n  // Category handlers\n  const handleCategorySubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingCategory) {\n        await MenuService.updateCategory(editingCategory.id, categoryForm);\n      } else {\n        await MenuService.createCategory(categoryForm);\n      }\n      await loadCategories();\n      resetCategoryForm();\n    } catch (error) {\n      setError(`Failed to ${editingCategory ? 'update' : 'create'} category`);\n    }\n  };\n\n  const handleCategoryEdit = (category) => {\n    setEditingCategory(category);\n    setCategoryForm({\n      nameAL: category.nameAL,\n      nameEN: category.nameEN,\n      nameIT: category.nameIT,\n      slug: category.slug,\n      displayOrder: category.displayOrder\n    });\n    setShowCategoryForm(true);\n  };\n\n  const handleCategoryDelete = async (categoryId) => {\n    if (window.confirm('Are you sure? This will delete all items in this category.')) {\n      try {\n        await MenuService.deleteCategory(categoryId);\n        await loadCategories();\n      } catch (error) {\n        setError('Failed to delete category');\n      }\n    }\n  };\n\n  const resetCategoryForm = () => {\n    setCategoryForm({\n      nameAL: '',\n      nameEN: '',\n      nameIT: '',\n      slug: '',\n      displayOrder: 0\n    });\n    setEditingCategory(null);\n    setShowCategoryForm(false);\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (e, category, index) => {\n    setDraggedCategory({ category, index });\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e, index) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverIndex(index);\n  };\n\n  const handleDragLeave = () => {\n    setDragOverIndex(null);\n  };\n\n  const handleDrop = async (e, dropIndex) => {\n    e.preventDefault();\n    setDragOverIndex(null);\n    \n    if (!draggedCategory || draggedCategory.index === dropIndex) {\n      setDraggedCategory(null);\n      return;\n    }\n\n    const newCategories = [...categories];\n    const [movedCategory] = newCategories.splice(draggedCategory.index, 1);\n    newCategories.splice(dropIndex, 0, movedCategory);\n\n    // Update the display order for all categories\n    const ordersToUpdate = newCategories.map((category, index) => ({\n      id: category.id,\n      displayOrder: index + 1\n    }));\n\n    try {\n      // Optimistically update the UI\n      setCategories(newCategories);\n      \n      // Update the server\n      await MenuService.updateCategoryOrders(ordersToUpdate);\n    } catch (error) {\n      // Revert on error\n      setError('Failed to update category order');\n      await loadCategories();\n    }\n\n    setDraggedCategory(null);\n  };\n\n  // Menu item handlers\n  const handleItemSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const itemData = {\n        ...itemForm,\n        price: parseFloat(itemForm.price),\n        categoryId: selectedCategory\n      };\n      \n      if (editingItem) {\n        await MenuService.updateMenuItem(editingItem.id, itemData);\n      } else {\n        await MenuService.createMenuItem(itemData);\n      }\n      await loadMenuItems();\n      resetItemForm();\n    } catch (error) {\n      setError(`Failed to ${editingItem ? 'update' : 'create'} menu item`);\n    }\n  };\n\n  const handleItemEdit = (item) => {\n    setEditingItem(item);\n    setItemForm({\n      categoryId: item.categoryId,\n      nameAL: item.nameAL,\n      nameEN: item.nameEN,\n      nameIT: item.nameIT,\n      descriptionAL: item.descriptionAL || '',\n      descriptionEN: item.descriptionEN || '',\n      descriptionIT: item.descriptionIT || '',\n      ingredientsAL: item.ingredientsAL || '',\n      ingredientsEN: item.ingredientsEN || '',\n      ingredientsIT: item.ingredientsIT || '',\n      price: item.price.toString(),\n      isVegetarian: item.isVegetarian,\n      isSpicy: item.isSpicy,\n      isRecommended: item.isRecommended,\n      isNew: item.isNew,\n      imageUrl: item.imageUrl || '',\n      displayOrder: item.displayOrder\n    });\n    setShowItemForm(true);\n  };\n\n  const handleItemDelete = async (itemId) => {\n    if (window.confirm('Are you sure you want to delete this menu item?')) {\n      try {\n        await MenuService.deleteMenuItem(itemId);\n        await loadMenuItems();\n      } catch (error) {\n        setError('Failed to delete menu item');\n      }\n    }\n  };\n\n  const resetItemForm = () => {\n    setItemForm({\n      categoryId: '',\n      nameAL: '',\n      nameEN: '',\n      nameIT: '',\n      descriptionAL: '',\n      descriptionEN: '',\n      descriptionIT: '',\n      ingredientsAL: '',\n      ingredientsEN: '',\n      ingredientsIT: '',\n      price: '',\n      isVegetarian: false,\n      isSpicy: false,\n      isRecommended: false,\n      isNew: false,\n      imageUrl: '',\n      displayOrder: 0\n    });\n    setEditingItem(null);\n    setShowItemForm(false);\n  };\n\n  // Generate slug from Albanian name\n  const generateSlug = (name) => {\n    return name\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  };\n\n  if (loading) return <div className=\"loading\">Loading menu management...</div>;\n\n  return (\n    <div className=\"menu-management\">\n      <div className=\"menu-management-header\">\n        <h2>Menu Management</h2>\n        <div className=\"header-actions\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => setShowCategoryForm(true)}\n          >\n            + Add Category\n          </button>\n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => setShowItemForm(true)}\n            disabled={!selectedCategory}\n          >\n            + Add Menu Item\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"menu-content\">\n        {/* Categories Sidebar */}\n        <div className=\"categories-sidebar\">\n          <h3>Categories</h3>\n          <div className=\"category-list\">\n            {categories.map((category, index) => (\n              <div \n                key={category.id}\n                className={`category-item ${selectedCategory === category.id ? 'active' : ''} ${\n                  dragOverIndex === index ? 'drag-over' : ''\n                } ${\n                  draggedCategory?.category.id === category.id ? 'dragging' : ''\n                }`}\n                draggable\n                onDragStart={(e) => handleDragStart(e, category, index)}\n                onDragOver={(e) => handleDragOver(e, index)}\n                onDragLeave={handleDragLeave}\n                onDrop={(e) => handleDrop(e, index)}\n                onClick={() => {\n                  setSelectedCategory(category.id);\n                  loadMenuItems(category.id);\n                }}\n              >\n                <div className=\"drag-handle\" title=\"Drag to reorder\">\n                  ⋮⋮\n                </div>\n                <div className=\"category-info\">\n                  <h4>{category.nameAL}</h4>\n                  <small>{category.nameEN}</small>\n                </div>\n                <div className=\"category-actions\">\n                  <button \n                    className=\"btn-icon\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleCategoryEdit(category);\n                    }}\n                  >\n                    ✏️\n                  </button>\n                  <button \n                    className=\"btn-icon\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleCategoryDelete(category.id);\n                    }}\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Menu Items */}\n        <div className=\"menu-items-section\">\n          {selectedCategory && (\n            <>\n              <h3>\n                Menu Items - {categories.find(c => c.id === selectedCategory)?.nameAL}\n              </h3>\n              <div className=\"menu-items-grid\">\n                {menuItems.map(item => (\n                  <div key={item.id} className=\"menu-item-card\">\n                    <div className=\"item-header\">\n                      <h4>{item.nameAL}</h4>\n                      <span className=\"price\">{item.price} {item.currency}</span>\n                    </div>\n                    <p className=\"description\">{item.descriptionAL}</p>\n                    <div className=\"item-badges\">\n                      {item.isVegetarian && <span className=\"badge vegetarian\">🌱</span>}\n                      {item.isSpicy && <span className=\"badge spicy\">🌶️</span>}\n                      {item.isRecommended && <span className=\"badge recommended\">⭐</span>}\n                      {item.isNew && <span className=\"badge new\">NEW</span>}\n                    </div>\n                    <div className=\"item-actions\">\n                      <button \n                        className=\"btn btn-small\"\n                        onClick={() => handleItemEdit(item)}\n                      >\n                        Edit\n                      </button>\n                      <button \n                        className=\"btn btn-small btn-danger\"\n                        onClick={() => handleItemDelete(item.id)}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Category Form Modal */}\n      {showCategoryForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>{editingCategory ? 'Edit Category' : 'Add New Category'}</h3>\n              <button \n                className=\"close-btn\"\n                onClick={resetCategoryForm}\n              >\n                ×\n              </button>\n            </div>\n            <form onSubmit={handleCategorySubmit}>\n              <div className=\"form-group\">\n                <label>Albanian Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameAL}\n                  onChange={(e) => {\n                    setCategoryForm({\n                      ...categoryForm,\n                      nameAL: e.target.value,\n                      slug: generateSlug(e.target.value)\n                    });\n                  }}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>English Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameEN}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameEN: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Italian Name</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameIT}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameIT: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>URL Slug</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.slug}\n                  onChange={(e) => setCategoryForm({...categoryForm, slug: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Display Order</label>\n                <input\n                  type=\"number\"\n                  value={categoryForm.displayOrder}\n                  onChange={(e) => setCategoryForm({...categoryForm, displayOrder: parseInt(e.target.value)})}\n                />\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={resetCategoryForm}>Cancel</button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  {editingCategory ? 'Update' : 'Create'} Category\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Menu Item Form Modal */}\n      {showItemForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal large\">\n            <div className=\"modal-header\">\n              <h3>{editingItem ? 'Edit Menu Item' : 'Add New Menu Item'}</h3>\n              <button \n                className=\"close-btn\"\n                onClick={resetItemForm}\n              >\n                ×\n              </button>\n            </div>\n            <form onSubmit={handleItemSubmit}>\n              <div className=\"form-grid\">\n                {/* Names */}\n                <div className=\"form-group\">\n                  <label>Albanian Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameAL}\n                    onChange={(e) => setItemForm({...itemForm, nameAL: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>English Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameEN}\n                    onChange={(e) => setItemForm({...itemForm, nameEN: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Italian Name</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.nameIT}\n                    onChange={(e) => setItemForm({...itemForm, nameIT: e.target.value})}\n                    required\n                  />\n                </div>\n\n                {/* Descriptions */}\n                <div className=\"form-group full-width\">\n                  <label>Albanian Description</label>\n                  <textarea\n                    value={itemForm.descriptionAL}\n                    onChange={(e) => setItemForm({...itemForm, descriptionAL: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>English Description</label>\n                  <textarea\n                    value={itemForm.descriptionEN}\n                    onChange={(e) => setItemForm({...itemForm, descriptionEN: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>Italian Description</label>\n                  <textarea\n                    value={itemForm.descriptionIT}\n                    onChange={(e) => setItemForm({...itemForm, descriptionIT: e.target.value})}\n                    rows=\"3\"\n                  />\n                </div>\n\n                {/* Ingredients */}\n                <div className=\"form-group\">\n                  <label>Albanian Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsAL}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsAL: e.target.value})}\n                    placeholder=\"Spinaq, djathë, vezë...\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>English Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsEN}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsEN: e.target.value})}\n                    placeholder=\"Spinach, cheese, eggs...\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Italian Ingredients</label>\n                  <input\n                    type=\"text\"\n                    value={itemForm.ingredientsIT}\n                    onChange={(e) => setItemForm({...itemForm, ingredientsIT: e.target.value})}\n                    placeholder=\"Spinaci, formaggio, uova...\"\n                  />\n                </div>\n\n                {/* Price and Properties */}\n                <div className=\"form-group\">\n                  <label>Price (ALL)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={itemForm.price}\n                    onChange={(e) => setItemForm({...itemForm, price: e.target.value})}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Display Order</label>\n                  <input\n                    type=\"number\"\n                    value={itemForm.displayOrder}\n                    onChange={(e) => setItemForm({...itemForm, displayOrder: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div className=\"form-group full-width\">\n                  <label>Image URL (optional)</label>\n                  <input\n                    type=\"url\"\n                    value={itemForm.imageUrl}\n                    onChange={(e) => setItemForm({...itemForm, imageUrl: e.target.value})}\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n\n                {/* Checkboxes */}\n                <div className=\"form-group checkbox-group\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isVegetarian}\n                      onChange={(e) => setItemForm({...itemForm, isVegetarian: e.target.checked})}\n                    />\n                    Vegetarian 🌱\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isSpicy}\n                      onChange={(e) => setItemForm({...itemForm, isSpicy: e.target.checked})}\n                    />\n                    Spicy 🌶️\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isRecommended}\n                      onChange={(e) => setItemForm({...itemForm, isRecommended: e.target.checked})}\n                    />\n                    Recommended ⭐\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={itemForm.isNew}\n                      onChange={(e) => setItemForm({...itemForm, isNew: e.target.checked})}\n                    />\n                    New Item 🆕\n                  </label>\n                </div>\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={resetItemForm}>Cancel</button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  {editingItem ? 'Update' : 'Create'} Menu Item\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MenuManagement; ","import React, { useState } from 'react';\nimport './RestaurantLayout.css';\n\nconst RestaurantLayout = () => {\n  // Enhanced table data with uniform size and proper container padding\n  const [tables, setTables] = useState([\n    // Terrace - Left side with proper padding\n    { id: 1, type: 'square', x: 80, y: 100, size: 60, seats: 4, status: 'available', name: 'T1' },\n    { id: 2, type: 'square', x: 200, y: 100, size: 60, seats: 6, status: 'occupied', name: 'T2' },\n    { id: 3, type: 'square', x: 80, y: 200, size: 60, seats: 4, status: 'available', name: 'T3' },\n    { id: 4, type: 'square', x: 200, y: 200, size: 60, seats: 4, status: 'reserved', name: 'T4' },\n    { id: 5, type: 'square', x: 80, y: 300, size: 60, seats: 4, status: 'available', name: 'T5' },\n    { id: 6, type: 'square', x: 200, y: 300, size: 60, seats: 4, status: 'cleaning', name: 'T6' },\n    \n    // Terrace Garden - Bottom left with proper padding\n    { id: 15, type: 'square', x: 80, y: 440, size: 60, seats: 4, status: 'available', name: 'TG1' },\n    { id: 16, type: 'square', x: 200, y: 440, size: 60, seats: 4, status: 'available', name: 'TG2' },\n    { id: 17, type: 'square', x: 80, y: 520, size: 60, seats: 6, status: 'occupied', name: 'TG3' },\n    { id: 18, type: 'square', x: 200, y: 520, size: 60, seats: 4, status: 'reserved', name: 'TG4' },\n    \n    // Prive - Bottom right with proper padding\n    { id: 19, type: 'square', x: 390, y: 440, size: 60, seats: 4, status: 'available', name: 'P1' },\n    { id: 20, type: 'square', x: 510, y: 440, size: 60, seats: 4, status: 'reserved', name: 'P2' },\n    { id: 21, type: 'square', x: 390, y: 520, size: 60, seats: 6, status: 'available', name: 'P3' },\n    { id: 22, type: 'square', x: 510, y: 520, size: 60, seats: 4, status: 'occupied', name: 'P4' },\n    \n    // Main Dining Area - Top right with proper padding\n    { id: 7, type: 'square', x: 390, y: 100, size: 60, seats: 4, status: 'available', name: 'M1' },\n    { id: 8, type: 'square', x: 510, y: 100, size: 60, seats: 4, status: 'occupied', name: 'M2' },\n    { id: 9, type: 'square', x: 570, y: 100, size: 60, seats: 6, status: 'reserved', name: 'M3' },\n    { id: 10, type: 'square', x: 390, y: 200, size: 60, seats: 4, status: 'cleaning', name: 'M4' },\n    { id: 11, type: 'square', x: 510, y: 200, size: 60, seats: 4, status: 'available', name: 'M5' },\n    { id: 12, type: 'square', x: 570, y: 200, size: 60, seats: 6, status: 'occupied', name: 'M6' },\n    { id: 13, type: 'square', x: 390, y: 300, size: 60, seats: 4, status: 'available', name: 'M7' },\n    { id: 14, type: 'square', x: 510, y: 300, size: 60, seats: 4, status: 'reserved', name: 'M8' },\n  ]);\n\n  const [selectedTable, setSelectedTable] = useState(null);\n\n  // Handle table click\n  const handleTableClick = (table) => {\n    setSelectedTable(table);\n  };\n\n  // Update table status\n  const updateTableStatus = (tableId, newStatus) => {\n    setTables(prev => prev.map(table => \n      table.id === tableId ? { ...table, status: newStatus } : table\n    ));\n    setSelectedTable(null);\n  };\n\n  // Enhanced color scheme\n  const getTableColor = (status) => {\n    switch (status) {\n      case 'available': return '#10B981'; // Emerald\n      case 'occupied': return '#EF4444'; // Red\n      case 'reserved': return '#F59E0B'; // Amber\n      case 'cleaning': return '#6B7280'; // Gray\n      default: return '#3B82F6'; // Blue\n    }\n  };\n\n  // Enhanced table rendering - square tables with uniform size\n  const renderTable = (table) => {\n    const commonProps = {\n      key: table.id,\n      onClick: () => handleTableClick(table),\n      style: {\n        cursor: 'pointer',\n        fill: getTableColor(table.status),\n        stroke: selectedTable?.id === table.id ? '#1F2937' : '#374151',\n        strokeWidth: selectedTable?.id === table.id ? 3 : 2,\n        filter: selectedTable?.id === table.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.3))' : 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\n        transition: 'all 0.3s ease',\n      }\n    };\n\n    return (\n      <rect\n        {...commonProps}\n        x={table.x}\n        y={table.y}\n        width={table.size}\n        height={table.size}\n        rx=\"8\"\n      />\n    );\n  };\n\n  // Enhanced table labels - showing seat count only\n  const renderTableLabel = (table) => {\n    const x = table.x + table.size/2;\n    const y = table.y + table.size/2;\n\n    return (\n      <text\n        key={`label-${table.id}`}\n        x={x}\n        y={y}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        style={{\n          fontSize: '18px',\n          fontWeight: 'bold',\n          fill: '#FFFFFF',\n          pointerEvents: 'none',\n          textShadow: '0 1px 2px rgba(0,0,0,0.5)',\n        }}\n      >\n        {table.seats}\n      </text>\n    );\n  };\n\n\n\n  return (\n    <div className=\"restaurant-layout\">\n      <div className=\"layout-header\">\n        <div className=\"header-content\">\n          <h2>🏛️ Restaurant Floor Plan</h2>\n          <p>Ullishtja Agroturizem - Table Management System</p>\n        </div>\n        <div className=\"layout-controls\">\n          <div className=\"status-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-color available\"></div>\n              <span>Available</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color occupied\"></div>\n              <span>Occupied</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color reserved\"></div>\n              <span>Reserved</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color cleaning\"></div>\n              <span>Cleaning</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"layout-container\">\n        <div className=\"layout-canvas\">\n          <svg width=\"700\" height=\"650\" viewBox=\"0 0 700 650\" className=\"restaurant-floor\">\n            {/* Restaurant Walls and Structure */}\n            <defs>\n              <pattern id=\"woodPattern\" patternUnits=\"userSpaceOnUse\" width=\"20\" height=\"20\">\n                <rect width=\"20\" height=\"20\" fill=\"#8B4513\"/>\n                <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" fill=\"#A0522D\"/>\n              </pattern>\n              <pattern id=\"tilePattern\" patternUnits=\"userSpaceOnUse\" width=\"15\" height=\"15\">\n                <rect width=\"15\" height=\"15\" fill=\"#F5F5F5\"/>\n                <rect x=\"1\" y=\"1\" width=\"13\" height=\"13\" fill=\"#FFFFFF\"/>\n              </pattern>\n              <pattern id=\"gardenPattern\" patternUnits=\"userSpaceOnUse\" width=\"25\" height=\"25\">\n                <rect width=\"25\" height=\"25\" fill=\"#D4F4DD\"/>\n                <circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"#10B981\"/>\n                <circle cx=\"5\" cy=\"20\" r=\"2\" fill=\"#059669\"/>\n                <circle cx=\"20\" cy=\"8\" r=\"2\" fill=\"#047857\"/>\n              </pattern>\n              <pattern id=\"privePattern\" patternUnits=\"userSpaceOnUse\" width=\"20\" height=\"20\">\n                <rect width=\"20\" height=\"20\" fill=\"#FEF3C7\"/>\n                <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" fill=\"#FDE68A\"/>\n                <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" fill=\"#FCD34D\"/>\n              </pattern>\n            </defs>\n            \n            {/* Main Building Structure - Extended */}\n            <rect x=\"30\" y=\"30\" width=\"640\" height=\"590\" fill=\"#F8F9FA\" stroke=\"#E5E7EB\" strokeWidth=\"4\" rx=\"15\" />\n            \n            {/* Terrace - Now on Left Side (renamed from Garden Terrace) */}\n            <rect x=\"50\" y=\"60\" width=\"290\" height=\"320\" fill=\"#F0FDF4\" stroke=\"#10B981\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"45\" y=\"55\" width=\"300\" height=\"330\" fill=\"none\" stroke=\"#059669\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Terrace Garden - New section below Terrace */}\n            <rect x=\"50\" y=\"410\" width=\"290\" height=\"190\" fill=\"url(#gardenPattern)\" stroke=\"#059669\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"45\" y=\"405\" width=\"300\" height=\"200\" fill=\"none\" stroke=\"#047857\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Main Dining Area - Top right (matching left side spacing) */}\n            <rect x=\"360\" y=\"60\" width=\"290\" height=\"320\" fill=\"url(#tilePattern)\" stroke=\"#D1D5DB\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"355\" y=\"55\" width=\"300\" height=\"330\" fill=\"none\" stroke=\"#6B7280\" strokeWidth=\"2\" rx=\"15\" />\n            \n            {/* Prive - Bottom right (matching Terrace Garden spacing) */}\n            <rect x=\"360\" y=\"410\" width=\"290\" height=\"190\" fill=\"url(#privePattern)\" stroke=\"#D97706\" strokeWidth=\"3\" rx=\"12\" />\n            <rect x=\"355\" y=\"405\" width=\"300\" height=\"200\" fill=\"none\" stroke=\"#B45309\" strokeWidth=\"2\" rx=\"15\" />\n\n            {/* Kitchen Area - Now in Right Side (Main Dining) */}\n            <rect x=\"570\" y=\"60\" width=\"70\" height=\"80\" fill=\"#FEE2E2\" stroke=\"#EF4444\" strokeWidth=\"2\" rx=\"8\" />\n            <rect x=\"575\" y=\"65\" width=\"60\" height=\"15\" fill=\"#DC2626\" rx=\"4\" />\n            <text x=\"605\" y=\"75\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              KITCHEN\n            </text>\n            \n            {/* Equipment in Kitchen */}\n            <circle cx=\"585\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <circle cx=\"600\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <circle cx=\"615\" cy=\"95\" r=\"6\" fill=\"#9CA3AF\" />\n            <rect x=\"580\" y=\"110\" width=\"25\" height=\"12\" fill=\"#6B7280\" rx=\"2\" />\n            <rect x=\"610\" y=\"110\" width=\"20\" height=\"12\" fill=\"#6B7280\" rx=\"2\" />\n\n            {/* Bar Area - Next to Kitchen */}\n            <rect x=\"570\" y=\"150\" width=\"70\" height=\"80\" fill=\"#FEF3C7\" stroke=\"#D97706\" strokeWidth=\"2\" rx=\"8\" />\n            <rect x=\"575\" y=\"155\" width=\"60\" height=\"15\" fill=\"#B45309\" rx=\"4\" />\n            <text x=\"605\" y=\"165\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              BAR\n            </text>\n            \n            {/* Bar Equipment */}\n            <circle cx=\"585\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <circle cx=\"600\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <circle cx=\"615\" cy=\"185\" r=\"6\" fill=\"#8B4513\" />\n            <rect x=\"580\" y=\"200\" width=\"25\" height=\"12\" fill=\"#A0522D\" rx=\"2\" />\n            <rect x=\"610\" y=\"200\" width=\"20\" height=\"12\" fill=\"#A0522D\" rx=\"2\" />\n\n            {/* Entrance - Centered between blocks */}\n            <rect x=\"310\" y=\"385\" width=\"80\" height=\"20\" fill=\"#3B82F6\" stroke=\"#1D4ED8\" strokeWidth=\"2\" rx=\"8\" />\n            <text x=\"350\" y=\"398\" textAnchor=\"middle\" style={{ fontSize: '12px', fontWeight: 'bold', fill: '#FFFFFF' }}>\n              ENTRANCE\n            </text>\n            \n            {/* Windows - Left Wall */}\n            <rect x=\"50\" y=\"75\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"130\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"185\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"470\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"50\" y=\"530\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            \n            {/* Windows - Right Wall */}\n            <rect x=\"642\" y=\"75\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"130\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"185\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"240\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"642\" y=\"295\" width=\"8\" height=\"40\" fill=\"#93C5FD\" stroke=\"#3B82F6\" strokeWidth=\"1\" rx=\"2\" />\n            \n            {/* Garden Elements - Now on Left Side (Terrace) */}\n            <circle cx=\"70\" cy=\"80\" r=\"8\" fill=\"#22C55E\" />\n            <circle cx=\"85\" cy=\"85\" r=\"6\" fill=\"#16A34A\" />\n            <circle cx=\"75\" cy=\"95\" r=\"5\" fill=\"#15803D\" />\n            <circle cx=\"310\" cy=\"80\" r=\"8\" fill=\"#22C55E\" />\n            <circle cx=\"300\" cy=\"90\" r=\"10\" fill=\"#16A34A\" />\n            <circle cx=\"320\" cy=\"95\" r=\"6\" fill=\"#15803D\" />\n            <circle cx=\"70\" cy=\"350\" r=\"10\" fill=\"#22C55E\" />\n            <circle cx=\"310\" cy=\"360\" r=\"8\" fill=\"#16A34A\" />\n            \n            {/* Enhanced Garden Elements in Terrace Garden */}\n            <circle cx=\"70\" cy=\"450\" r=\"10\" fill=\"#059669\" />\n            <circle cx=\"85\" cy=\"465\" r=\"8\" fill=\"#047857\" />\n            <circle cx=\"75\" cy=\"480\" r=\"6\" fill=\"#065F46\" />\n            <circle cx=\"310\" cy=\"460\" r=\"12\" fill=\"#059669\" />\n            <circle cx=\"300\" cy=\"480\" r=\"8\" fill=\"#047857\" />\n            <circle cx=\"320\" cy=\"495\" r=\"6\" fill=\"#065F46\" />\n            <circle cx=\"70\" cy=\"550\" r=\"9\" fill=\"#059669\" />\n            <circle cx=\"310\" cy=\"570\" r=\"10\" fill=\"#047857\" />\n            <circle cx=\"120\" cy=\"440\" r=\"5\" fill=\"#22C55E\" />\n            <circle cx=\"250\" cy=\"440\" r=\"7\" fill=\"#16A34A\" />\n            <circle cx=\"120\" cy=\"580\" r=\"6\" fill=\"#22C55E\" />\n            <circle cx=\"250\" cy=\"580\" r=\"8\" fill=\"#16A34A\" />\n\n            {/* Prive Section Decorative Elements */}\n            <circle cx=\"380\" cy=\"430\" r=\"8\" fill=\"#D97706\" />\n            <circle cx=\"520\" cy=\"440\" r=\"6\" fill=\"#B45309\" />\n            <circle cx=\"620\" cy=\"450\" r=\"7\" fill=\"#92400E\" />\n            <circle cx=\"380\" cy=\"570\" r=\"9\" fill=\"#D97706\" />\n            <circle cx=\"520\" cy=\"560\" r=\"8\" fill=\"#B45309\" />\n            <circle cx=\"620\" cy=\"570\" r=\"6\" fill=\"#92400E\" />\n            \n            {/* Prive Section Curtains/Partitions */}\n            <rect x=\"352\" y=\"410\" width=\"4\" height=\"190\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"658\" y=\"410\" width=\"4\" height=\"190\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"370\" y=\"402\" width=\"270\" height=\"4\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n            <rect x=\"370\" y=\"608\" width=\"270\" height=\"4\" fill=\"#8B4513\" stroke=\"#654321\" strokeWidth=\"1\" rx=\"2\" />\n\n            {/* Restrooms - Now in Right Side (Main Dining) */}\n            <rect x=\"570\" y=\"520\" width=\"60\" height=\"60\" fill=\"#F3F4F6\" stroke=\"#6B7280\" strokeWidth=\"2\" rx=\"6\" />\n            <text x=\"600\" y=\"540\" textAnchor=\"middle\" style={{ fontSize: '10px', fontWeight: 'bold', fill: '#6B7280' }}>\n              WC\n            </text>\n            <circle cx=\"585\" cy=\"560\" r=\"8\" fill=\"#E5E7EB\" stroke=\"#9CA3AF\" strokeWidth=\"1\" />\n            <circle cx=\"615\" cy=\"560\" r=\"8\" fill=\"#E5E7EB\" stroke=\"#9CA3AF\" strokeWidth=\"1\" />\n\n            {/* Area Labels with Enhanced Styling */}\n            <g>\n              <rect x=\"150\" y=\"25\" width=\"80\" height=\"25\" fill=\"rgba(240,253,244,0.9)\" stroke=\"#10B981\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"190\" y=\"40\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#047857' }}>\n                Terrace\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"120\" y=\"385\" width=\"120\" height=\"25\" fill=\"rgba(212,244,221,0.9)\" stroke=\"#059669\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"180\" y=\"400\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#047857' }}>\n                Terrace Garden\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"450\" y=\"385\" width=\"80\" height=\"25\" fill=\"rgba(248,246,240,0.9)\" stroke=\"#D97706\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"490\" y=\"400\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#B45309' }}>\n                Prive\n              </text>\n            </g>\n            \n            <g>\n              <rect x=\"450\" y=\"25\" width=\"120\" height=\"25\" fill=\"rgba(255,255,255,0.9)\" stroke=\"#E5E7EB\" strokeWidth=\"1\" rx=\"6\" />\n              <text x=\"510\" y=\"40\" textAnchor=\"middle\" style={{ fontSize: '14px', fontWeight: 'bold', fill: '#1F2937' }}>\n                Main Dining Area\n              </text>\n            </g>\n\n\n\n            {/* Render all tables */}\n            {tables.map(table => renderTable(table))}\n            {tables.map(table => renderTableLabel(table))}\n          </svg>\n        </div>\n\n        {/* Enhanced Table Details Panel */}\n        {selectedTable && (\n          <div className=\"table-details\">\n            <div className=\"table-details-header\">\n              <h3>Table {selectedTable.name}</h3>\n              <div className={`status-badge ${selectedTable.status}`}>\n                {selectedTable.status}\n              </div>\n            </div>\n            \n            <div className=\"table-info\">\n              <div className=\"info-row\">\n                <span className=\"info-label\">Type:</span>\n                <span className=\"info-value\">{selectedTable.type}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"info-label\">Capacity:</span>\n                <span className=\"info-value\">{selectedTable.seats} guests</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"info-label\">Location:</span>\n                <span className=\"info-value\">\n                  {selectedTable.x < 350 ? \n                    (selectedTable.y < 390 ? 'Terrace' : 'Terrace Garden') : \n                    (selectedTable.y < 390 ? 'Main Dining' : 'Prive')\n                  }\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"table-actions\">\n              <button \n                className=\"status-btn available\"\n                onClick={() => updateTableStatus(selectedTable.id, 'available')}\n              >\n                ✅ Set Available\n              </button>\n              <button \n                className=\"status-btn occupied\"\n                onClick={() => updateTableStatus(selectedTable.id, 'occupied')}\n              >\n                🔴 Set Occupied\n              </button>\n              <button \n                className=\"status-btn reserved\"\n                onClick={() => updateTableStatus(selectedTable.id, 'reserved')}\n              >\n                🟡 Set Reserved\n              </button>\n              <button \n                className=\"status-btn cleaning\"\n                onClick={() => updateTableStatus(selectedTable.id, 'cleaning')}\n              >\n                🧹 Set Cleaning\n              </button>\n            </div>\n            \n            <button className=\"close-details\" onClick={() => setSelectedTable(null)}>\n              ✕ Close Details\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Enhanced Statistics */}\n      <div className=\"layout-stats\">\n        <div className=\"stat-card available\">\n          <div className=\"stat-icon\">✅</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'available').length}</span>\n            <span className=\"stat-label\">Available Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card occupied\">\n          <div className=\"stat-icon\">🔴</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'occupied').length}</span>\n            <span className=\"stat-label\">Occupied Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card reserved\">\n          <div className=\"stat-icon\">🟡</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.filter(t => t.status === 'reserved').length}</span>\n            <span className=\"stat-label\">Reserved Tables</span>\n          </div>\n        </div>\n        <div className=\"stat-card total\">\n          <div className=\"stat-icon\">👥</div>\n          <div className=\"stat-content\">\n            <span className=\"stat-number\">{tables.reduce((sum, t) => sum + t.seats, 0)}</span>\n            <span className=\"stat-label\">Total Capacity</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantLayout; ","import React, { useState, useEffect } from 'react';\nimport './TimeSlotManagement.css';\n\nconst TimeSlotManagement = () => {\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSlot, setEditingSlot] = useState(null);\n  const [showCapacityModal, setShowCapacityModal] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n\n  // Days of the week mapping\n  const daysOfWeek = [\n    { id: 0, name: 'Sunday', short: 'Sun' },\n    { id: 1, name: 'Monday', short: 'Mon' },\n    { id: 2, name: 'Tuesday', short: 'Tue' },\n    { id: 3, name: 'Wednesday', short: 'Wed' },\n    { id: 4, name: 'Thursday', short: 'Thu' },\n    { id: 5, name: 'Friday', short: 'Fri' },\n    { id: 6, name: 'Saturday', short: 'Sat' },\n  ];\n\n  // Fetch time slots on component mount\n  useEffect(() => {\n    fetchTimeSlots();\n  }, []);\n\n  const fetchTimeSlots = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/timeslots-complete');\n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(result.data);\n      } else {\n        console.error('Failed to fetch time slots:', result.error);\n      }\n    } catch (error) {\n      console.error('Error fetching time slots:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSeedSlots = async () => {\n    try {\n      const response = await fetch('/api/timeslots-complete?action=seed');\n      const result = await response.json();\n      \n      if (result.success) {\n        alert('Default time slots created successfully!');\n        fetchTimeSlots();\n      } else {\n        alert('Failed to create default time slots: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error seeding time slots:', error);\n      alert('Error creating default time slots');\n    }\n  };\n\n  const handleCreateSlot = async (slotData) => {\n    try {\n      const response = await fetch('/api/timeslots-complete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(slotData),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots([...timeSlots, result.data]);\n        setShowAddModal(false);\n        alert('Time slot created successfully!');\n      } else {\n        alert('Failed to create time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error creating time slot:', error);\n      alert('Error creating time slot');\n    }\n  };\n\n  const handleUpdateSlot = async (id, slotData) => {\n    try {\n      const response = await fetch('/api/timeslots-complete', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, ...slotData }),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(timeSlots.map(slot => \n          slot.id === id ? result.data : slot\n        ));\n        setEditingSlot(null);\n        alert('Time slot updated successfully!');\n      } else {\n        alert('Failed to update time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error updating time slot:', error);\n      alert('Error updating time slot');\n    }\n  };\n\n  const handleDeleteSlot = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this time slot?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/timeslots-complete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id }),\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setTimeSlots(timeSlots.filter(slot => slot.id !== id));\n        alert('Time slot deleted successfully!');\n      } else {\n        alert('Failed to delete time slot: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error deleting time slot:', error);\n      alert('Error deleting time slot');\n    }\n  };\n\n  const formatTime = (timeString) => {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  const getCapacityForDay = (slot, dayOfWeek) => {\n    const override = slot.capacityOverrides?.find(\n      override => override.dayOfWeek === dayOfWeek && override.isActive\n    );\n    return override ? override.maxCapacity : slot.maxCapacity;\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading time slots...</div>;\n  }\n\n  return (\n    <div className=\"timeslot-management\">\n      <div className=\"timeslot-header\">\n        <h2>Time Slot Management</h2>\n        <div className=\"header-buttons\">\n          <button \n            className=\"seed-button\" \n            onClick={handleSeedSlots}\n            disabled={timeSlots.length > 0}\n          >\n            {timeSlots.length > 0 ? 'Default slots created' : 'Create Default Slots'}\n          </button>\n          <button \n            className=\"add-button\" \n            onClick={() => setShowAddModal(true)}\n          >\n            Add Time Slot\n          </button>\n        </div>\n      </div>\n\n      <div className=\"timeslot-grid\">\n        {timeSlots.map(slot => (\n          <div key={slot.id} className=\"timeslot-card\">\n            <div className=\"timeslot-header\">\n              <h3>{formatTime(slot.time)}</h3>\n              <span className={`status ${slot.isActive ? 'active' : 'inactive'}`}>\n                {slot.isActive ? 'Active' : 'Inactive'}\n              </span>\n            </div>\n            \n            <div className=\"timeslot-info\">\n              <div className=\"info-row\">\n                <span>Default Capacity:</span>\n                <span>{slot.maxCapacity} guests</span>\n              </div>\n              <div className=\"info-row\">\n                <span>Duration:</span>\n                <span>{slot.duration} minutes</span>\n              </div>\n              <div className=\"info-row\">\n                <span>Order:</span>\n                <span>{slot.displayOrder}</span>\n              </div>\n            </div>\n\n            <div className=\"capacity-overrides\">\n              <h4>Day-specific Capacity:</h4>\n              <div className=\"days-grid\">\n                {daysOfWeek.map(day => (\n                  <div key={day.id} className=\"day-capacity\">\n                    <span className=\"day-name\">{day.short}</span>\n                    <span className=\"capacity-value\">\n                      {getCapacityForDay(slot, day.id)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"timeslot-actions\">\n              <button \n                className=\"edit-button\"\n                onClick={() => setEditingSlot(slot)}\n              >\n                Edit\n              </button>\n              <button \n                className=\"capacity-button\"\n                onClick={() => {\n                  setSelectedSlot(slot);\n                  setShowCapacityModal(true);\n                }}\n              >\n                Capacity\n              </button>\n              <button \n                className=\"delete-button\"\n                onClick={() => handleDeleteSlot(slot.id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Add Time Slot Modal */}\n      {showAddModal && (\n        <TimeSlotModal\n          onClose={() => setShowAddModal(false)}\n          onSave={handleCreateSlot}\n          title=\"Add New Time Slot\"\n        />\n      )}\n\n      {/* Edit Time Slot Modal */}\n      {editingSlot && (\n        <TimeSlotModal\n          slot={editingSlot}\n          onClose={() => setEditingSlot(null)}\n          onSave={(data) => handleUpdateSlot(editingSlot.id, data)}\n          title=\"Edit Time Slot\"\n        />\n      )}\n\n      {/* Capacity Management Modal */}\n      {showCapacityModal && selectedSlot && (\n        <CapacityModal\n          slot={selectedSlot}\n          onClose={() => {\n            setShowCapacityModal(false);\n            setSelectedSlot(null);\n          }}\n          onUpdate={() => {\n            fetchTimeSlots();\n            setShowCapacityModal(false);\n            setSelectedSlot(null);\n          }}\n          daysOfWeek={daysOfWeek}\n        />\n      )}\n    </div>\n  );\n};\n\n// Time Slot Modal Component\nconst TimeSlotModal = ({ slot, onClose, onSave, title }) => {\n  const [formData, setFormData] = useState({\n    time: slot?.time || '',\n    maxCapacity: slot?.maxCapacity || 20,\n    duration: slot?.duration || 120,\n    displayOrder: slot?.displayOrder || 0,\n    isActive: slot?.isActive ?? true,\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>{title}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Time</label>\n            <input\n              type=\"time\"\n              name=\"time\"\n              value={formData.time}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Maximum Capacity</label>\n            <input\n              type=\"number\"\n              name=\"maxCapacity\"\n              value={formData.maxCapacity}\n              onChange={handleChange}\n              min=\"1\"\n              max=\"100\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Duration (minutes)</label>\n            <input\n              type=\"number\"\n              name=\"duration\"\n              value={formData.duration}\n              onChange={handleChange}\n              min=\"30\"\n              max=\"300\"\n              step=\"30\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Display Order</label>\n            <input\n              type=\"number\"\n              name=\"displayOrder\"\n              value={formData.displayOrder}\n              onChange={handleChange}\n              min=\"0\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"isActive\"\n                checked={formData.isActive}\n                onChange={handleChange}\n              />\n              Active\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose}>Cancel</button>\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Capacity Management Modal Component\nconst CapacityModal = ({ slot, onClose, onUpdate, daysOfWeek }) => {\n  const [capacities, setCapacities] = useState({});\n\n  useEffect(() => {\n    // Initialize capacities from slot data\n    const initialCapacities = {};\n    daysOfWeek.forEach(day => {\n      const override = slot.capacityOverrides?.find(\n        override => override.dayOfWeek === day.id && override.isActive\n      );\n      initialCapacities[day.id] = override ? override.maxCapacity : slot.maxCapacity;\n    });\n    setCapacities(initialCapacities);\n  }, [slot, daysOfWeek]);\n\n  const handleCapacityChange = (dayId, value) => {\n    setCapacities(prev => ({\n      ...prev,\n      [dayId]: parseInt(value)\n    }));\n  };\n\n  const handleSave = async () => {\n    try {\n      // Save capacity overrides for each day\n      for (const dayId in capacities) {\n        const capacity = capacities[dayId];\n        \n        // Only create override if different from default\n        if (capacity !== slot.maxCapacity) {\n          await fetch('/api/timeslots-complete?path=capacity', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              timeSlotId: slot.id,\n              dayOfWeek: parseInt(dayId),\n              maxCapacity: capacity\n            })\n          });\n        }\n      }\n      \n      alert('Capacity settings saved successfully!');\n      onUpdate();\n    } catch (error) {\n      console.error('Error saving capacity settings:', error);\n      alert('Error saving capacity settings');\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content capacity-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Capacity Settings - {slot.time}</h3>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"capacity-form\">\n          <p>Default capacity: {slot.maxCapacity} guests</p>\n          \n          <div className=\"capacity-grid\">\n            {daysOfWeek.map(day => (\n              <div key={day.id} className=\"capacity-row\">\n                <label>{day.name}</label>\n                <input\n                  type=\"number\"\n                  value={capacities[day.id] || slot.maxCapacity}\n                  onChange={(e) => handleCapacityChange(day.id, e.target.value)}\n                  min=\"1\"\n                  max=\"100\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"modal-actions\">\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n          <button type=\"button\" onClick={handleSave}>Save</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeSlotManagement; ","// Blog Management Component\n// Dashboard interface for managing blog posts and categories\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport blogService from '../services/blogService';\nimport './BlogManagement.css';\n\nconst BlogManagement = () => {\n  const [activeTab, setActiveTab] = useState('posts'); // 'posts' or 'categories'\n  const [posts, setPosts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Post management state\n  const [showPostModal, setShowPostModal] = useState(false);\n  const [editingPost, setEditingPost] = useState(null);\n  const [postForm, setPostForm] = useState({\n    categoryId: '',\n    slug: '',\n    titleAL: '',\n    titleEN: '',\n    titleIT: '',\n    excerptAL: '',\n    excerptEN: '',\n    excerptIT: '',\n    contentAL: '',\n    contentEN: '',\n    contentIT: '',\n    metaDescriptionAL: '',\n    metaDescriptionEN: '',\n    metaDescriptionIT: '',\n    metaKeywordsAL: '',\n    metaKeywordsEN: '',\n    metaKeywordsIT: '',\n    featuredImageUrl: '',\n    featuredImageAlt: '',\n    isPublished: false,\n    isFeatured: false,\n    displayOrder: 0\n  });\n\n  // Category management state\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryForm, setCategoryForm] = useState({\n    nameAL: '',\n    nameEN: '',\n    nameIT: '',\n    slug: '',\n    descriptionAL: '',\n    descriptionEN: '',\n    descriptionIT: '',\n    displayOrder: 0,\n    isActive: true\n  });\n\n  // Search and filter state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('');\n  const [filterPublished, setFilterPublished] = useState('');\n\n  // Load data\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [postsResult, categoriesResult] = await Promise.all([\n        blogService.getPosts({ language: 'al' }),\n        blogService.getCategories({ language: 'al', includePosts: true })\n      ]);\n\n      setPosts(postsResult.data || []);\n      setCategories(categoriesResult.data || []);\n    } catch (err) {\n      setError('Failed to load data: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  // Clear messages\n  const clearMessages = () => {\n    setError('');\n    setSuccess('');\n  };\n\n  // Post management functions\n  const handleCreatePost = () => {\n    setEditingPost(null);\n    setPostForm({\n      categoryId: '',\n      slug: '',\n      titleAL: '',\n      titleEN: '',\n      titleIT: '',\n      excerptAL: '',\n      excerptEN: '',\n      excerptIT: '',\n      contentAL: '',\n      contentEN: '',\n      contentIT: '',\n      metaDescriptionAL: '',\n      metaDescriptionEN: '',\n      metaDescriptionIT: '',\n      metaKeywordsAL: '',\n      metaKeywordsEN: '',\n      metaKeywordsIT: '',\n      featuredImageUrl: '',\n      featuredImageAlt: '',\n      isPublished: false,\n      isFeatured: false,\n      displayOrder: 0\n    });\n    setShowPostModal(true);\n    clearMessages();\n  };\n\n  const handleEditPost = (post) => {\n    setEditingPost(post);\n    setPostForm({\n      categoryId: post.category.id,\n      slug: post.slug,\n      titleAL: post.titleAL || '',\n      titleEN: post.titleEN || '',\n      titleIT: post.titleIT || '',\n      excerptAL: post.excerptAL || '',\n      excerptEN: post.excerptEN || '',\n      excerptIT: post.excerptIT || '',\n      contentAL: post.contentAL || '',\n      contentEN: post.contentEN || '',\n      contentIT: post.contentIT || '',\n      metaDescriptionAL: post.metaDescriptionAL || '',\n      metaDescriptionEN: post.metaDescriptionEN || '',\n      metaDescriptionIT: post.metaDescriptionIT || '',\n      metaKeywordsAL: post.metaKeywordsAL || '',\n      metaKeywordsEN: post.metaKeywordsEN || '',\n      metaKeywordsIT: post.metaKeywordsIT || '',\n      featuredImageUrl: post.featuredImageUrl || '',\n      featuredImageAlt: post.featuredImageAlt || '',\n      isPublished: post.isPublished,\n      isFeatured: post.isFeatured,\n      displayOrder: post.displayOrder\n    });\n    setShowPostModal(true);\n    clearMessages();\n  };\n\n  const handleSavePost = async () => {\n    try {\n      setLoading(true);\n      clearMessages();\n\n      // Validate form\n      const validation = blogService.validatePostData(postForm);\n      if (!validation.isValid) {\n        setError(validation.errors.join(', '));\n        return;\n      }\n\n      if (editingPost) {\n        await blogService.updatePost(editingPost.id, postForm);\n        setSuccess('Post updated successfully');\n      } else {\n        await blogService.createPost(postForm);\n        setSuccess('Post created successfully');\n      }\n\n      setShowPostModal(false);\n      loadData();\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeletePost = async (postId) => {\n    if (!window.confirm('Are you sure you want to delete this post?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await blogService.deletePost(postId);\n      setSuccess('Post deleted successfully');\n      loadData();\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Category management functions\n  const handleCreateCategory = () => {\n    setEditingCategory(null);\n    setCategoryForm({\n      nameAL: '',\n      nameEN: '',\n      nameIT: '',\n      slug: '',\n      descriptionAL: '',\n      descriptionEN: '',\n      descriptionIT: '',\n      displayOrder: 0,\n      isActive: true\n    });\n    setShowCategoryModal(true);\n    clearMessages();\n  };\n\n  const handleEditCategory = (category) => {\n    setEditingCategory(category);\n    setCategoryForm({\n      nameAL: category.nameAL || '',\n      nameEN: category.nameEN || '',\n      nameIT: category.nameIT || '',\n      slug: category.slug,\n      descriptionAL: category.descriptionAL || '',\n      descriptionEN: category.descriptionEN || '',\n      descriptionIT: category.descriptionIT || '',\n      displayOrder: category.displayOrder,\n      isActive: category.isActive\n    });\n    setShowCategoryModal(true);\n    clearMessages();\n  };\n\n  const handleSaveCategory = async () => {\n    try {\n      setLoading(true);\n      clearMessages();\n\n      // Validate form\n      const validation = blogService.validateCategoryData(categoryForm);\n      if (!validation.isValid) {\n        setError(validation.errors.join(', '));\n        return;\n      }\n\n      if (editingCategory) {\n        await blogService.updateCategory(editingCategory.id, categoryForm);\n        setSuccess('Category updated successfully');\n      } else {\n        await blogService.createCategory(categoryForm);\n        setSuccess('Category created successfully');\n      }\n\n      setShowCategoryModal(false);\n      loadData();\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    if (!window.confirm('Are you sure you want to delete this category?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await blogService.deleteCategory(categoryId);\n      setSuccess('Category deleted successfully');\n      loadData();\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-generate slug from title\n  const handleTitleChange = (field, value, formType = 'post') => {\n    const form = formType === 'post' ? postForm : categoryForm;\n    const setForm = formType === 'post' ? setPostForm : setCategoryForm;\n\n    const updates = { [field]: value };\n\n    // Auto-generate slug from Albanian title\n    if (field === (formType === 'post' ? 'titleAL' : 'nameAL') && value) {\n      updates.slug = blogService.generateSlug(value);\n    }\n\n    setForm({ ...form, ...updates });\n  };\n\n  // Filter posts\n  const filteredPosts = posts.filter(post => {\n    const matchesSearch = !searchTerm || \n      post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      post.excerpt?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory = !filterCategory || post.category.id === filterCategory;\n    \n    const matchesPublished = filterPublished === '' || \n      (filterPublished === 'true' && post.isPublished) ||\n      (filterPublished === 'false' && !post.isPublished);\n\n    return matchesSearch && matchesCategory && matchesPublished;\n  });\n\n  return (\n    <div className=\"blog-management\">\n      <div className=\"blog-management-header\">\n        <h2>Blog Management</h2>\n        \n        {/* Tab Navigation */}\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-btn ${activeTab === 'posts' ? 'active' : ''}`}\n            onClick={() => setActiveTab('posts')}\n          >\n            Posts ({posts.length})\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'categories' ? 'active' : ''}`}\n            onClick={() => setActiveTab('categories')}\n          >\n            Categories ({categories.length})\n          </button>\n        </div>\n      </div>\n\n      {/* Messages */}\n      {error && (\n        <div className=\"message error\">\n          {error}\n          <button onClick={clearMessages}>×</button>\n        </div>\n      )}\n      {success && (\n        <div className=\"message success\">\n          {success}\n          <button onClick={clearMessages}>×</button>\n        </div>\n      )}\n\n      {/* Posts Tab */}\n      {activeTab === 'posts' && (\n        <div className=\"posts-section\">\n          <div className=\"section-header\">\n            <div className=\"filters\">\n              <input\n                type=\"text\"\n                placeholder=\"Search posts...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n              />\n              <select\n                value={filterCategory}\n                onChange={(e) => setFilterCategory(e.target.value)}\n                className=\"filter-select\"\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(cat => (\n                  <option key={cat.id} value={cat.id}>{cat.name}</option>\n                ))}\n              </select>\n              <select\n                value={filterPublished}\n                onChange={(e) => setFilterPublished(e.target.value)}\n                className=\"filter-select\"\n              >\n                <option value=\"\">All Status</option>\n                <option value=\"true\">Published</option>\n                <option value=\"false\">Draft</option>\n              </select>\n            </div>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleCreatePost}\n              disabled={loading}\n            >\n              + New Post\n            </button>\n          </div>\n\n          <div className=\"posts-grid\">\n            {filteredPosts.map(post => (\n              <div key={post.id} className=\"post-card\">\n                {post.featuredImageUrl && (\n                  <img \n                    src={post.featuredImageUrl} \n                    alt={post.featuredImageAlt || post.title}\n                    className=\"post-card-image\"\n                  />\n                )}\n                <div className=\"post-card-content\">\n                  <h3 className=\"post-card-title\">{post.title}</h3>\n                  <p className=\"post-card-excerpt\">{post.excerpt}</p>\n                  <div className=\"post-card-meta\">\n                    <span className=\"category-tag\">{post.category.name}</span>\n                    <span className={`status-tag ${post.isPublished ? 'published' : 'draft'}`}>\n                      {post.isPublished ? 'Published' : 'Draft'}\n                    </span>\n                    {post.isFeatured && <span className=\"featured-tag\">Featured</span>}\n                  </div>\n                  <div className=\"post-card-stats\">\n                    <span>Views: {post.viewCount}</span>\n                    <span>Created: {new Date(post.createdAt).toLocaleDateString()}</span>\n                  </div>\n                  <div className=\"post-card-actions\">\n                    <button \n                      className=\"btn btn-sm btn-secondary\"\n                      onClick={() => handleEditPost(post)}\n                    >\n                      Edit\n                    </button>\n                    <button \n                      className=\"btn btn-sm btn-danger\"\n                      onClick={() => handleDeletePost(post.id)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {filteredPosts.length === 0 && !loading && (\n            <div className=\"empty-state\">\n              <p>No posts found. {posts.length === 0 ? 'Create your first post!' : 'Try adjusting your filters.'}</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Categories Tab */}\n      {activeTab === 'categories' && (\n        <div className=\"categories-section\">\n          <div className=\"section-header\">\n            <h3>Blog Categories</h3>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleCreateCategory}\n              disabled={loading}\n            >\n              + New Category\n            </button>\n          </div>\n\n          <div className=\"categories-list\">\n            {categories.map(category => (\n              <div key={category.id} className=\"category-item\">\n                <div className=\"category-info\">\n                  <h4>{category.name}</h4>\n                  <p>{category.description}</p>\n                  <div className=\"category-meta\">\n                    <span>Slug: {category.slug}</span>\n                    <span>Posts: {category.postCount}</span>\n                    <span className={`status-tag ${category.isActive ? 'active' : 'inactive'}`}>\n                      {category.isActive ? 'Active' : 'Inactive'}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"category-actions\">\n                  <button \n                    className=\"btn btn-sm btn-secondary\"\n                    onClick={() => handleEditCategory(category)}\n                  >\n                    Edit\n                  </button>\n                  <button \n                    className=\"btn btn-sm btn-danger\"\n                    onClick={() => handleDeleteCategory(category.id)}\n                    disabled={category.postCount > 0}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {categories.length === 0 && !loading && (\n            <div className=\"empty-state\">\n              <p>No categories found. Create your first category!</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Loading State */}\n      {loading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading...</p>\n        </div>\n      )}\n\n      {/* Post Modal */}\n      {showPostModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowPostModal(false)}>\n          <div className=\"modal-content large\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{editingPost ? 'Edit Post' : 'Create New Post'}</h3>\n              <button className=\"modal-close\" onClick={() => setShowPostModal(false)}>×</button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"form-grid\">\n                {/* Basic Information */}\n                <div className=\"form-section\">\n                  <h4>Basic Information</h4>\n                  \n                  <div className=\"form-group\">\n                    <label>Category *</label>\n                    <select\n                      value={postForm.categoryId}\n                      onChange={(e) => setPostForm({...postForm, categoryId: e.target.value})}\n                      required\n                    >\n                      <option value=\"\">Select Category</option>\n                      {categories.map(cat => (\n                        <option key={cat.id} value={cat.id}>{cat.name}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>URL Slug *</label>\n                    <input\n                      type=\"text\"\n                      value={postForm.slug}\n                      onChange={(e) => setPostForm({...postForm, slug: e.target.value})}\n                      placeholder=\"url-friendly-slug\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* Titles */}\n                <div className=\"form-section\">\n                  <h4>Titles</h4>\n                  \n                  <div className=\"form-group\">\n                    <label>Albanian Title *</label>\n                    <input\n                      type=\"text\"\n                      value={postForm.titleAL}\n                      onChange={(e) => handleTitleChange('titleAL', e.target.value)}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>English Title *</label>\n                    <input\n                      type=\"text\"\n                      value={postForm.titleEN}\n                      onChange={(e) => setPostForm({...postForm, titleEN: e.target.value})}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Italian Title *</label>\n                    <input\n                      type=\"text\"\n                      value={postForm.titleIT}\n                      onChange={(e) => setPostForm({...postForm, titleIT: e.target.value})}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* Note: Content editing will be enhanced with rich text editor */}\n                <div className=\"form-section full-width\">\n                  <h4>Content (Note: Rich text editor will be added)</h4>\n                  \n                  <div className=\"form-group\">\n                    <label>Albanian Content *</label>\n                    <textarea\n                      value={postForm.contentAL}\n                      onChange={(e) => setPostForm({...postForm, contentAL: e.target.value})}\n                      rows=\"10\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>English Content *</label>\n                    <textarea\n                      value={postForm.contentEN}\n                      onChange={(e) => setPostForm({...postForm, contentEN: e.target.value})}\n                      rows=\"10\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Italian Content *</label>\n                    <textarea\n                      value={postForm.contentIT}\n                      onChange={(e) => setPostForm({...postForm, contentIT: e.target.value})}\n                      rows=\"10\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* Settings */}\n                <div className=\"form-section\">\n                  <h4>Settings</h4>\n                  \n                  <div className=\"form-group checkbox-group\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={postForm.isPublished}\n                        onChange={(e) => setPostForm({...postForm, isPublished: e.target.checked})}\n                      />\n                      Published\n                    </label>\n                  </div>\n\n                  <div className=\"form-group checkbox-group\">\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={postForm.isFeatured}\n                        onChange={(e) => setPostForm({...postForm, isFeatured: e.target.checked})}\n                      />\n                      Featured\n                    </label>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Display Order</label>\n                    <input\n                      type=\"number\"\n                      value={postForm.displayOrder}\n                      onChange={(e) => setPostForm({...postForm, displayOrder: parseInt(e.target.value) || 0})}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button \n                className=\"btn btn-secondary\" \n                onClick={() => setShowPostModal(false)}\n                disabled={loading}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"btn btn-primary\" \n                onClick={handleSavePost}\n                disabled={loading}\n              >\n                {loading ? 'Saving...' : (editingPost ? 'Update Post' : 'Create Post')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Category Modal */}\n      {showCategoryModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowCategoryModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>{editingCategory ? 'Edit Category' : 'Create New Category'}</h3>\n              <button className=\"modal-close\" onClick={() => setShowCategoryModal(false)}>×</button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label>Albanian Name *</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameAL}\n                  onChange={(e) => handleTitleChange('nameAL', e.target.value, 'category')}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>English Name *</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameEN}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameEN: e.target.value})}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Italian Name *</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.nameIT}\n                  onChange={(e) => setCategoryForm({...categoryForm, nameIT: e.target.value})}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>URL Slug *</label>\n                <input\n                  type=\"text\"\n                  value={categoryForm.slug}\n                  onChange={(e) => setCategoryForm({...categoryForm, slug: e.target.value})}\n                  placeholder=\"url-friendly-slug\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Display Order</label>\n                <input\n                  type=\"number\"\n                  value={categoryForm.displayOrder}\n                  onChange={(e) => setCategoryForm({...categoryForm, displayOrder: parseInt(e.target.value) || 0})}\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={categoryForm.isActive}\n                    onChange={(e) => setCategoryForm({...categoryForm, isActive: e.target.checked})}\n                  />\n                  Active\n                </label>\n              </div>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button \n                className=\"btn btn-secondary\" \n                onClick={() => setShowCategoryModal(false)}\n                disabled={loading}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"btn btn-primary\" \n                onClick={handleSaveCategory}\n                disabled={loading}\n              >\n                {loading ? 'Saving...' : (editingCategory ? 'Update Category' : 'Create Category')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogManagement;","import React, { useState, useEffect } from 'react';\nimport { useUser, UserButton } from '@clerk/clerk-react';\nimport { Navigate } from 'react-router-dom';\nimport { reservationService } from '../reservationService.js';\nimport restaurantSettingsService from '../services/restaurantSettingsService.js';\nimport MenuManagement from './MenuManagement';\nimport RestaurantLayout from './RestaurantLayout';\nimport TimeSlotManagement from './TimeSlotManagement';\nimport BlogManagement from './BlogManagement';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const { isSignedIn, user } = useUser();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [reservations, setReservations] = useState([]);\n  const [stats, setStats] = useState({\n    totalReservations: 0,\n    pendingReservations: 0,\n    activeBookings: 0,\n    completedReservations: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showViewModal, setShowViewModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [addingReservation, setAddingReservation] = useState(false);\n  const [updatingReservation, setUpdatingReservation] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  \n  // Handle responsive sidebar collapse\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 1024) {\n        setSidebarCollapsed(true);\n      } else {\n        setSidebarCollapsed(false);\n      }\n    };\n\n    // Set initial state\n    handleResize();\n    \n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  // Restaurant settings state\n  const [restaurantSettings, setRestaurantSettings] = useState({\n    restaurantName: '',\n    email: '',\n    phone: '',\n    address: '',\n    operatingHours: {\n      monday: { open: '12:00', close: '22:00', closed: false },\n      tuesday: { open: '12:00', close: '22:00', closed: false },\n      wednesday: { open: '12:00', close: '22:00', closed: false },\n      thursday: { open: '12:00', close: '22:00', closed: false },\n      friday: { open: '12:00', close: '22:00', closed: false },\n      saturday: { open: '12:00', close: '22:00', closed: false },\n      sunday: { open: '12:00', close: '22:00', closed: false }\n    },\n    maxCapacity: 50,\n    websiteUrl: '',\n    facebookUrl: '',\n    instagramUrl: '',\n    emailNotifications: true,\n    smsNotifications: false\n  });\n  const [loadingSettings, setLoadingSettings] = useState(false);\n  const [savingSettings, setSavingSettings] = useState(false);\n  \n  // Date filtering state\n  const [dateFilter, setDateFilter] = useState('');\n  const [filteredReservations, setFilteredReservations] = useState([]);\n  const [dateFilterActive, setDateFilterActive] = useState(false);\n\n  // Fetch reservations and stats\n  const fetchData = async (filterDate = null) => {\n    try {\n      setLoading(true);\n      \n      // Prepare API options\n      const options = {};\n      if (filterDate) {\n        options.date = filterDate;\n      }\n      \n      const reservationsResult = await reservationService.getAll(options);\n      \n      if (reservationsResult.success) {\n        const data = reservationsResult.data;\n        \n        if (filterDate) {\n          setFilteredReservations(data);\n          setDateFilterActive(true);\n        } else {\n          setReservations(data);\n          setFilteredReservations([]);\n          setDateFilterActive(false);\n        }\n        \n        // Calculate stats based on current data\n        const total = data.length;\n        const pending = data.filter(r => r.status === 'PENDING').length;\n        const confirmed = data.filter(r => r.status === 'CONFIRMED').length;\n        const completed = data.filter(r => r.status === 'COMPLETED').length;\n        \n        setStats({\n          totalReservations: total,\n          pendingReservations: pending,\n          activeBookings: confirmed,\n          completedReservations: completed\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isSignedIn) {\n      fetchData();\n      loadRestaurantSettings();\n    }\n  }, [isSignedIn]);\n\n  // Check if user is signed in and is an admin\n  if (!isSignedIn) {\n    return <Navigate to=\"/admin-login\" replace />;\n  }\n\n  // Check if user is an admin\n  const adminUserIds = process.env.REACT_APP_ADMIN_USER_IDS?.split(',') || [];\n  if (isSignedIn && user && !adminUserIds.includes(user.id)) {\n    return (\n      <div className=\"unauthorized-container\">\n        <div className=\"unauthorized-content\">\n          <h1>Access Denied</h1>\n          <p>You don't have permission to access this area.</p>\n          <button onClick={() => window.location.href = '/'} className=\"home-button\">\n            Go to Homepage\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Handler functions\n  const handleViewReservation = (reservation) => {\n    setSelectedReservation(reservation);\n    setShowViewModal(true);\n  };\n\n  const handleUpdateReservation = (reservation) => {\n    setSelectedReservation(reservation);\n    setShowUpdateModal(true);\n  };\n\n  const handleUpdateStatus = async (reservationId, newStatus) => {\n    setUpdatingReservation(true);\n    try {\n      const result = await reservationService.updateStatus(reservationId, newStatus);\n      if (result.success) {\n        // Refresh the data\n        const reservationsResult = await reservationService.getAll();\n        if (reservationsResult.success) {\n          setReservations(reservationsResult.data);\n          \n          // Recalculate stats\n          const total = reservationsResult.data.length;\n          const pending = reservationsResult.data.filter(r => r.status === 'PENDING').length;\n          const confirmed = reservationsResult.data.filter(r => r.status === 'CONFIRMED').length;\n          const completed = reservationsResult.data.filter(r => r.status === 'COMPLETED').length;\n          \n          setStats({\n            totalReservations: total,\n            pendingReservations: pending,\n            activeBookings: confirmed,\n            completedReservations: completed\n          });\n        }\n        setShowUpdateModal(false);\n        setSelectedReservation(null);\n      } else {\n        alert('Failed to update status: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error updating status: ' + error.message);\n    } finally {\n      setUpdatingReservation(false);\n    }\n  };\n\n  const handleAddReservation = async (reservationData) => {\n    setAddingReservation(true);\n    try {\n      const result = await reservationService.create(reservationData);\n      if (result.success) {\n        alert('Reservation added successfully!');\n        setShowAddModal(false);\n        // Refresh the data\n        window.location.reload();\n      } else {\n        alert('Failed to add reservation: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error adding reservation: ' + error.message);\n    } finally {\n      setAddingReservation(false);\n    }\n  };\n\n  const refreshData = async () => {\n    const currentFilter = dateFilterActive ? dateFilter : null;\n    await fetchData(currentFilter);\n  };\n\n  // Date filtering helper functions\n  const handleDateFilterChange = (e) => {\n    const selectedDate = e.target.value;\n    setDateFilter(selectedDate);\n    \n    if (selectedDate) {\n      fetchData(selectedDate);\n    } else {\n      fetchData();\n    }\n  };\n\n  const handleTodayFilter = () => {\n    const today = new Date().toISOString().split('T')[0];\n    setDateFilter(today);\n    fetchData(today);\n  };\n\n  const clearDateFilter = () => {\n    setDateFilter('');\n    fetchData();\n  };\n\n  // Get current reservations display (filtered or all)\n  const getCurrentReservations = () => {\n    return dateFilterActive ? filteredReservations : reservations;\n  };\n\n  // Restaurant settings functions\n  const loadRestaurantSettings = async () => {\n    try {\n      setLoadingSettings(true);\n      const result = await restaurantSettingsService.getSettings();\n      \n      if (result.success) {\n        setRestaurantSettings(result.data);\n      } else {\n        console.error('Failed to load restaurant settings:', result.error);\n      }\n    } catch (error) {\n      console.error('Error loading restaurant settings:', error);\n    } finally {\n      setLoadingSettings(false);\n    }\n  };\n\n  const saveRestaurantSettings = async (settingsData) => {\n    try {\n      setSavingSettings(true);\n      \n      // Validate settings data\n      const validation = restaurantSettingsService.validateSettings(settingsData);\n      \n      if (!validation.isValid) {\n        alert('Please fix the following errors:\\n' + validation.errors.join('\\n'));\n        return;\n      }\n      \n      const result = await restaurantSettingsService.updateSettings(settingsData);\n      \n      if (result.success) {\n        setRestaurantSettings(result.data);\n        alert('Settings saved successfully!');\n      } else {\n        alert('Failed to save settings: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error saving restaurant settings:', error);\n      alert('Error saving settings: ' + error.message);\n    } finally {\n      setSavingSettings(false);\n    }\n  };\n\n  const handleRestaurantInfoSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedSettings = {\n      ...restaurantSettings,\n      restaurantName: formData.get('restaurantName'),\n      phone: formData.get('phone'),\n      email: formData.get('email'),\n      address: formData.get('address'),\n      websiteUrl: formData.get('websiteUrl'),\n      facebookUrl: formData.get('facebookUrl'),\n      instagramUrl: formData.get('instagramUrl'),\n      emailNotifications: formData.get('emailNotifications') === 'on',\n      smsNotifications: formData.get('smsNotifications') === 'on',\n    };\n    saveRestaurantSettings(updatedSettings);\n  };\n\n  const handleOperatingHoursSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedOperatingHours = { ...restaurantSettings.operatingHours };\n    \n    ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].forEach(day => {\n      updatedOperatingHours[day] = {\n        open: formData.get(`${day}_open`),\n        close: formData.get(`${day}_close`),\n        closed: formData.get(`${day}_closed`) === 'on'\n      };\n    });\n    \n    const updatedSettings = {\n      ...restaurantSettings,\n      operatingHours: updatedOperatingHours\n    };\n    \n    saveRestaurantSettings(updatedSettings);\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return (\n          <div className=\"tab-content\">\n            <h2>Dashboard Overview</h2>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stat-card\">\n                <h3>Total Reservations</h3>\n                <div className=\"stat-number\">{stats.totalReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? `For ${new Date(dateFilter).toLocaleDateString()}`\n                    : 'All time reservations'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Pending</h3>\n                <div className=\"stat-number\">{stats.pendingReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Awaiting confirmation'\n                    : 'Awaiting confirmation'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Active Bookings</h3>\n                <div className=\"stat-number\">{stats.activeBookings}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Confirmed reservations'\n                    : 'Confirmed reservations'\n                  }\n                </div>\n              </div>\n              \n              <div className=\"stat-card\">\n                <h3>Completed</h3>\n                <div className=\"stat-number\">{stats.completedReservations}</div>\n                <div className=\"stat-change\">\n                  {dateFilterActive \n                    ? 'Successfully served'\n                    : 'Successfully served'\n                  }\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"reservations-section\">\n              <div className=\"table-header\">\n                <h3>\n                  {dateFilterActive \n                    ? `Reservations for ${new Date(dateFilter).toLocaleDateString()}`\n                    : 'Recent Reservations'\n                  }\n                </h3>\n                <div className=\"table-actions\">\n                  <div className=\"date-filter-controls\">\n                    <input\n                      type=\"date\"\n                      value={dateFilter}\n                      onChange={handleDateFilterChange}\n                      className=\"date-filter-input\"\n                    />\n                    <button onClick={handleTodayFilter} className=\"today-btn\">\n                      Today\n                    </button>\n                    {dateFilterActive && (\n                      <button onClick={clearDateFilter} className=\"clear-filter-btn\">\n                        Show All\n                      </button>\n                    )}\n                  </div>\n                  <div className=\"reservation-count\">\n                    <p>Total Reservations: {getCurrentReservations().length}</p>\n                    <button onClick={refreshData} className=\"refresh-btn\" disabled={loading}>\n                      {loading ? 'Refreshing...' : 'Refresh'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"reservations-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Phone</th>\n                      <th>Guests</th>\n                      <th>Time</th>\n                      <th>Status</th>\n                      <th>Special Requests</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {getCurrentReservations().length === 0 ? (\n                      <tr>\n                        <td colSpan=\"9\" className=\"no-data\">\n                          {loading ? 'Loading reservations...' : 'No reservations found'}\n                        </td>\n                      </tr>\n                    ) : (\n                      getCurrentReservations().map((reservation) => (\n                        <tr key={reservation.id}>\n                          <td>{new Date(reservation.date).toLocaleDateString()}</td>\n                          <td>{reservation.name}</td>\n                          <td>{reservation.email}</td>\n                          <td>{reservation.phone}</td>\n                          <td>{reservation.guests}</td>\n                          <td>{reservation.time}</td>\n                          <td>\n                            <span className={`status ${reservation.status.toLowerCase()}`}>\n                              {reservation.status}\n                            </span>\n                          </td>\n                          <td>{reservation.specialRequests || 'None'}</td>\n                          <td>\n                            <button \n                              onClick={() => handleViewReservation(reservation)}\n                              className=\"action-btn view\"\n                            >\n                              View\n                            </button>\n                            <button \n                              onClick={() => handleUpdateReservation(reservation)}\n                              className=\"action-btn edit\"\n                            >\n                              Update\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'menu':\n        return <MenuManagement />;\n        \n      case 'blog':\n        return <BlogManagement />;\n        \n      case 'timeslots':\n        return <TimeSlotManagement />;\n        \n      case 'layout':\n        return <RestaurantLayout />;\n        \n      case 'settings':\n        return (\n          <div className=\"tab-content\">\n            <h2>Settings</h2>\n            {loadingSettings ? (\n              <div className=\"loading\">Loading settings...</div>\n            ) : (\n              <div className=\"settings-sections\">\n                <div className=\"settings-section\">\n                  <h3>Restaurant Information</h3>\n                  <form onSubmit={handleRestaurantInfoSubmit}>\n                    <div className=\"form-group\">\n                      <label>Restaurant Name</label>\n                      <input \n                        type=\"text\" \n                        name=\"restaurantName\"\n                        value={restaurantSettings.restaurantName}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, restaurantName: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Phone Number</label>\n                      <input \n                        type=\"tel\" \n                        name=\"phone\"\n                        value={restaurantSettings.phone}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, phone: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Email</label>\n                      <input \n                        type=\"email\" \n                        name=\"email\"\n                        value={restaurantSettings.email}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, email: e.target.value})}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Address</label>\n                      <input \n                        type=\"text\" \n                        name=\"address\"\n                        value={restaurantSettings.address}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, address: e.target.value})}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Website URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"websiteUrl\"\n                        value={restaurantSettings.websiteUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, websiteUrl: e.target.value})}\n                        placeholder=\"https://example.com\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Facebook URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"facebookUrl\"\n                        value={restaurantSettings.facebookUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, facebookUrl: e.target.value})}\n                        placeholder=\"https://facebook.com/yourpage\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Instagram URL</label>\n                      <input \n                        type=\"url\" \n                        name=\"instagramUrl\"\n                        value={restaurantSettings.instagramUrl || ''}\n                        onChange={(e) => setRestaurantSettings({...restaurantSettings, instagramUrl: e.target.value})}\n                        placeholder=\"https://instagram.com/yourpage\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <input \n                          type=\"checkbox\" \n                          name=\"emailNotifications\"\n                          checked={restaurantSettings.emailNotifications}\n                          onChange={(e) => setRestaurantSettings({...restaurantSettings, emailNotifications: e.target.checked})}\n                        />\n                        Email Notifications\n                      </label>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>\n                        <input \n                          type=\"checkbox\" \n                          name=\"smsNotifications\"\n                          checked={restaurantSettings.smsNotifications}\n                          onChange={(e) => setRestaurantSettings({...restaurantSettings, smsNotifications: e.target.checked})}\n                        />\n                        SMS Notifications\n                      </label>\n                    </div>\n                    <button type=\"submit\" className=\"save-btn\" disabled={savingSettings}>\n                      {savingSettings ? 'Saving...' : 'Save Changes'}\n                    </button>\n                  </form>\n                </div>\n                \n                <div className=\"settings-section\">\n                  <h3>Operating Hours</h3>\n                  <form onSubmit={handleOperatingHoursSubmit}>\n                    <div className=\"hours-grid\">\n                      {['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].map(day => (\n                        <div key={day} className=\"day-hours\">\n                          <span>{day.charAt(0).toUpperCase() + day.slice(1)}</span>\n                          <input \n                            type=\"time\" \n                            name={`${day}_open`}\n                            value={restaurantSettings.operatingHours[day]?.open || '12:00'}\n                            onChange={(e) => setRestaurantSettings({\n                              ...restaurantSettings,\n                              operatingHours: {\n                                ...restaurantSettings.operatingHours,\n                                [day]: {\n                                  ...restaurantSettings.operatingHours[day],\n                                  open: e.target.value\n                                }\n                              }\n                            })}\n                            disabled={restaurantSettings.operatingHours[day]?.closed}\n                          />\n                          <span>to</span>\n                          <input \n                            type=\"time\" \n                            name={`${day}_close`}\n                            value={restaurantSettings.operatingHours[day]?.close || '22:00'}\n                            onChange={(e) => setRestaurantSettings({\n                              ...restaurantSettings,\n                              operatingHours: {\n                                ...restaurantSettings.operatingHours,\n                                [day]: {\n                                  ...restaurantSettings.operatingHours[day],\n                                  close: e.target.value\n                                }\n                              }\n                            })}\n                            disabled={restaurantSettings.operatingHours[day]?.closed}\n                          />\n                          <label>\n                            <input \n                              type=\"checkbox\" \n                              name={`${day}_closed`}\n                              checked={restaurantSettings.operatingHours[day]?.closed || false}\n                              onChange={(e) => setRestaurantSettings({\n                                ...restaurantSettings,\n                                operatingHours: {\n                                  ...restaurantSettings.operatingHours,\n                                  [day]: {\n                                    ...restaurantSettings.operatingHours[day],\n                                    closed: e.target.checked\n                                  }\n                                }\n                              })}\n                            />\n                            Closed\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                    <button type=\"submit\" className=\"save-btn\" disabled={savingSettings}>\n                      {savingSettings ? 'Saving...' : 'Save Hours'}\n                    </button>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n        \n      default:\n        return <div>Tab content not found</div>;\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <div className=\"header-left\">\n          <img \n            src=\"https://ucarecdn.com/f2ebac4d-52d3-45f7-997d-3e2dea09557b/ullishtja_logo.jpeg\" \n            alt=\"Ullishtja Logo\" \n            className=\"dashboard-logo\"\n          />\n          <div className=\"header-text\">\n            <h1>Admin Dashboard</h1>\n            <p>Welcome back, {user?.firstName || 'Admin'}!</p>\n          </div>\n        </div>\n        <div className=\"header-right\">\n          <UserButton />\n        </div>\n      </div>\n      \n      <div className=\"dashboard-content\">\n        <nav className={`dashboard-nav ${sidebarCollapsed ? 'collapsed' : ''}`}>\n          <div className=\"nav-header\">\n            <button \n              className=\"nav-toggle\" \n              onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n              title={sidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n            >\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M3 12h18M3 6h18M3 18h18\"/>\n              </svg>\n            </button>\n            {!sidebarCollapsed && <span className=\"nav-title\">Dashboard</span>}\n          </div>\n          \n          <div className=\"nav-items\">\n            <button \n              className={`nav-tab ${activeTab === 'overview' ? 'active' : ''}`}\n              onClick={() => setActiveTab('overview')}\n              title=\"Overview\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n                <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Overview</span>}\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'menu' ? 'active' : ''}`}\n              onClick={() => setActiveTab('menu')}\n              title=\"Menu Management\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M9 12l2 2 4-4\"/>\n                <path d=\"M21 12c.552 0 1-.448 1-1V5c0-.552-.448-1-1-1H3c-.552 0-1 .448-1 1v6c0 .552.448 1 1 1h9zm0 0v7c0 .552-.448 1-1 1H11c-.552 0-1-.448-1-1v-7\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Menu</span>}\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'blog' ? 'active' : ''}`}\n              onClick={() => setActiveTab('blog')}\n              title=\"Blog Management\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n                <polyline points=\"14,2 14,8 20,8\"/>\n                <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\n                <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\n                <polyline points=\"10,9 9,9 8,9\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Blog</span>}\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'timeslots' ? 'active' : ''}`}\n              onClick={() => setActiveTab('timeslots')}\n              title=\"Time Slots\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n                <polyline points=\"12,6 12,12 16,14\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Time Slots</span>}\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'layout' ? 'active' : ''}`}\n              onClick={() => setActiveTab('layout')}\n              title=\"Restaurant Layout\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n                <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"/>\n                <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"/>\n                <line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Layout</span>}\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'settings' ? 'active' : ''}`}\n              onClick={() => setActiveTab('settings')}\n              title=\"Settings\"\n            >\n              <svg className=\"nav-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n                <path d=\"M12 1v6m0 8v6m11-7h-6m-8 0H1m17.5-2.5L19 19l-2.5-2.5M7 7L4.5 4.5M7 17l-2.5 2.5M17 7l2.5-2.5\"/>\n              </svg>\n              {!sidebarCollapsed && <span className=\"nav-text\">Settings</span>}\n            </button>\n          </div>\n        </nav>\n        \n        <main className=\"dashboard-main\">\n          {renderTabContent()}\n        </main>\n      </div>\n      \n      {/* Add Manual Reservation FAB */}\n      <button \n        className=\"fab-button\" \n        onClick={() => setShowAddModal(true)}\n        title=\"Add Manual Reservation\"\n      >\n        +\n      </button>\n      \n      {/* Modals */}\n      {showAddModal && (\n        <AddReservationModal \n          onClose={() => setShowAddModal(false)}\n          onSubmit={handleAddReservation}\n          isLoading={addingReservation}\n        />\n      )}\n      \n      {showViewModal && selectedReservation && (\n        <ViewReservationModal \n          reservation={selectedReservation}\n          onClose={() => {\n            setShowViewModal(false);\n            setSelectedReservation(null);\n          }}\n        />\n      )}\n      \n      {showUpdateModal && selectedReservation && (\n        <UpdateReservationModal \n          reservation={selectedReservation}\n          onClose={() => {\n            setShowUpdateModal(false);\n            setSelectedReservation(null);\n          }}\n          onUpdate={handleUpdateStatus}\n          isLoading={updatingReservation}\n        />\n      )}\n    </div>\n  );\n};\n\n// View Reservation Modal Component\nconst ViewReservationModal = ({ reservation, onClose }) => {\n  const getStatusColor = (status) => {\n    switch (status.toLowerCase()) {\n      case 'pending': return '#f56565';\n      case 'confirmed': return '#48bb78';\n      case 'completed': return '#4299e1';\n      case 'cancelled': return '#ed8936';\n      case 'no_show': return '#9f7aea';\n      default: return '#718096';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (timeString) => {\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content view-modal\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <div className=\"modal-title\">\n            <h2>📋 Reservation Details</h2>\n            <span className=\"reservation-id\">#{reservation.id?.slice(-8) || 'N/A'}</span>\n          </div>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"reservation-details\">\n          {/* Customer Information */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">👤 Customer Information</h3>\n            <div className=\"detail-grid\">\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📝</span>\n                  Full Name\n                </div>\n                <div className=\"detail-value\">{reservation.name}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📧</span>\n                  Email Address\n                </div>\n                <div className=\"detail-value\">{reservation.email}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📞</span>\n                  Phone Number\n                </div>\n                <div className=\"detail-value\">{reservation.phone}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">👥</span>\n                  Party Size\n                </div>\n                <div className=\"detail-value\">\n                  {reservation.guests} {reservation.guests === 1 ? 'guest' : 'guests'}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Reservation Information */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">🗓️ Reservation Information</h3>\n            <div className=\"detail-grid\">\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📅</span>\n                  Date\n                </div>\n                <div className=\"detail-value\">{formatDate(reservation.date)}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">🕒</span>\n                  Time\n                </div>\n                <div className=\"detail-value\">{formatTime(reservation.time)}</div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">📊</span>\n                  Status\n                </div>\n                <div className=\"detail-value\">\n                  <span \n                    className=\"status-badge\" \n                    style={{ \n                      backgroundColor: getStatusColor(reservation.status),\n                      color: 'white',\n                      padding: '6px 12px',\n                      borderRadius: '20px',\n                      fontSize: '12px',\n                      fontWeight: '600',\n                      textTransform: 'uppercase'\n                    }}\n                  >\n                    {reservation.status}\n                  </span>\n                </div>\n              </div>\n              <div className=\"detail-item\">\n                <div className=\"detail-label\">\n                  <span className=\"detail-icon\">⏰</span>\n                  Created\n                </div>\n                <div className=\"detail-value\">\n                  {new Date(reservation.createdAt).toLocaleString('en-US', {\n                    month: 'short',\n                    day: 'numeric',\n                    year: 'numeric',\n                    hour: 'numeric',\n                    minute: '2-digit',\n                    hour12: true\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Special Requests */}\n          <div className=\"detail-section\">\n            <h3 className=\"section-title\">💬 Special Requests</h3>\n            <div className=\"special-requests\">\n              {reservation.specialRequests ? (\n                <div className=\"request-content\">\n                  <span className=\"detail-icon\">📝</span>\n                  <p>{reservation.specialRequests}</p>\n                </div>\n              ) : (\n                <div className=\"no-requests\">\n                  <span className=\"detail-icon\">✅</span>\n                  <p>No special requests</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"modal-actions\">\n          <button onClick={onClose} className=\"primary-btn\">\n            <span>✓</span> Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Update Reservation Modal Component\nconst UpdateReservationModal = ({ reservation, onClose, onUpdate, isLoading }) => {\n  const [selectedStatus, setSelectedStatus] = useState(reservation.status);\n  \n  const statusOptions = [\n    { value: 'PENDING', label: 'Pending', color: '#f56565' },\n    { value: 'CONFIRMED', label: 'Confirmed', color: '#48bb78' },\n    { value: 'COMPLETED', label: 'Completed', color: '#4299e1' },\n    { value: 'CANCELLED', label: 'Cancelled', color: '#ed8936' },\n    { value: 'NO_SHOW', label: 'No Show', color: '#9f7aea' }\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdate(reservation.id, selectedStatus);\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Update Reservation Status</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"reservation-summary\">\n          <p><strong>Customer:</strong> {reservation.name}</p>\n          <p><strong>Date:</strong> {new Date(reservation.date).toLocaleDateString()}</p>\n          <p><strong>Time:</strong> {reservation.time}</p>\n          <p><strong>Guests:</strong> {reservation.guests}</p>\n          <p><strong>Current Status:</strong> \n            <span className={`status ${reservation.status.toLowerCase()}`}>\n              {reservation.status}\n            </span>\n          </p>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"update-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"status\">New Status:</label>\n            <select\n              id=\"status\"\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              required\n            >\n              {statusOptions.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-btn\">\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              disabled={isLoading || selectedStatus === reservation.status} \n              className=\"submit-btn\"\n            >\n              {isLoading ? 'Updating...' : 'Update Status'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Add Reservation Modal Component\nconst AddReservationModal = ({ onClose, onSubmit, isLoading }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    date: '',\n    time: '',\n    guests: 2,\n    specialRequests: ''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.name || !formData.email || !formData.phone || !formData.date || !formData.time) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n\n    // Date validation (not in the past)\n    const selectedDate = new Date(formData.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    if (selectedDate < today) {\n      alert('Please select a date that is today or in the future.');\n      return;\n    }\n\n    onSubmit(formData);\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Add Manual Reservation</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"reservation-form\">\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Full Name *</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter customer name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email *</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                placeholder=\"customer@email.com\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone Number *</label>\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                name=\"phone\"\n                value={formData.phone}\n                onChange={handleInputChange}\n                required\n                placeholder=\"+355 XX XXX XXX\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"guests\">Number of Guests *</label>\n              <select\n                id=\"guests\"\n                name=\"guests\"\n                value={formData.guests}\n                onChange={handleInputChange}\n                required\n              >\n                {[1,2,3,4,5,6,7,8,9,10,11,12].map(num => (\n                  <option key={num} value={num}>{num} {num === 1 ? 'guest' : 'guests'}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"date\">Reservation Date *</label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                value={formData.date}\n                onChange={handleInputChange}\n                required\n                min={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"time\">Reservation Time *</label>\n              <select\n                id=\"time\"\n                name=\"time\"\n                value={formData.time}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"\">Select time</option>\n                <option value=\"12:00\">12:00 PM</option>\n                <option value=\"12:30\">12:30 PM</option>\n                <option value=\"13:00\">1:00 PM</option>\n                <option value=\"13:30\">1:30 PM</option>\n                <option value=\"14:00\">2:00 PM</option>\n                <option value=\"14:30\">2:30 PM</option>\n                <option value=\"15:00\">3:00 PM</option>\n                <option value=\"18:00\">6:00 PM</option>\n                <option value=\"18:30\">6:30 PM</option>\n                <option value=\"19:00\">7:00 PM</option>\n                <option value=\"19:30\">7:30 PM</option>\n                <option value=\"20:00\">8:00 PM</option>\n                <option value=\"20:30\">8:30 PM</option>\n                <option value=\"21:00\">9:00 PM</option>\n                <option value=\"21:30\">9:30 PM</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"specialRequests\">Special Requests</label>\n            <textarea\n              id=\"specialRequests\"\n              name=\"specialRequests\"\n              value={formData.specialRequests}\n              onChange={handleInputChange}\n              placeholder=\"Any dietary restrictions, special occasions, or other requests...\"\n              rows=\"3\"\n            />\n          </div>\n\n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-btn\">\n              Cancel\n            </button>\n            <button type=\"submit\" disabled={isLoading} className=\"submit-btn\">\n              {isLoading ? 'Adding...' : 'Add Reservation'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; ","// Blog Service\n// Frontend service for blog operations\n\nclass BlogService {\n  constructor() {\n    this.apiBaseUrl = process.env.NODE_ENV === 'production' \n      ? '' \n      : process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  }\n\n  // Blog Posts API calls\n\n  async getPosts(options = {}) {\n    const {\n      published,\n      category,\n      featured,\n      limit,\n      offset,\n      search,\n      language = 'al'\n    } = options;\n\n    const params = new URLSearchParams();\n    if (published !== undefined) params.append('published', published);\n    if (category) params.append('category', category);\n    if (featured !== undefined) params.append('featured', featured);\n    if (limit) params.append('limit', limit);\n    if (offset) params.append('offset', offset);\n    if (search) params.append('search', search);\n    if (language) params.append('language', language);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?${params}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch posts');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error fetching blog posts:', error);\n      throw error;\n    }\n  }\n\n  async getPost(id, language = 'al') {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}&language=${language}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch post');\n      }\n\n      return result.data[0] || null;\n    } catch (error) {\n      console.error('Error fetching blog post:', error);\n      throw error;\n    }\n  }\n\n  async createPost(postData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to create post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error creating blog post:', error);\n      throw error;\n    }\n  }\n\n  async updatePost(id, postData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error updating blog post:', error);\n      throw error;\n    }\n  }\n\n  async deletePost(id) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting blog post:', error);\n      throw error;\n    }\n  }\n\n  // Blog Categories API calls\n\n  async getCategories(options = {}) {\n    const {\n      active,\n      language = 'al',\n      includePosts = false\n    } = options;\n\n    const params = new URLSearchParams();\n    if (active !== undefined) params.append('active', active);\n    if (language) params.append('language', language);\n    if (includePosts) params.append('includePosts', includePosts);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?${params}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch categories');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error fetching blog categories:', error);\n      throw error;\n    }\n  }\n\n  async createCategory(categoryData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(categoryData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to create category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error creating blog category:', error);\n      throw error;\n    }\n  }\n\n  async updateCategory(id, categoryData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(categoryData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error updating blog category:', error);\n      throw error;\n    }\n  }\n\n  async deleteCategory(id) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?id=${id}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting blog category:', error);\n      throw error;\n    }\n  }\n\n  // Image Upload API calls\n\n  async uploadImage(file, options = {}) {\n    const { blogPostId, title, altText } = options;\n\n    const formData = new FormData();\n    formData.append('image', file);\n    if (blogPostId) formData.append('blogPostId', blogPostId);\n    if (title) formData.append('title', title);\n    if (altText) formData.append('altText', altText);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to upload image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      throw error;\n    }\n  }\n\n  async deleteImage(imageId) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload?imageId=${imageId}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      throw error;\n    }\n  }\n\n  async deleteImageByFilename(filename) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload?filename=${filename}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      throw error;\n    }\n  }\n\n  // Utility methods\n\n  generateSlug(title) {\n    return title\n      .toLowerCase()\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\n      .replace(/-+/g, '-') // Replace multiple hyphens with single\n      .trim('-'); // Remove leading/trailing hyphens\n  }\n\n  validatePostData(postData) {\n    const errors = [];\n\n    if (!postData.titleAL) errors.push('Albanian title is required');\n    if (!postData.titleEN) errors.push('English title is required');\n    if (!postData.titleIT) errors.push('Italian title is required');\n    if (!postData.contentAL) errors.push('Albanian content is required');\n    if (!postData.contentEN) errors.push('English content is required');\n    if (!postData.contentIT) errors.push('Italian content is required');\n    if (!postData.categoryId) errors.push('Category is required');\n    if (!postData.slug) errors.push('Slug is required');\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  validateCategoryData(categoryData) {\n    const errors = [];\n\n    if (!categoryData.nameAL) errors.push('Albanian name is required');\n    if (!categoryData.nameEN) errors.push('English name is required');\n    if (!categoryData.nameIT) errors.push('Italian name is required');\n    if (!categoryData.slug) errors.push('Slug is required');\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n}\n\nconst blogService = new BlogService();\nexport default blogService;"],"names":["constructor","this","baseUrl","concat","getSettings","response","fetch","result","json","ok","Error","error","console","updateSettings","settingsData","method","headers","body","JSON","stringify","validateSettings","settings","errors","restaurantName","push","email","test","phone","operatingHours","forEach","day","dayHours","closed","open","close","charAt","toUpperCase","slice","isValid","length","_categories$find","categories","setCategories","useState","menuItems","setMenuItems","selectedCategory","setSelectedCategory","showCategoryForm","setShowCategoryForm","showItemForm","setShowItemForm","editingCategory","setEditingCategory","editingItem","setEditingItem","loading","setLoading","setError","draggedCategory","setDraggedCategory","dragOverIndex","setDragOverIndex","categoryForm","setCategoryForm","nameAL","nameEN","nameIT","slug","displayOrder","itemForm","setItemForm","categoryId","descriptionAL","descriptionEN","descriptionIT","ingredientsAL","ingredientsEN","ingredientsIT","price","isVegetarian","isSpicy","isRecommended","isNew","imageUrl","loadMenuItems","useCallback","async","arguments","undefined","MenuService","getMenuItems","success","data","loadCategories","getCategories","categoriesData","id","useEffect","resetCategoryForm","handleDragLeave","resetItemForm","_jsx","className","children","_jsxs","onClick","disabled","map","category","index","draggable","onDragStart","e","handleDragStart","dataTransfer","effectAllowed","onDragOver","handleDragOver","preventDefault","dropEffect","onDragLeave","onDrop","dropIndex","newCategories","movedCategory","splice","ordersToUpdate","updateCategoryOrders","handleDrop","title","stopPropagation","handleCategoryEdit","window","confirm","deleteCategory","handleCategoryDelete","_Fragment","find","c","item","currency","toString","handleItemEdit","deleteMenuItem","itemId","handleItemDelete","onSubmit","updateCategory","createCategory","type","value","onChange","name","_objectSpread","target","toLowerCase","replace","required","parseInt","itemData","parseFloat","updateMenuItem","createMenuItem","rows","placeholder","step","checked","RestaurantLayout","tables","setTables","x","y","size","seats","status","selectedTable","setSelectedTable","updateTableStatus","tableId","newStatus","prev","table","getTableColor","renderTable","commonProps","key","handleTableClick","style","cursor","fill","stroke","strokeWidth","filter","transition","width","height","rx","viewBox","patternUnits","cx","cy","r","textAnchor","fontSize","fontWeight","dominantBaseline","pointerEvents","textShadow","renderTableLabel","t","reduce","sum","TimeSlotModal","_ref","_slot$isActive","slot","onClose","onSave","formData","setFormData","time","maxCapacity","duration","isActive","handleChange","min","max","CapacityModal","_ref2","onUpdate","daysOfWeek","capacities","setCapacities","initialCapacities","_slot$capacityOverrid2","override","capacityOverrides","dayOfWeek","handleCapacityChange","dayId","capacity","timeSlotId","alert","TimeSlotManagement","timeSlots","setTimeSlots","showAddModal","setShowAddModal","editingSlot","setEditingSlot","showCapacityModal","setShowCapacityModal","selectedSlot","setSelectedSlot","short","fetchTimeSlots","formatTime","timeString","hours","minutes","split","hour","ampm","getCapacityForDay","_slot$capacityOverrid","handleDeleteSlot","slotData","handleUpdateSlot","BlogManagement","activeTab","setActiveTab","posts","setPosts","setSuccess","showPostModal","setShowPostModal","editingPost","setEditingPost","postForm","setPostForm","titleAL","titleEN","titleIT","excerptAL","excerptEN","excerptIT","contentAL","contentEN","contentIT","metaDescriptionAL","metaDescriptionEN","metaDescriptionIT","metaKeywordsAL","metaKeywordsEN","metaKeywordsIT","featuredImageUrl","featuredImageAlt","isPublished","isFeatured","showCategoryModal","setShowCategoryModal","searchTerm","setSearchTerm","filterCategory","setFilterCategory","filterPublished","setFilterPublished","loadData","postsResult","categoriesResult","Promise","all","blogService","getPosts","language","includePosts","err","message","clearMessages","handleTitleChange","field","formType","form","setForm","updates","generateSlug","filteredPosts","post","_post$excerpt","matchesSearch","includes","excerpt","matchesCategory","matchesPublished","cat","handleCreatePost","src","alt","viewCount","Date","createdAt","toLocaleDateString","handleEditPost","deletePost","postId","handleDeletePost","handleCreateCategory","description","postCount","handleEditCategory","handleDeleteCategory","validation","validatePostData","join","updatePost","createPost","validateCategoryData","ViewReservationModal","_reservation$id","reservation","guests","dateString","date","weekday","year","month","backgroundColor","getStatusColor","color","padding","borderRadius","textTransform","toLocaleString","minute","hour12","specialRequests","UpdateReservationModal","isLoading","selectedStatus","setSelectedStatus","htmlFor","label","option","AddReservationModal","_ref3","handleInputChange","selectedDate","today","setHours","num","toISOString","Dashboard","_process$env$REACT_AP","isSignedIn","user","useUser","reservations","setReservations","stats","setStats","totalReservations","pendingReservations","activeBookings","completedReservations","showViewModal","setShowViewModal","showUpdateModal","setShowUpdateModal","selectedReservation","setSelectedReservation","addingReservation","setAddingReservation","updatingReservation","setUpdatingReservation","sidebarCollapsed","setSidebarCollapsed","handleResize","innerWidth","addEventListener","removeEventListener","restaurantSettings","setRestaurantSettings","address","monday","tuesday","wednesday","thursday","friday","saturday","sunday","websiteUrl","facebookUrl","instagramUrl","emailNotifications","smsNotifications","loadingSettings","setLoadingSettings","savingSettings","setSavingSettings","dateFilter","setDateFilter","filteredReservations","setFilteredReservations","dateFilterActive","setDateFilterActive","fetchData","filterDate","options","reservationsResult","reservationService","getAll","total","pending","confirmed","completed","loadRestaurantSettings","Navigate","to","adminUserIds","process","location","href","refreshData","currentFilter","handleDateFilterChange","handleTodayFilter","clearDateFilter","getCurrentReservations","restaurantSettingsService","saveRestaurantSettings","handleRestaurantInfoSubmit","FormData","updatedSettings","get","handleOperatingHoursSubmit","updatedOperatingHours","firstName","UserButton","d","ry","points","x1","y1","x2","y2","renderTabContent","colSpan","handleViewReservation","handleUpdateReservation","MenuManagement","_restaurantSettings$o","_restaurantSettings$o2","_restaurantSettings$o3","_restaurantSettings$o4","_restaurantSettings$o5","create","reservationData","reload","reservationId","updateStatus","apiBaseUrl","published","featured","limit","offset","search","params","URLSearchParams","append","getPost","postData","active","categoryData","uploadImage","file","blogPostId","altText","deleteImage","imageId","deleteImageByFilename","filename","trim"],"sourceRoot":""}