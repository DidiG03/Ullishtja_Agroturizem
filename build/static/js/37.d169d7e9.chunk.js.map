{"version":3,"file":"static/js/37.d169d7e9.chunk.js","mappings":"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","sources":["services/blogService.js","components/Layout.js","components/Blog.js"],"sourcesContent":["// Blog Service\n// Frontend service for blog operations\n\nclass BlogService {\n  constructor() {\n    this.apiBaseUrl = process.env.NODE_ENV === 'production' \n      ? '' \n      : process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  }\n\n  // Blog Posts API calls\n\n  async getPosts(options = {}) {\n    const {\n      published,\n      category,\n      featured,\n      limit,\n      offset,\n      search,\n      language = 'al'\n    } = options;\n\n    const params = new URLSearchParams();\n    if (published !== undefined) params.append('published', published);\n    if (category) params.append('category', category);\n    if (featured !== undefined) params.append('featured', featured);\n    if (limit) params.append('limit', limit);\n    if (offset) params.append('offset', offset);\n    if (search) params.append('search', search);\n    if (language) params.append('language', language);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?${params}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch posts');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error fetching blog posts:', error);\n      throw error;\n    }\n  }\n\n  async getPost(id, language = 'al') {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}&language=${language}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch post');\n      }\n\n      return result.data[0] || null;\n    } catch (error) {\n      console.error('Error fetching blog post:', error);\n      throw error;\n    }\n  }\n\n  async createPost(postData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to create post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error creating blog post:', error);\n      throw error;\n    }\n  }\n\n  async updatePost(id, postData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error updating blog post:', error);\n      throw error;\n    }\n  }\n\n  async deletePost(id) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/posts?id=${id}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete post');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting blog post:', error);\n      throw error;\n    }\n  }\n\n  // Blog Categories API calls\n\n  async getCategories(options = {}) {\n    const {\n      active,\n      language = 'al',\n      includePosts = false\n    } = options;\n\n    const params = new URLSearchParams();\n    if (active !== undefined) params.append('active', active);\n    if (language) params.append('language', language);\n    if (includePosts) params.append('includePosts', includePosts);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?${params}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to fetch categories');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error fetching blog categories:', error);\n      throw error;\n    }\n  }\n\n  async createCategory(categoryData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(categoryData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to create category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error creating blog category:', error);\n      throw error;\n    }\n  }\n\n  async updateCategory(id, categoryData) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(categoryData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to update category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error updating blog category:', error);\n      throw error;\n    }\n  }\n\n  async deleteCategory(id) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/categories?id=${id}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete category');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting blog category:', error);\n      throw error;\n    }\n  }\n\n  // Image Upload API calls\n\n  async uploadImage(file, options = {}) {\n    const { blogPostId, title, altText } = options;\n\n    const formData = new FormData();\n    formData.append('image', file);\n    if (blogPostId) formData.append('blogPostId', blogPostId);\n    if (title) formData.append('title', title);\n    if (altText) formData.append('altText', altText);\n\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to upload image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      throw error;\n    }\n  }\n\n  async deleteImage(imageId) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload?imageId=${imageId}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      throw error;\n    }\n  }\n\n  async deleteImageByFilename(filename) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/blog/upload?filename=${filename}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to delete image');\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      throw error;\n    }\n  }\n\n  // Utility methods\n\n  generateSlug(title) {\n    return title\n      .toLowerCase()\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\n      .replace(/-+/g, '-') // Replace multiple hyphens with single\n      .trim('-'); // Remove leading/trailing hyphens\n  }\n\n  validatePostData(postData) {\n    const errors = [];\n\n    if (!postData.titleAL) errors.push('Albanian title is required');\n    if (!postData.titleEN) errors.push('English title is required');\n    if (!postData.titleIT) errors.push('Italian title is required');\n    if (!postData.contentAL) errors.push('Albanian content is required');\n    if (!postData.contentEN) errors.push('English content is required');\n    if (!postData.contentIT) errors.push('Italian content is required');\n    if (!postData.categoryId) errors.push('Category is required');\n    if (!postData.slug) errors.push('Slug is required');\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  validateCategoryData(categoryData) {\n    const errors = [];\n\n    if (!categoryData.nameAL) errors.push('Albanian name is required');\n    if (!categoryData.nameEN) errors.push('English name is required');\n    if (!categoryData.nameIT) errors.push('Italian name is required');\n    if (!categoryData.slug) errors.push('Slug is required');\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n}\n\nconst blogService = new BlogService();\nexport default blogService;","import React, { useState, useEffect, useMemo } from 'react';\nimport { translations } from '../translations';\nimport googleReviewsService from '../services/googleReviews';\nimport googleAdsService from '../services/googleAdsService';\nimport '../App.css'; // Import main app styles for navbar and footer\n\n// Helper function to get language from localStorage or detect browser language\nconst getInitialLanguage = () => {\n  // Check if user has a stored preference\n  const storedLanguage = localStorage.getItem('preferredLanguage');\n  if (storedLanguage && ['al', 'en', 'it'].includes(storedLanguage)) {\n    return storedLanguage;\n  }\n\n  // Check URL parameters\n  const urlParams = new URLSearchParams(window.location.search);\n  const urlLang = urlParams.get('lang');\n  if (urlLang && ['al', 'en', 'it'].includes(urlLang)) {\n    localStorage.setItem('preferredLanguage', urlLang);\n    return urlLang;\n  }\n\n  // If no stored preference, try to detect browser language\n  const browserLang = navigator.language || navigator.languages[0];\n  if (browserLang) {\n    const langCode = browserLang.toLowerCase();\n    if (langCode.startsWith('sq') || langCode.startsWith('al')) return 'al'; // Albanian\n    if (langCode.startsWith('it')) return 'it'; // Italian\n    if (langCode.startsWith('en')) return 'en'; // English\n  }\n\n  // Default to Albanian\n  return 'al';\n};\n\nconst Layout = ({ children, currentLanguage: propLanguage }) => {\n  const [currentLanguage, setCurrentLanguage] = useState(propLanguage || getInitialLanguage());\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [reviewsData, setReviewsData] = useState(null);\n\n  const t = useMemo(() => translations[currentLanguage], [currentLanguage]);\n\n  // Effect to sync language changes\n  useEffect(() => {\n    if (propLanguage && propLanguage !== currentLanguage) {\n      setCurrentLanguage(propLanguage);\n    }\n  }, [propLanguage, currentLanguage]);\n\n  // Effect to load reviews data\n  useEffect(() => {\n    const loadReviews = async () => {\n      try {\n        const data = await googleReviewsService.getReviews();\n        setReviewsData(data);\n      } catch (error) {\n        console.error('Failed to load reviews:', error);\n      }\n    };\n\n    loadReviews();\n  }, []);\n\n  // Language change handler\n  const changeLanguage = (lang) => {\n    setCurrentLanguage(lang);\n    localStorage.setItem('preferredLanguage', lang);\n    \n    // Update URL\n    const url = new URL(window.location);\n    if (lang !== 'al') {\n      url.searchParams.set('lang', lang);\n    } else {\n      url.searchParams.delete('lang');\n    }\n    window.history.replaceState({}, '', url);\n\n    // Dispatch custom event for other components\n    window.dispatchEvent(new CustomEvent('languageChanged', { \n      detail: { language: lang } \n    }));\n  };\n\n  // Mobile menu handlers\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n\n  const closeMobileMenu = () => {\n    setMobileMenuOpen(false);\n  };\n\n  // Handle directions click with conversion tracking\n  const handleDirectionsClick = () => {\n    googleAdsService.trackGetDirectionsConversion();\n  };\n\n  // Memoize review display components\n  const reviewsDisplay = useMemo(() => {\n    if (!reviewsData) return { stars: '⭐⭐⭐⭐⭐', rating: '0.0', count: '0' };\n    \n    return {\n      stars: googleReviewsService.generateStarDisplay(reviewsData.averageRating),\n      rating: googleReviewsService.formatRating(reviewsData.averageRating),\n      count: reviewsData.totalReviews\n    };\n  }, [reviewsData]);\n\n  return (\n    <div className=\"layout\">\n      {/* Navigation Header */}\n      <header className=\"navbar\">\n        <div className=\"nav-container\">\n          <div className=\"logo-container\">\n            <a href=\"/\">\n              <img src=\"https://ucarecdn.com/f2ebac4d-52d3-45f7-997d-3e2dea09557b/ullishtja_logo.jpeg\" alt=\"Ullishtja Agroturizem - Authentic Albanian Restaurant Logo\" className=\"logo\" />\n            </a>\n          </div>\n          \n          {/* Desktop Navigation */}\n          <nav className=\"nav-menu desktop-nav\">\n            <a href=\"/#home\" className=\"nav-link\" onClick={closeMobileMenu}>{t.nav.home}</a>\n            <a href=\"/#about\" className=\"nav-link\" onClick={closeMobileMenu}>{t.nav.about}</a>\n            <a href=\"/#menu\" className=\"nav-link\" onClick={closeMobileMenu}>{t.nav.menu}</a>\n            <a href={`/blog${currentLanguage !== 'al' ? '?lang=' + currentLanguage : ''}`} className=\"nav-link\" onClick={closeMobileMenu}>{t.nav.blog}</a>\n            <a href=\"/#contact\" className=\"nav-link\" onClick={closeMobileMenu}>{t.nav.contact}</a>\n          </nav>\n\n          {/* Mobile Navigation */}\n          <div className={`mobile-nav ${mobileMenuOpen ? 'active' : ''}`}>\n            <div className=\"mobile-nav-header\">\n              <img src=\"https://ucarecdn.com/f2ebac4d-52d3-45f7-997d-3e2dea09557b/ullishtja_logo.jpeg\" alt=\"Ullishtja Agroturizem - Albanian Restaurant Mobile Logo\" className=\"mobile-logo\" />\n              <button className=\"mobile-close-btn\" onClick={closeMobileMenu}>×</button>\n            </div>\n            <nav className=\"mobile-nav-menu\">\n              <a href=\"/#home\" className=\"mobile-nav-link\" onClick={closeMobileMenu}>{t.nav.home}</a>\n              <a href=\"/#about\" className=\"mobile-nav-link\" onClick={closeMobileMenu}>{t.nav.about}</a>\n              <a href=\"/#menu\" className=\"mobile-nav-link\" onClick={closeMobileMenu}>{t.nav.menu}</a>\n              <a href={`/blog${currentLanguage !== 'al' ? '?lang=' + currentLanguage : ''}`} className=\"mobile-nav-link\" onClick={closeMobileMenu}>{t.nav.blog}</a>\n              <a href=\"/#contact\" className=\"mobile-nav-link\" onClick={closeMobileMenu}>{t.nav.contact}</a>\n            </nav>\n          </div>\n\n          {/* Mobile Menu Overlay */}\n          {mobileMenuOpen && <div className=\"mobile-overlay\" onClick={closeMobileMenu}></div>}\n\n          {/* Hamburger Menu Button */}\n          <button className=\"hamburger-btn\" onClick={toggleMobileMenu} aria-label=\"Toggle mobile menu\">\n            <span className={`hamburger-line ${mobileMenuOpen ? 'active' : ''}`}></span>\n            <span className={`hamburger-line ${mobileMenuOpen ? 'active' : ''}`}></span>\n            <span className={`hamburger-line ${mobileMenuOpen ? 'active' : ''}`}></span>\n          </button>\n\n\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"main-content\">\n        {React.cloneElement(children, { currentLanguage, translations: t })}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <div className=\"footer-content\">\n            {/* Footer Main Content */}\n            <div className=\"footer-main\">\n              {/* Company Info */}\n              <div className=\"footer-section footer-company\">\n                <img src=\"/images/ullishtja_logo.jpeg\" alt=\"Ullishtja Agroturizem - Albanian Restaurant Footer Logo\" className=\"footer-logo\" />\n                <p className=\"footer-description\">{t.footer.tagline}</p>\n                <div className=\"footer-rating\">\n                  <div className=\"rating-stars\">\n                    {reviewsDisplay.stars}\n                  </div>\n                  <span className=\"rating-text\">\n                    {reviewsData ? `${reviewsDisplay.rating} (${reviewsDisplay.count} ${t.hero.googleReviews})` : t.hero.loadingReviews}\n                  </span>\n                </div>\n              </div>\n\n              {/* Contact Information */}\n              <div className=\"footer-section footer-contact\">\n                <h4 className=\"footer-title\">{t.contact.title}</h4>\n                <div className=\"contact-item\">\n                  <span className=\"contact-icon\">📍</span>\n                  <span className=\"contact-value\">Ullishtja Agroturizem, Durres, Albania</span>\n                </div>\n                <div className=\"contact-item\">\n                  <span className=\"contact-icon\">📞</span>\n                  <a href=\"tel:+35568409405\" className=\"contact-value contact-link\">\n                    +355 68 409 0405\n                  </a>\n                </div>\n                <div className=\"contact-item\">\n                  <span className=\"contact-icon\">📧</span>\n                  <a href=\"mailto:hi@ullishtja-agroturizem.com\" className=\"contact-value contact-link\">\n                    hi@ullishtja-agroturizem.com\n                  </a>\n                </div>\n                <div className=\"contact-item\">\n                  <span className=\"contact-icon\">🕒</span>\n                  <span className=\"contact-value\">\n                    {t.contact.info.hours.text.replace('\\n', ' • ')}\n                  </span>\n                </div>\n              </div>\n\n              {/* Quick Links */}\n              <div className=\"footer-section footer-links\">\n                <h4 className=\"footer-title\">{t.footer.quickLinks}</h4>\n                <nav className=\"footer-nav\">\n                  <a href=\"/#home\" className=\"footer-link\" onClick={closeMobileMenu}>{t.nav.home}</a>\n                  <a href=\"/#about\" className=\"footer-link\" onClick={closeMobileMenu}>{t.nav.about}</a>\n                  <a href=\"/#menu\" className=\"footer-link\" onClick={closeMobileMenu}>{t.nav.menu}</a>\n                  <a href={`/blog${currentLanguage !== 'al' ? '?lang=' + currentLanguage : ''}`} className=\"footer-link\" onClick={closeMobileMenu}>{t.nav.blog}</a>\n                  <a href=\"/#contact\" className=\"footer-link\" onClick={closeMobileMenu}>{t.nav.contact}</a>\n                </nav>\n              </div>\n\n              {/* Services */}\n              <div className=\"footer-section footer-services\">\n                <h4 className=\"footer-title\">{t.footer.services}</h4>\n                <div className=\"service-list\">\n                  <span className=\"service-item\">🍽️ {t.footer.alaCarte}</span>\n                  <span className=\"service-item\">🎉 {t.footer.events}</span>\n                  <span className=\"service-item\">🌿 {t.footer.organic}</span>\n                  <span className=\"service-item\">🏔️ {t.footer.views}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Footer Bottom */}\n            <div className=\"footer-bottom\">\n              <div className=\"footer-copyright\">\n                <p>{t.footer.copyright}</p>\n              </div>\n              <div className=\"footer-links-bottom\">\n                <a href=\"https://maps.google.com/?q=41.340278,19.433569+(Ullishtja+Agroturizem)\" \n                   target=\"_blank\" \n                   rel=\"noopener noreferrer\"\n                   className=\"footer-map-link\"\n                   onClick={handleDirectionsClick}>\n                  🗺️ {t.footer.directions}\n                </a>\n                <a href=\"tel:+35568409405\" className=\"footer-phone-link\">\n                  📞 {t.footer.callUs}\n                </a>\n                <div className=\"language-selector footer-lang\">\n                  <button \n                    className={`lang-btn ${currentLanguage === 'al' ? 'active' : ''}`}\n                    onClick={() => changeLanguage('al')}\n                  >\n                    AL\n                  </button>\n                  <button \n                    className={`lang-btn ${currentLanguage === 'en' ? 'active' : ''}`}\n                    onClick={() => changeLanguage('en')}\n                  >\n                    EN\n                  </button>\n                  <button \n                    className={`lang-btn ${currentLanguage === 'it' ? 'active' : ''}`}\n                    onClick={() => changeLanguage('it')}\n                  >\n                    IT\n                  </button>\n                </div>\n                <div className=\"admin-link-container\">\n                  <a href=\"/admin-login\" className=\"admin-link\">Admin</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;","import React, { useState, useEffect, useMemo } from 'react';\nimport './Blog.css';\nimport { translations } from '../translations';\nimport SEOHead from './SEOHead';\nimport Layout from './Layout';\nimport blogService from '../services/blogService';\n\n// Helper function to get language from localStorage or detect browser language\nconst getInitialLanguage = () => {\n  // Check if user has a stored preference\n  const storedLanguage = localStorage.getItem('preferredLanguage');\n  if (storedLanguage && ['al', 'en', 'it'].includes(storedLanguage)) {\n    return storedLanguage;\n  }\n\n  // Check URL parameters\n  const urlParams = new URLSearchParams(window.location.search);\n  const urlLang = urlParams.get('lang');\n  if (urlLang && ['al', 'en', 'it'].includes(urlLang)) {\n    localStorage.setItem('preferredLanguage', urlLang);\n    return urlLang;\n  }\n\n  // If no stored preference, try to detect browser language\n  const browserLang = navigator.language || navigator.languages[0];\n  if (browserLang) {\n    const langCode = browserLang.toLowerCase();\n    if (langCode.startsWith('sq') || langCode.startsWith('al')) return 'al'; // Albanian\n    if (langCode.startsWith('it')) return 'it'; // Italian\n    if (langCode.startsWith('en')) return 'en'; // English\n  }\n\n  // Default to Albanian\n  return 'al';\n};\n\nconst Blog = ({ currentLanguage: propLanguage }) => {\n  const [currentLanguage, setCurrentLanguage] = useState(propLanguage || getInitialLanguage());\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [expandedPosts, setExpandedPosts] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  \n  // New state for database data\n  const [posts, setPosts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const t = translations[currentLanguage] || translations.al;\n\n  // Load data from database\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError('');\n\n        const [postsResult, categoriesResult] = await Promise.all([\n          blogService.getPosts({ \n            published: true, \n            language: currentLanguage \n          }),\n          blogService.getCategories({ \n            active: true, \n            language: currentLanguage \n          })\n        ]);\n\n        setPosts(postsResult.data || []);\n        setCategories(categoriesResult.data || []);\n      } catch (err) {\n        console.error('Error loading blog data:', err);\n        setError('Failed to load blog content. Please try again later.');\n        // Fallback to empty arrays so the component doesn't break\n        setPosts([]);\n        setCategories([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [currentLanguage]);\n\n  // Effect to listen for language changes and update URL\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const newLanguage = getInitialLanguage();\n      if (newLanguage !== currentLanguage) {\n        setCurrentLanguage(newLanguage);\n      }\n    };\n\n    // Listen for storage changes (when language is changed in other tabs/components)\n    window.addEventListener('storage', handleStorageChange);\n    \n    // Also check for prop changes\n    if (propLanguage && propLanguage !== currentLanguage) {\n      setCurrentLanguage(propLanguage);\n    }\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [propLanguage, currentLanguage]);\n\n  // Effect to update URL when language changes\n  useEffect(() => {\n    const url = new URL(window.location);\n    if (currentLanguage !== 'al') {\n      url.searchParams.set('lang', currentLanguage);\n    } else {\n      url.searchParams.delete('lang');\n    }\n    \n    // Update URL without refreshing the page\n    window.history.replaceState({}, '', url);\n  }, [currentLanguage]);\n\n  // Filter posts by category (database-driven)\n  const filteredPosts = useMemo(() => {\n    if (selectedCategory === 'all') return posts;\n    return posts.filter(post => post.category.slug === selectedCategory);\n  }, [posts, selectedCategory]);\n\n  // Get available categories (including \"all\")\n  const availableCategories = useMemo(() => {\n    const getAllCategoriesText = () => {\n      switch (currentLanguage) {\n        case 'al': return 'Të Gjitha';\n        case 'it': return 'Tutti';\n        case 'en': return 'All';\n        default: return 'Të Gjitha';\n      }\n    };\n\n    const allCategory = {\n      slug: 'all',\n      name: getAllCategoriesText()\n    };\n    return [allCategory, ...categories];\n  }, [categories, currentLanguage]);\n\n\n\n  // Format date for display\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = { \n      year: 'numeric',\n      month: 'long', \n      day: 'numeric' \n    };\n    \n    // Use appropriate locale based on current language\n    const locale = currentLanguage === 'al' ? 'sq-AL' : \n                   currentLanguage === 'it' ? 'it-IT' : 'en-US';\n    \n    return date.toLocaleDateString(locale, options);\n  }\n\n  // Toggle expanded state for post excerpt\n  const togglePostExpansion = (postId) => {\n    setExpandedPosts(prev => ({\n      ...prev,\n      [postId]: !prev[postId]\n    }));\n  };\n\n  // Render post content with HTML\n  const renderContent = (content) => {\n    return <div dangerouslySetInnerHTML={{ __html: content }} />;\n  };\n\n  // Get related posts (exclude current post and same category)\n  const getRelatedPosts = (currentPost) => {\n    return posts\n      .filter(post => post.id !== currentPost.id)\n      .slice(0, 3);\n  };\n\n  // Truncate excerpt for preview\n  const truncateExcerpt = (text, maxLength = 200) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  // Handle back to blog from single post view\n  const handleBackToBlog = () => {\n    setSelectedPost(null);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n\n\n  // Single post view\n  if (selectedPost) {\n    const relatedPosts = getRelatedPosts(selectedPost);\n    \n    return (\n      <Layout currentLanguage={currentLanguage}>\n        <div className=\"blog-container\">\n          <SEOHead \n            currentLanguage={currentLanguage}\n            pageSection=\"blog\"\n            customTitle={`${selectedPost.title} - ${t.blog.title}`}\n            customDescription={selectedPost.excerpt}\n            customKeywords={`${selectedPost.title}, ${t.blog.categories[selectedPost.category]}, agriturismo, agricultura, ${currentLanguage === 'al' ? 'Ullishtja Shqipëri' : currentLanguage === 'it' ? 'Ullishtja Albania' : 'Ullishtja Albania'}`}\n          />\n          \n          <div className=\"blog-header\">\n            <div className=\"container\">\n              <div className=\"blog-header-top\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <button \n                  className=\"back-to-blog-btn\"\n                  onClick={handleBackToBlog}\n                  style={{ marginTop: '30px' }}\n                >\n                  ←\n                </button>\n                <h1 className=\"blog-title\" style={{ margin: 0 }}>{t.blog.title}</h1>\n                <div style={{ width: 40 }} /> {/* Spacer to balance the layout */}\n              </div>\n            </div>\n          </div>\n\n        <article className=\"single-post\">\n          <div className=\"container\">\n            <header className=\"post-header\">\n              <h1 className=\"post-title\">{selectedPost.title}</h1>\n              <div className=\"post-meta\">\n                <span className=\"post-date\">\n                  {t.blog.publishedOn} {formatDate(selectedPost.publishDate)}\n                </span>\n                <span className=\"post-category\">\n                  {t.blog.categories[selectedPost.category]}\n                </span>\n              </div>\n            </header>\n            \n            <div className=\"post-content\">\n              {renderContent(selectedPost.content)}\n            </div>\n\n            {relatedPosts.length > 0 && (\n              <section className=\"related-posts\">\n                <h3>{t.blog.relatedPosts}</h3>\n                <div className=\"related-posts-grid\">\n                  {relatedPosts.map(post => (\n                    <article \n                      key={post.id} \n                      className=\"related-post-card\"\n                      onClick={() => setSelectedPost(post)}\n                    >\n                      <h4>{post.title}</h4>\n                      <p>{truncateExcerpt(post.excerpt, 100)}</p>\n                      <span className=\"read-more-link\">{t.blog.readMore}</span>\n                    </article>\n                  ))}\n                </div>\n              </section>\n            )}\n          </div>\n        </article>\n        </div>\n      </Layout>\n    );\n  }\n\n  // Blog listing view\n  return (\n    <Layout currentLanguage={currentLanguage}>\n      <div className=\"blog-container\">\n        <SEOHead \n          currentLanguage={currentLanguage}\n          pageSection=\"blog\"\n          customTitle={`${t.blog.title} - ${currentLanguage === 'al' ? 'Ullishtja Agroturizem' : currentLanguage === 'it' ? 'Ullishtja Agriturismo' : 'Ullishtja Agritourism'}`}\n          customDescription={t.blog.subtitle}\n          customKeywords={`blog agriturismo, agricultura organike, kuzhina tradicionale, ${currentLanguage === 'al' ? 'Ullishtja blog' : currentLanguage === 'it' ? 'blog Ullishtja' : 'Ullishtja blog'}, sustainable farming, traditional recipes`}\n        />\n        \n        <div className=\"blog-header\">\n          <div className=\"container\">\n            <h1 className=\"blog-title\">{t.blog.title}</h1>\n            <p className=\"blog-subtitle\">{t.blog.subtitle}</p>\n          </div>\n        </div>\n\n        <div className=\"blog-content\">\n          <div className=\"container\">\n          {/* Loading State */}\n          {loading && (\n            <div className=\"loading-state\">\n              <div className=\"loading-spinner\"></div>\n              <p>{currentLanguage === 'al' ? 'Po ngarkohet...' : currentLanguage === 'it' ? 'Caricamento...' : 'Loading...'}</p>\n            </div>\n          )}\n\n          {/* Error State */}\n          {error && (\n            <div className=\"error-state\">\n              <p>{error}</p>\n            </div>\n          )}\n\n          {/* Content */}\n          {!loading && !error && (\n            <>\n              {/* Category Filter */}\n              <div className=\"category-filter\">\n                {availableCategories.map(category => (\n                  <button\n                    key={category.slug}\n                    className={`category-btn ${selectedCategory === category.slug ? 'active' : ''}`}\n                    onClick={() => setSelectedCategory(category.slug)}\n                  >\n                    {category.name}\n                  </button>\n                ))}\n              </div>\n              {/* Blog Posts Grid */}\n              <div className=\"blog-posts-grid\">\n                {filteredPosts.length === 0 ? (\n                  <div className=\"no-posts\">\n                    <p>{currentLanguage === 'al' ? 'Nuk ka postime në këtë kategori.' : \n                         currentLanguage === 'it' ? 'Nessun post in questa categoria.' : \n                         'No posts in this category.'}</p>\n                  </div>\n                ) : (\n                  filteredPosts.map(post => (\n                    <article key={post.id} className=\"blog-post-card\">\n                      {post.featuredImageUrl && (\n                        <div className=\"post-card-image\">\n                          <img \n                            src={post.featuredImageUrl} \n                            alt={post.featuredImageAlt || post.title}\n                          />\n                        </div>\n                      )}\n                      \n                      <div className=\"post-card-header\">\n                        <h2 className=\"post-card-title\">{post.title}</h2>\n                        <div className=\"post-card-meta\">\n                          <span className=\"post-date\">\n                            {formatDate(post.publishedAt || post.createdAt)}\n                          </span>\n                          <span className=\"post-category\">\n                            {post.category.name}\n                          </span>\n                          {post.isFeatured && (\n                            <span className=\"featured-badge\">\n                              {currentLanguage === 'al' ? 'I Zgjedhur' : \n                               currentLanguage === 'it' ? 'In Evidenza' : \n                               'Featured'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"post-card-content\">\n                        <p className=\"post-excerpt\">\n                          {expandedPosts[post.id] \n                            ? post.excerpt \n                            : truncateExcerpt(post.excerpt || '', 150)\n                          }\n                        </p>\n                        \n                        <div className=\"post-card-actions\">\n                          {post.excerpt && post.excerpt.length > 150 && (\n                            <button \n                              className=\"expand-btn\"\n                              onClick={() => togglePostExpansion(post.id)}\n                            >\n                              {expandedPosts[post.id] ? \n                                (currentLanguage === 'al' ? 'Më pak' : currentLanguage === 'it' ? 'Meno' : 'Less') :\n                                (currentLanguage === 'al' ? 'Më shumë' : currentLanguage === 'it' ? 'Di più' : 'More')\n                              }\n                            </button>\n                          )}\n                          \n                          <button \n                            className=\"read-full-btn\"\n                            onClick={() => {\n                              setSelectedPost(post);\n                              window.scrollTo({ top: 0, behavior: 'smooth' });\n                            }}\n                          >\n                            {currentLanguage === 'al' ? 'Lexo Artikullin e Plotë' : \n                             currentLanguage === 'it' ? 'Leggi Articolo Completo' : \n                             'Read Full Article'}\n                          </button>\n                        </div>\n                      </div>\n                    </article>\n                  ))\n                )}\n              </div>\n            </>\n          )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Blog;"],"names":["constructor","this","apiBaseUrl","getPosts","options","arguments","length","undefined","published","category","featured","limit","offset","search","language","params","URLSearchParams","append","response","fetch","concat","result","json","ok","Error","error","console","getPost","id","data","createPost","postData","method","headers","body","JSON","stringify","updatePost","deletePost","getCategories","active","includePosts","createCategory","categoryData","updateCategory","deleteCategory","uploadImage","file","blogPostId","title","altText","formData","FormData","deleteImage","imageId","deleteImageByFilename","filename","generateSlug","toLowerCase","replace","trim","validatePostData","errors","titleAL","push","titleEN","titleIT","contentAL","contentEN","contentIT","categoryId","slug","isValid","validateCategoryData","nameAL","nameEN","nameIT","_ref","children","currentLanguage","propLanguage","setCurrentLanguage","useState","getInitialLanguage","storedLanguage","localStorage","getItem","includes","urlLang","window","location","get","setItem","browserLang","navigator","languages","langCode","startsWith","mobileMenuOpen","setMobileMenuOpen","reviewsData","setReviewsData","t","useMemo","translations","useEffect","async","googleReviewsService","getReviews","loadReviews","changeLanguage","lang","url","URL","searchParams","set","delete","history","replaceState","dispatchEvent","CustomEvent","detail","closeMobileMenu","reviewsDisplay","stars","generateStarDisplay","averageRating","rating","formatRating","count","totalReviews","_jsxs","className","_jsx","href","src","alt","onClick","nav","home","about","menu","blog","contact","toggleMobileMenu","React","footer","tagline","hero","googleReviews","loadingReviews","info","hours","text","quickLinks","services","alaCarte","events","organic","views","copyright","target","rel","handleDirectionsClick","googleAdsService","trackGetDirectionsConversion","directions","callUs","selectedPost","setSelectedPost","expandedPosts","setExpandedPosts","selectedCategory","setSelectedCategory","posts","setPosts","categories","setCategories","loading","setLoading","setError","al","postsResult","categoriesResult","Promise","all","blogService","err","loadData","handleStorageChange","newLanguage","addEventListener","removeEventListener","filteredPosts","filter","post","availableCategories","name","getAllCategoriesText","formatDate","dateString","date","Date","locale","toLocaleDateString","year","month","day","truncateExcerpt","maxLength","substring","handleBackToBlog","scrollTo","top","behavior","relatedPosts","currentPost","slice","Layout","SEOHead","pageSection","customTitle","customDescription","excerpt","customKeywords","style","display","alignItems","justifyContent","marginTop","margin","width","publishedOn","publishDate","content","dangerouslySetInnerHTML","__html","map","readMore","subtitle","_Fragment","featuredImageUrl","featuredImageAlt","publishedAt","createdAt","isFeatured","togglePostExpansion","postId","prev","_objectSpread"],"sourceRoot":""}