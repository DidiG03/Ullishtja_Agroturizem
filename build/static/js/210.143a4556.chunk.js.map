{"version":3,"file":"static/js/210.143a4556.chunk.js","mappings":"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","sources":["components/MobileMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MenuService from '../services/menuService';\nimport './MobileMenu.css';\n\nfunction MobileMenu({ currentLanguage, onClose }) {\n  const [categories, setCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadMenu();\n  }, []);\n\n  useEffect(() => {\n    // Store the current scroll position\n    const scrollY = window.scrollY;\n    \n    // Prevent body scrolling when menu is open\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n    document.body.style.top = `-${scrollY}px`;\n    document.body.style.width = '100%';\n    document.body.style.height = '100%';\n    \n    // Add class to html element for additional control\n    document.documentElement.classList.add('mobile-menu-open');\n    \n    return () => {\n      // Restore scrolling when menu closes\n      document.body.style.overflow = '';\n      document.body.style.position = '';\n      document.body.style.top = '';\n      document.body.style.width = '';\n      document.body.style.height = '';\n      \n      // Remove class from html element\n      document.documentElement.classList.remove('mobile-menu-open');\n      \n      // Restore scroll position\n      window.scrollTo(0, scrollY);\n    };\n  }, []);\n\n  const loadMenu = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await MenuService.getCompleteMenu();\n      \n      if (data && data.success) {\n        const categoriesData = data.data || [];\n        setCategories(Array.isArray(categoriesData) ? categoriesData : []);\n        if (Array.isArray(categoriesData) && categoriesData.length > 0) {\n          setActiveCategory(categoriesData[0].id);\n        }\n      } else {\n        throw new Error(data?.error || 'Failed to load menu');\n      }\n    } catch (error) {\n      console.error('Error loading menu:', error);\n      setError('Failed to load menu. Please try again.');\n      setCategories([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getLocalizedText = (item, field) => {\n    const fieldMap = {\n      'al': `${field}AL`,\n      'en': `${field}EN`, \n      'it': `${field}IT`\n    };\n    \n    const fieldName = fieldMap[currentLanguage] || fieldMap['al'];\n    return item[fieldName] || item[`${field}AL`] || '';\n  };\n\n  const getCurrentCategory = () => {\n    return categories.find(cat => cat.id === activeCategory);\n  };\n\n  const getCurrentItems = () => {\n    const category = getCurrentCategory();\n    return category?.menuItems || [];\n  };\n\n  const formatPrice = (price) => {\n    if (!price) return '';\n    return `${price} ALL`;\n  };\n\n  const getMenuTitle = () => {\n    switch (currentLanguage) {\n      case 'en': return 'Full Menu';\n      case 'it': return 'Menu Completo';\n      default: return 'Menuja e Plotë';\n    }\n  };\n\n  const getLoadingText = () => {\n    switch (currentLanguage) {\n      case 'en': return 'Loading menu...';\n      case 'it': return 'Caricamento menu...';\n      default: return 'Po ngarkohet menuja...';\n    }\n  };\n\n  const getErrorText = () => {\n    switch (currentLanguage) {\n      case 'en': return 'Failed to load menu. Please try again.';\n      case 'it': return 'Errore nel caricamento del menu. Riprova.';\n      default: return 'Dështoi ngarkimi i menusë. Provo përsëri.';\n    }\n  };\n\n  const getIngredientLabel = () => {\n    switch (currentLanguage) {\n      case 'en': return 'Ingredients';\n      case 'it': return 'Ingredienti';\n      default: return 'Përbërësit';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"mobile-menu-overlay\">\n        <div className=\"mobile-menu-container\">\n          <div className=\"mobile-menu-header\">\n            <h1>{getMenuTitle()}</h1>\n            <button className=\"mobile-close-btn\" onClick={onClose}>✕</button>\n          </div>\n          <div className=\"mobile-menu-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>{getLoadingText()}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mobile-menu-overlay\">\n        <div className=\"mobile-menu-container\">\n          <div className=\"mobile-menu-header\">\n            <h1>{getMenuTitle()}</h1>\n            <button className=\"mobile-close-btn\" onClick={onClose}>✕</button>\n          </div>\n          <div className=\"mobile-menu-error\">\n            <p>{getErrorText()}</p>\n            <button className=\"retry-btn\" onClick={loadMenu}>\n              {currentLanguage === 'en' ? 'Retry' : currentLanguage === 'it' ? 'Riprova' : 'Provo Përsëri'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mobile-menu-overlay\" onClick={(e) => e.target === e.currentTarget && onClose()}>\n      <div className=\"mobile-menu-container\">\n        {/* Header */}\n        <div className=\"mobile-menu-header\">\n          <h1>{getMenuTitle()}</h1>\n          <button className=\"mobile-close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        {/* Main Menu Layout */}\n        <div className=\"mobile-menu-layout\">\n          {/* Categories Navigation */}\n          <div className=\"mobile-categories-nav\">\n            {categories.map(category => (\n              <button\n                key={category.id}\n                className={`mobile-category-btn ${activeCategory === category.id ? 'active' : ''}`}\n                onClick={() => setActiveCategory(category.id)}\n              >\n                {getLocalizedText(category, 'name')}\n              </button>\n            ))}\n          </div>\n\n          {/* Menu Items */}\n          <div className=\"mobile-menu-content\">\n          {getCurrentCategory() && (\n            <>\n              <h2 className=\"mobile-category-title\">\n                {getLocalizedText(getCurrentCategory(), 'name')}\n              </h2>\n              <div className=\"mobile-menu-items\">\n                {getCurrentItems().map((item, index) => (\n                  <div key={index} className=\"mobile-menu-item\">\n                    <div className=\"mobile-item-header\">\n                      <h3 className=\"mobile-item-name\">\n                        {getLocalizedText(item, 'name')}\n                      </h3>\n                      <span className=\"mobile-item-price\">\n                        {formatPrice(item.price)}\n                      </span>\n                    </div>\n                    {getLocalizedText(item, 'description') && (\n                      <p className=\"mobile-item-description\">\n                        {getLocalizedText(item, 'description')}\n                      </p>\n                    )}\n                    {getLocalizedText(item, 'ingredients') && (\n                      <div className=\"mobile-item-ingredients\">\n                        <small>\n                          <strong>{getIngredientLabel()}:</strong> {getLocalizedText(item, 'ingredients')}\n                        </small>\n                      </div>\n                    )}\n                    <div className=\"mobile-item-badges\">\n                      {item.isVegetarian && (\n                        <span className=\"mobile-badge vegetarian\">🌱 \n                          {currentLanguage === 'en' ? 'Vegetarian' : \n                           currentLanguage === 'it' ? 'Vegetariano' : 'Vegjetarian'}\n                        </span>\n                      )}\n                      {item.isSpicy && (\n                        <span className=\"mobile-badge spicy\">🌶️ \n                          {currentLanguage === 'en' ? 'Spicy' : \n                           currentLanguage === 'it' ? 'Piccante' : 'I Djegët'}\n                        </span>\n                      )}\n                      {item.isRecommended && (\n                        <span className=\"mobile-badge recommended\">⭐ \n                          {currentLanguage === 'en' ? 'Recommended' : \n                           currentLanguage === 'it' ? 'Consigliato' : 'I Rekomanduar'}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MobileMenu;"],"names":["_ref","currentLanguage","onClose","categories","setCategories","useState","activeCategory","setActiveCategory","loading","setLoading","error","setError","useEffect","loadMenu","scrollY","window","document","body","style","overflow","position","top","concat","width","height","documentElement","classList","add","remove","scrollTo","async","data","MenuService","getCompleteMenu","success","Error","categoriesData","Array","isArray","length","id","console","getLocalizedText","item","field","fieldMap","getCurrentCategory","find","cat","getMenuTitle","getLoadingText","getErrorText","getIngredientLabel","_jsx","className","children","_jsxs","onClick","e","target","currentTarget","map","category","_Fragment","getCurrentItems","menuItems","index","price","isVegetarian","isSpicy","isRecommended"],"sourceRoot":""}