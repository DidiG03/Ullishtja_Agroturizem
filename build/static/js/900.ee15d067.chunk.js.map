{"version":3,"file":"static/js/900.ee15d067.chunk.js","mappings":"kLAGA,MAyFA,EAzFsBA,IAAmC,IAAlC,OAAEC,EAAM,iBAAEC,GAAkBF,EAiBjD,IAfAG,EAAAA,EAAAA,WAAU,KACR,GAAIF,EAAQ,CAEV,MAAMG,EAAmBC,SAASC,KAAKC,MAAMC,SAM7C,OAHAH,SAASC,KAAKC,MAAMC,SAAW,SAGxB,KACLH,SAASC,KAAKC,MAAMC,SAAWJ,EAEnC,GACC,CAACH,KAECA,EAAQ,OAAO,KAmCpB,OACEQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAAC,kBAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,sCAC5BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBC,SAAC,8CAGhCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAjCrB,CAChB,CACEE,KAAM,KACNC,KAAM,QACNC,KAAM,2BACNC,SAAU,mBACVC,YAAa,mCAEf,CACEJ,KAAM,KACNC,KAAM,UACNC,KAAM,2BACNC,SAAU,WACVC,YAAa,uBAEf,CACEJ,KAAM,KACNC,KAAM,WACNC,KAAM,2BACNC,SAAU,aACVC,YAAa,yBAcEC,IAAKC,IACdP,EAAAA,EAAAA,MAAA,UAEEF,UAAU,kBACVU,QAASA,IA/CSD,KAE5BE,aAAaC,QAAQ,oBAAqBH,GAC1CE,aAAaC,QAAQ,mBAAoB,QAGzCpB,EAAiBiB,IAyCQI,CAAqBJ,EAASN,MAAMF,SAAA,EAEnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEQ,EAASJ,QACzCH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEQ,EAASL,QACzCL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEQ,EAASH,YAC7CP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAAEQ,EAASF,kBAElDR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAC,aAV3BQ,EAASN,UAepBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,wE","sources":["components/LanguageModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './LanguageModal.css';\n\nconst LanguageModal = ({ isOpen, onSelectLanguage }) => {\n  // Disable scrolling when modal is open\n  useEffect(() => {\n    if (isOpen) {\n      // Store original overflow value\n      const originalOverflow = document.body.style.overflow;\n      \n      // Disable scrolling\n      document.body.style.overflow = 'hidden';\n      \n      // Cleanup function to restore scrolling\n      return () => {\n        document.body.style.overflow = originalOverflow;\n      };\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const handleLanguageSelect = (language) => {\n    // Store the language preference in localStorage\n    localStorage.setItem('preferredLanguage', language);\n    localStorage.setItem('hasVisitedBefore', 'true');\n    \n    // Call the parent function to set the language\n    onSelectLanguage(language);\n  };\n\n  const languages = [\n    {\n      code: 'al',\n      name: 'Shqip',\n      flag: '🇦🇱',\n      greeting: 'Mirë se vini!',\n      description: 'Vazhdoni në gjuhën shqipe'\n    },\n    {\n      code: 'en',\n      name: 'English',\n      flag: '🇺🇸',\n      greeting: 'Welcome!',\n      description: 'Continue in English'\n    },\n    {\n      code: 'it',\n      name: 'Italiano',\n      flag: '🇮🇹',\n      greeting: 'Benvenuti!',\n      description: 'Continua in italiano'\n    }\n  ];\n\n  return (\n    <div className=\"language-modal-overlay\">\n      <div className=\"language-modal\">\n        <div className=\"language-modal-header\">\n          <div className=\"welcome-icon\">🌍</div>\n          <h2 className=\"modal-title\">Welcome to Ullishtja Agriturizem</h2>\n          <p className=\"modal-subtitle\">Please select your preferred language</p>\n        </div>\n\n        <div className=\"language-options\">\n          {languages.map((language) => (\n            <button\n              key={language.code}\n              className=\"language-option\"\n              onClick={() => handleLanguageSelect(language.code)}\n            >\n              <div className=\"language-flag\">{language.flag}</div>\n              <div className=\"language-info\">\n                <div className=\"language-name\">{language.name}</div>\n                <div className=\"language-greeting\">{language.greeting}</div>\n                <div className=\"language-description\">{language.description}</div>\n              </div>\n              <div className=\"language-arrow\">→</div>\n            </button>\n          ))}\n        </div>\n\n        <div className=\"modal-footer\">\n          <p className=\"modal-note\">\n            You can change the language at any time from the footer menu\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageModal;"],"names":["_ref","isOpen","onSelectLanguage","useEffect","originalOverflow","document","body","style","overflow","_jsx","className","children","_jsxs","code","name","flag","greeting","description","map","language","onClick","localStorage","setItem","handleLanguageSelect"],"sourceRoot":""}